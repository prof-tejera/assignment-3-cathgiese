{"version":3,"sources":["TimerProvider.js","components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","components/generic/Button/Button.js","components/generic/DisplayTime/DisplayTime.js","components/generic/Selector/Selector.js","components/generic/Input/Input.js","utils/helpers.js","components/selectors/TimerForm.js","components/timers/Timer.js","views/TimersView.js","views/AddView.js","views/HistoryView.js","App.js","index.js"],"names":["TimerContext","React","createContext","TimerProvider","_ref","children","timers","setTimers","useState","window","location","hash","JSON","parse","decodeURIComponent","slice","isRunning","setIsRunning","totalTime","setTotalTime","localStorage","getItem","parseInt","isReset","setIsReset","isEditing","setIsEditing","activeTimerIndex","setActiveTimerIndex","totalTimeCalc","globalCount","i","length","status","type","minutes","rounds","seconds","restart","map","timer","encodeURIComponent","stringify","createElement","Provider","value","nextTimer","setItem","startStop","remove","_ref3","id","indexOf","newTimers","edit","_ref2","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","RenderComponent","_templateObject4","Documentation","table","_templateObject5","DocumentComponent","title","component","propDocs","doc","index","key","prop","description","defaultValue","primaryColor","sizeMapping","small","medium","large","Dot","span","props","size","color","DotGroup","Loading","Button","text","btnProps","Object","assign","className","Screen","displayStyle","Selector","label","items","selectProps","name","Input","inputName","inputValue","inputProps","placeholder","makeId","result","characters","charactersLength","charAt","Math","floor","random","minNumbers","Array","keys","number","secNumbers","roundNumbers","timersTypes","TimerForm","useContext","setMinutes","setSeconds","clicked","setClicked","setRounds","work","setWork","rest","setRest","setType","setDescription","useEffect","intervalId","setTimeout","clearTimeout","onChange","e","target","onClick","handleTimer","timersCopy","from","Timer","time","setTime","roundsCount","setRoundsCount","workStatus","setWorkStatus","minutesCalc","secondsCalc","DisplayTime","Timers","TimerDiv","ControlButtons","TimersView","Link","to","DragDropContext","onDragEnd","reorderedItem","splice","source","destination","Droppable","droppableId","provided","droppableProps","ref","innerRef","Draggable","concat","draggableId","dragHandleProps","draggableProps","Selectors","AddView","Workouts","Workout","HistoryView","history","Nav","App","ErrorBoundary","fallback","Router","Routes","Route","path","element","DocumentationView","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"qWAGO,MAAMA,EAAeC,IAAMC,cAAc,IA+JjCC,I,UAAAA,EA7JOC,IAAmB,IAAlB,SAAEC,GAAUD,EAC/B,MAAOE,EAAQC,GAAaC,mBAASC,OAAOC,SAASC,KAAOC,KAAKC,MAAMC,mBAAmBL,OAAOC,SAASC,MAAMI,MAAM,IAAI,KACnHC,EAAWC,GAAgBT,mBAAS,OACpCU,EAAWC,GAAgBX,mBAASY,aAAaC,QAAQ,aAAeC,SAASF,aAAaC,QAAQ,cAAc,IACpHE,EAASC,GAAchB,mBAAS,OAChCiB,EAAWC,GAAgBlB,mBAAS,OAGpCmB,EAAkBC,GAAuBpB,mBAAS,GAEnDqB,EAAgBA,KAClB,IAAIC,EAAc,EAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,EAAO0B,OAAQD,IAC/B,GAAyB,aAArBzB,EAAOyB,GAAGE,OACV,GAAuB,OAAnB3B,EAAOyB,GAAGG,KAAe,CAGzBJ,GAFkBxB,EAAOyB,GAAGI,QAAUb,SAAShB,EAAOyB,GAAGK,QACvC9B,EAAOyB,GAAGM,QAAUf,SAAShB,EAAOyB,GAAGK,YAIjC,WAAnB9B,EAAOyB,GAAGG,KACfJ,GAAexB,EAAOyB,GAAGM,QAIzBP,GAAgBxB,EAAOyB,GAAGI,QAAU7B,EAAOyB,GAAGM,QAI1DlB,EAAaW,IA8BXQ,EAAUA,KACZd,GAAW,GACXP,EAAa,MACbW,EAAoB,GACpBtB,EAAOiC,IAAKC,GAAUA,EAAMP,OAAS,SACrC3B,EAAO,GAAG2B,OAAS,UACnB1B,EAAUD,GACVa,EAAa,GAGbV,OAAOC,SAASC,KAAO8B,mBAAmB7B,KAAK8B,UAAUpC,KA6D7D,OACIL,IAAA0C,cAAC3C,EAAa4C,SAAQ,CAClBC,MAAO,CACHvC,SACAC,YACAS,YACAC,eACAC,YACAC,eACAU,gBACAF,mBACAC,sBACAkB,UA9GMA,KACVnB,IAAqBrB,EAAO0B,OAAO,GACnC1B,EAAOqB,GAAkBM,OAAS,WAClC1B,EAAUD,GACVgC,IAEIlB,aAAaC,QAAQ,WACrBD,aAAa2B,QAAQ,UAAW3B,aAAaC,QAAQ,WAAWT,KAAK8B,UAAUpC,IAI/Ec,aAAa2B,QAAQ,UAAWnC,KAAK8B,UAAUpC,MAInDA,EAAOqB,GAAkBM,OAAS,WAClC3B,EAAOqB,EAAiB,GAAGM,OAAS,UACpCL,EAAoBD,EAAiB,GACrCpB,EAAUD,GACVuB,KAIJpB,OAAOC,SAASC,KAAO8B,mBAAmB7B,KAAK8B,UAAUpC,KAwFjDgC,UACAU,UAvEMA,KACVhC,EACAC,EAAa,MAEM,IAAdC,GACLW,IACAZ,GAAa,GACbO,EAAW,QAGXP,GAAa,GACbO,EAAW,OAIff,OAAOC,SAASC,KAAO8B,mBAAmB7B,KAAK8B,UAAUpC,KAyDjDiB,UACAC,aACAyB,OAlDGC,IAAW,IAAV,GAACC,GAAGD,EAEhB,GAAsB,IAAlB5C,EAAO0B,OACPzB,EAAU,QAGT,CACD,MACMwB,EADQzB,EAAOiC,IAAKC,GAAUA,EAAMW,KAAOA,GACjCC,SAAQ,GAExB,GAAU,IAANrB,EAAS,CAET,MAAMsB,EAAY/C,EAAOS,MAAM,GAC/BsC,EAAU,GAAGpB,OAAS,UACtB1B,EAAU8C,QAKV9C,EAAU,IACND,EAAOS,MAAM,EAAGgB,MAChBzB,EAAOS,MAAMgB,EAAI,KAK7BZ,EAAa,GACbS,EAAoB,GAGpBnB,OAAOC,SAASC,KAAO8B,mBAAmB7B,KAAK8B,UAAUpC,KAqBjDgD,KAxDCC,IAAW,IAAV,GAACJ,GAAGI,EACd7B,EAAayB,IAwDL1B,YACAC,iBAENrB,I,QC3JV,MAAMmD,EAAUC,IAAOC,IAAGC,MAAAC,YAAA,6DAKpBC,EAAYJ,IAAOC,IAAGI,MAAAF,YAAA,iFAMtBG,EAAQN,IAAOC,IAAGM,MAAAJ,YAAA,oGAOlBK,EAAkBR,IAAOC,IAAGQ,MAAAN,YAAA,sEAM5BO,EAAgBV,IAAOW,MAAKC,MAAAT,YAAA,QAqCnBU,I,MAAAA,EAnCWlE,IAAqC,IAApC,MAAEmE,EAAK,UAAEC,EAAS,SAAEC,GAAUrE,EACvD,OACEH,IAAA0C,cAACa,EAAO,KACNvD,IAAA0C,cAACoB,EAAK,KAAEQ,GACRtE,IAAA0C,cAACkB,EAAS,KACR5D,IAAA0C,cAACsB,EAAe,KAAEO,GAClBvE,IAAA0C,cAACwB,EAAa,KACZlE,IAAA0C,cAAA,aACE1C,IAAA0C,cAAA,UACE1C,IAAA0C,cAAA,UAAI,QACJ1C,IAAA0C,cAAA,UAAI,eACJ1C,IAAA0C,cAAA,UAAI,QACJ1C,IAAA0C,cAAA,UAAI,mBAGR1C,IAAA0C,cAAA,aACG8B,EAASlC,IAAI,CAACmC,EAAKC,IAEhB1E,IAAA0C,cAAA,MAAIiC,IAAKD,GACP1E,IAAA0C,cAAA,UAAK+B,EAAIG,MACT5E,IAAA0C,cAAA,UAAK+B,EAAII,aACT7E,IAAA0C,cAAA,UAAK+B,EAAIxC,MACTjC,IAAA0C,cAAA,UACE1C,IAAA0C,cAAA,YAAO+B,EAAIK,sBChD/B,MAAMC,EAAe,UAEfC,EAAc,CAClBC,MAAO,GACPC,OAAQ,GACRC,MAAO,IAGHvB,EAAYJ,IAAOC,IAAGC,MAAAC,YAAA,sWAqBtByB,EAAM5B,IAAO6B,KAAIxB,MAAAF,YAAA,kWAEX2B,GAAUA,EAAMC,KACfD,GAAUA,EAAMC,KACND,GAAUA,EAAME,OAiBjCC,EAAWjC,IAAOC,IAAGM,MAAAJ,YAAA,4BAwBZ+B,I,IAAAA,EApBCvF,IAAgD,IAA/C,KAAEoF,EAAO,SAAQ,MAAEC,EAAQT,GAAc5E,EACxD,OACEH,IAAA0C,cAACkB,EAAS,KACR5D,IAAA0C,cAAC+C,EAAQ,KACPzF,IAAA0C,cAAC0C,EAAG,CAACG,KAAMP,EAAYO,GAAOC,MAAOA,IACrCxF,IAAA0C,cAAC0C,EAAG,CAACG,KAAMP,EAAYO,GAAOC,MAAOA,KAEvCxF,IAAA0C,cAAC+C,EAAQ,KACPzF,IAAA0C,cAAC0C,EAAG,CAACG,KAAMP,EAAYO,GAAOC,MAAOA,IACrCxF,IAAA0C,cAAC0C,EAAG,CAACG,KAAMP,EAAYO,GAAOC,MAAOA,OC5D7C,MAAM5B,EAAYJ,IAAOC,IAAGC,MAAAC,YAAA,wEAMtBG,EAAQN,IAAOC,IAAGI,MAAAF,YAAA,8BA6BTO,MAtBOA,IAElBlE,IAAA0C,cAACkB,EAAS,KACR5D,IAAA0C,cAAA,WACE1C,IAAA0C,cAACoB,EAAK,KAAC,iBACP9D,IAAA0C,cAAC2B,EAAiB,CAChBC,MAAM,mBACNC,UAAWvE,IAAA0C,cAACgD,EAAO,MACnBlB,SAAU,CACR,CACEI,KAAM,OACNC,YAAa,0CACb5C,KAAM,SACN6C,aAAc,e,aCnBba,MAXAxF,IAAmC,IAAlC,MAAEqF,EAAK,KAAEI,KAASC,GAAU1F,EAC1C,OACEH,IAAA0C,cAAA,SAAAoD,OAAAC,OAAA,CACEC,UAAWR,GACPK,GAEHD,I,MCGUK,MATF9F,IAAyC,IAAxC,QAAE+B,EAAO,QAAEE,EAAO,aAAE8D,GAAc/F,EAC9C,OACEH,IAAA0C,cAAA,OAAKsD,UAAWE,GACbhE,EAAQ,IACRE,EAAQ,M,MCWF+D,MAfEhG,IAAuC,IAAtC,MAAEiG,EAAK,MAAEC,KAAUC,GAAanG,EAEhD,OACEH,IAAA0C,cAAA,aACE1C,IAAA0C,cAAA,SAAAoD,OAAAC,OAAA,CACEC,UAAU,UACVO,KAAK,gBACDD,GACHD,GAEFD,I,MCEQI,MAZDrG,IAA+C,IAA9C,UAAEsG,EAAS,WAAEC,KAAeC,GAAYxG,EACrD,OACEH,IAAA0C,cAAA,QAAAoD,OAAAC,OAAA,CACEC,UAAU,gBACVY,YAAY,0BAGRD,KCJH,MAAME,EAASA,KAIlB,IAHA,IAAIC,EAAS,GACTC,EAAa,iEACbC,EAAmBD,EAAWhF,OACzBD,EAAI,EAAGA,EAAI,GAAIA,IACtBgF,GAAUC,EAAWE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWJ,IAEzD,OAAOF,GAMEO,EAFU,IAAIC,MAAM,IAAIC,QAEIjF,IAAIkF,GACzCxH,IAAA0C,cAAA,UAAQE,MAAO4E,EAAQ7C,IAAK6C,GAASA,IAI5BC,EADU,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACtBnF,IAAIkF,GACrCxH,IAAA0C,cAAA,UAAQE,MAAO4E,EAAQ7C,IAAK6C,GAASA,IAIhCE,EADY,IAAIJ,MAAM,IAAIC,QACMzG,MAAM,GAAGwB,IAAIkF,GACnDxH,IAAA0C,cAAA,UAAQE,MAAO4E,EAAQ7C,IAAK6C,GAASA,IAI/BG,EADU,CAAC,YAAa,YAAa,KAAM,UACdrF,IAAIL,GACvCjC,IAAA0C,cAAA,UAAQE,MAAOX,EAAM0C,IAAK1C,GAAOA,I,MC2HzB2F,MAtJGzH,IAAqB,IAApB,aAAC+F,GAAa/F,EAE7B,MAAM,OAACE,EAAM,UAAEC,EAAS,UAAEkB,EAAS,aAAEC,EAAY,aAAEP,GAAgB2G,qBAAW9H,IACvEmC,EAAS4F,GAAcvH,mBAAS,IAChC6B,EAAS2F,GAAcxH,mBAAS,MAChCyH,EAASC,GAAc1H,mBAAS,OAChC4B,EAAQ+F,GAAa3H,mBAAS,IAC9B4H,EAAMC,GAAW7H,mBAAS,MAC1B8H,EAAMC,GAAW/H,mBAAS,MAC1B0B,EAAMsG,GAAWhI,mBAAS,cAC1BsE,EAAa2D,GAAkBjI,mBAAS,IAE/CkI,oBAAU,KACN,IAAIC,EAKJ,OAHIV,IACAU,EAAaC,WAAW,KAAOV,EAAW,OAAQ,MAE/C,IAAMW,aAAaF,IAEzB,CAACV,EAASC,IAuEf,OACIjI,IAAA0C,cAAA,OAAKsD,UAAWE,GACZlG,IAAA0C,cAACyD,EAAQ,CACL0C,SAAUC,GAAKP,EAAQO,EAAEC,OAAOnG,OAChCyD,MAAOsB,IACX3H,IAAA0C,cAAA,WACI1C,IAAA0C,cAAC8D,EAAK,CACFqC,SAAUC,GAAKN,EAAeM,EAAEC,OAAOnG,UAGrC,cAATX,GAAiC,cAATA,EACrBjC,IAAA0C,cAAA,WAAK1C,IAAA0C,cAACyD,EAAQ,CACVC,MAAM,MACNyC,SAAUC,GAAKhB,EAA0B,IAAfgB,EAAEC,OAAOnG,OACnCyD,MAAOgB,IACXrH,IAAA0C,cAACyD,EAAQ,CACLC,MAAM,MACNyC,SAAUC,GAAKf,EAA0B,IAAfe,EAAEC,OAAOnG,OACnCyD,MAAOoB,KAAsB,GAG3B,OAATxF,EACGjC,IAAA0C,cAAA,WAAK1C,IAAA0C,cAACyD,EAAQ,CACVC,MAAM,MACNyC,SAAUC,GAAKhB,EAA0B,IAAfgB,EAAEC,OAAOnG,OACnCyD,MAAOgB,IACXrH,IAAA0C,cAACyD,EAAQ,CACLC,MAAM,MACNyC,SAAUC,GAAKf,EAA0B,IAAfe,EAAEC,OAAOnG,OACnCyD,MAAOoB,IACXzH,IAAA0C,cAACyD,EAAQ,CACLC,MAAM,SACNyC,SAAUC,GAAKZ,EAAUY,EAAEC,OAAOnG,OAClCyD,MAAOqB,KAAwB,GAG7B,WAATzF,EACGjC,IAAA0C,cAAA,WAAK1C,IAAA0C,cAACyD,EAAQ,CACVC,MAAM,MACNyC,SAAUC,GAAKV,EAAuB,IAAfU,EAAEC,OAAOnG,OAChCyD,MAAOoB,IACXzH,IAAA0C,cAACyD,EAAQ,CACLC,MAAM,MACNyC,SAAUC,GAAKR,EAAuB,IAAfQ,EAAEC,OAAOnG,OAChCyD,MAAOoB,IACXzH,IAAA0C,cAACyD,EAAQ,CACLC,MAAM,SACNyC,SAAUC,GAAKZ,EAAUY,EAAEC,OAAOnG,OAClCyD,MAAOqB,KAAwB,GAGvC1H,IAAA0C,cAACiD,EAAM,CACHC,KAAMoC,EAAU,eAAaxG,EAAY,SAAW,MACpDgE,MAAOwC,EAAU,2BAA6B,iBAC9CgB,QA3HQC,KAChB,GAAkB,OAAdzH,EAAoB,CAEpB,MACMM,EADQzB,EAAOiC,IAAKC,GAAUA,EAAMW,KAAO1B,GACjC2B,SAAQ,GAElB+F,EAAa5B,MAAM6B,KAAK9I,GAG9B6I,EAAWpH,GADE,WAATG,EACY,CACZiB,GAAI1B,EACJS,KAAMA,EACND,OAAc,IAANF,EAAU,UAAY,QAC9B+C,YAAaA,EACbzC,SAAUiG,EAAOF,GAAMhG,EACvBA,OAAQA,EACRgG,KAAMA,EACNE,KAAMA,GAIU,CACZnF,GAAI1B,EACJS,KAAMA,EACND,OAAc,IAANF,EAAU,UAAY,QAC9B+C,YAAaA,EACb3C,QAASA,EACTE,QAASA,EACTD,OAAQA,EACRgG,KAAMA,EACNE,KAAMA,GAGd/H,EAAU4I,GACVzH,EAAa,WAKbnB,EADa,WAAT2B,EAEA,IAAI5B,EACJ,CAAC6C,GAAI2D,IACL5E,KAAMA,EACND,OAA0B,IAAlB3B,EAAO0B,OAAe,UAAY,QAC1C8C,YAAaA,EACbzC,SAAUiG,EAAOF,GAAMhG,EACvBA,OAAQA,EACRgG,KAAMA,EACNE,KAAMA,IAKF,IAAIhI,EACJ,CAAC6C,GAAI2D,IACL5E,KAAMA,EACND,OAA0B,IAAlB3B,EAAO0B,OAAe,UAAY,QAC1C8C,YAAaA,EACb3C,QAASA,EACTE,QAASA,EACTD,OAAQA,EACRgG,KAAMA,EACNE,KAAMA,KAGlBnH,EAAa,GACb+G,GAAW,QCkFJmB,I,MAAAA,EA5KDjJ,IAA4E,IAA3E,QAAC+B,EAAO,QAAEE,EAAO,OAAEJ,EAAM,OAAEG,EAAM,KAAEF,EAAI,YAAE4C,EAAW,KAAEsD,EAAI,KAAEE,EAAI,GAAEnF,GAAG/C,EAChF,MAAM,UAACY,EAAS,UAAE8B,EAAS,QAAEvB,EAAO,UAAEE,EAAS,UAAEP,EAAS,aAAEC,GAAgB2G,qBAAW9H,IAChFsJ,EAAMC,GAAW/I,mBAASY,aAAaC,QAAQ,QAAUC,SAASF,aAAaC,QAAQ,SAAS,IAChGmI,EAAaC,GAAkBjJ,mBAASY,aAAaC,QAAQ,UAAYC,SAASF,aAAaC,QAAQ,WAAW,IAClHqI,EAAYC,GAAiBnJ,oBAASY,aAAaC,QAAQ,SAAUD,aAAaC,QAAQ,SAGjGqH,oBAAU,KAEN,IAAIC,EAwFJ,MArFa,cAATzG,IACIlB,GAAwB,YAAXiB,GAAwBqH,GAAQ,IAC7CX,EAAaC,WAAW,KAAOW,EAAQD,EAAO,GAAGnI,EAAaD,EAAU,IAAK,IAG7EF,GAAasI,IAAUnH,EAAQE,GAAuB,YAAXJ,GAC3Ca,IACAyG,EAAQ,KAGQ,aAAXtH,GAAyBV,IAC9BgI,EAAQ,IAKH,cAATrH,IACIlB,GAAwB,YAAXiB,GAAwBqH,EAAO,EAC5CX,EAAaC,WAAW,KAAOW,EAAQD,EAAO,GAAGnI,EAAaD,EAAU,IAAK,GAGxEF,GAAsB,IAATsI,GAAyB,YAAXrH,GAChCa,IACAyG,EAAQpH,EAAQE,KAEA,aAAXJ,GAAyBV,IAC9BgI,EAAQpH,EAAQE,IAKX,OAATH,IACIlB,GAAwB,YAAXiB,GAAwBqH,EAAO,EAE5CX,EAAaC,WAAW,KAAOW,EAAQD,EAAO,GAAGnI,EAAaD,EAAU,IAAK,GAExEF,GAAwB,YAAXiB,GAAiC,IAATqH,GAAclH,GAAU,IAClEmH,EAAQpH,EAAQE,GAChBoH,EAAeD,EAAY,GAC3Bb,EAAaC,WAAW,KAAOW,EAAQD,EAAO,GAAGnI,EAAaD,EAAU,IAAK,IAE7D,IAAhBsI,GACA1G,IACAyG,EAAQpH,EAAQE,GAChBoH,EAAerH,KAEC,aAAXH,GAAyBV,KAC9BgI,EAAQpH,EAAQE,GAChBoH,EAAerH,KAKV,WAATF,IACIlB,GAAwB,YAAXiB,GAAgC,IAARqH,GAAaE,EAAc,IAEhEb,EAAaC,WAAW,KAAOW,EAAQD,EAAO,GAAGnI,EAAaD,EAAU,IAAK,IAG7EF,GAAwB,YAAXiB,GAAwByH,GAAuB,IAATJ,GAAcE,EAAc,IAC/ED,EAAQjB,GACRqB,EAAc,MACdhB,EAAaC,WAAW,KAAOW,EAAQD,EAAO,GAAGnI,EAAaD,EAAU,IAAK,IAG7EF,GAAwB,YAAXiB,GAAuC,OAAfyH,GAAgC,IAATJ,GAAcE,EAAc,GACxFD,EAAQnB,GACRuB,GAAc,GACdF,EAAeD,EAAY,IAGP,IAAhBA,GACJ1G,IACAyG,EAAQnB,GACRqB,EAAerH,GACfuH,GAAc,KAGE,aAAX1H,GAAyBV,KAC9BgI,EAAQnB,GACRqB,EAAerH,GACfuH,GAAc,KAIf,IAAMd,aAAaF,IAE3B,CAAC3H,EACAkB,EACAY,EACAb,EACAqH,EACAnH,EACAE,EACAD,EACAoH,EACAjI,EACA+G,EACAF,EACAsB,EACAxI,EACAC,IAGH,MAAMyI,EAAczC,KAAKC,MAAOkC,EAAO,KAAU,KAG3CO,EAAc1C,KAAKC,MAAOkC,EAAO,IAAQ,KAiB/C,OAfDZ,oBAAU,KAEF1H,IACAI,aAAa2B,QAAQ,OAAQuG,GAC7BlI,aAAa2B,QAAQ,SAAUyG,GAC/BpI,aAAa2B,QAAQ,YAAa7B,GACrB,WAATgB,GACAd,aAAa2B,QAAQ,OAAQ2G,KAKrC,CAAC1I,EAAW6I,EAAaL,EAAaF,EAAMI,EAAYxI,EAAWgB,IAInEjC,IAAA0C,cAAA,OAAKsD,UAAU,kBAEXhG,IAAA0C,cAACkF,EAAS,CACV1B,aAAc1E,IAAc0B,EAAK,iBAAkB,WAGlC,KAAhB2B,EAAqB7E,IAAA0C,cAAA,UAAKmC,GAAoB,GAC/C7E,IAAA0C,cAAA,cAAST,GAAc,IAEb,WAATA,EACGjC,IAAA0C,cAAA,YAAOyF,EAAK,IAAI,WAASE,EAAK,IAAI,UAClCrI,IAAA0C,cAAA,YAAOR,EAAQ,IAAK,IAAEE,EAAQ,IAAI,KAE5B,WAATH,GAA8B,OAATA,EAClBjC,IAAA0C,cAAA,WAAK1C,IAAA0C,cAAA,cAAQ,WAAgB,IAAEP,GAAgB,GAEzC,WAATF,GAA8B,OAATA,EAClBjC,IAAA0C,cAAA,WAAK1C,IAAA0C,cAAA,cAAQ,qBAA0B,IAAE6G,GAAqB,GAGxD,WAATtH,EACGjC,IAAA0C,cAACmH,EAAW,CACZ3H,QAAQ,IACRE,QAASwH,EACT1D,aAAc1E,IAAc0B,EAAK,SAAuB,YAAXlB,EAAuB,0BAAwC,aAAXA,EAAwB,2BAA6B,oBAEtJhC,IAAA0C,cAACmH,EAAW,CACZ3H,QAASyH,EACTvH,QAASwH,EACT1D,aAAc1E,IAAc0B,EAAK,SAAuB,YAAXlB,EAAuB,0BAAwC,aAAXA,EAAwB,2BAA6B,sBCnKtK,MAAM8H,GAAStG,IAAOC,IAAGC,MAAAC,YAAA,gHAOnBoG,GAAWvG,IAAOC,IAAGI,MAAAF,YAAA,8FAOrBqG,GAAiBxG,IAAOC,IAAGM,MAAAJ,YAAA,6IAwGlBsG,I,MAAAA,GA/FIA,KACjB,MAAM,OAAC5J,EAAM,UACPC,EAAS,UACTW,EAAS,UACTF,EAAS,QACTsB,EAAO,UACPU,EAAS,UACTF,EAAS,QACTvB,EAAO,OACP0B,EAAM,cACNpB,EAAa,KACbyB,EAAI,UACJ7B,GAAaqG,qBAAW9H,GAE9B0I,oBAAU,MACU,IAAdxH,GAAmBK,IACrBM,KAED,CAACX,EAAWK,EAASM,IAIxB,MAAM+H,EAAczC,KAAKC,MAAOlG,EAAY,KAAU,KAGhD2I,EAAc1C,KAAKC,MAAOlG,EAAY,IAAQ,KAUpD,OACEjB,IAAA0C,cAACsH,GAAc,KACbhK,IAAA0C,cAACwH,IAAI,CAACC,GAAG,QAAOnK,IAAA0C,cAACiD,EAAM,CAACC,KAAK,cAAcJ,MAAO,+BAAsCxF,IAAA0C,cAAA,WACxF1C,IAAA0C,cAACiD,EAAM,CACLC,KAAM,eACNJ,MAAO,4BACPwD,QAASF,IAAMtI,OAAOC,SAASC,KAAO8B,mBAAmB7B,KAAK8B,UAAUpC,OAC1EL,IAAA0C,cAACiD,EAAM,CACLC,KAAM7E,EAAY,gBAAkB,gBACpCiI,QAA2B,IAAlB3I,EAAO0B,OAAe,KAAOgB,EACtCyC,MAAOzE,EAAY,+BAA+B,6BACpDf,IAAA0C,cAACiD,EAAM,CACLC,KAAM,gBACNJ,MAAO,iBACPwD,QAA2B,IAAlB3I,EAAO0B,OAAe,KAAOc,IACxC7C,IAAA0C,cAACiD,EAAM,CACLC,KAAM,kBACNJ,MAAO,iBACPwD,QAA2B,IAAlB3I,EAAO0B,OAAe,KAAOM,IAC1CrC,IAAA0C,cAAA,UAAI,eAAaiH,EAAY,IAAEC,EAAY,KAC3C5J,IAAA0C,cAAC0H,IAAe,CAACC,UA5BMvD,IACvB,MAAMT,EAAQhG,GACPiK,GAAiBjE,EAAMkE,OAAOzD,EAAO0D,OAAO9F,MAAO,GAC1D2B,EAAMkE,OAAOzD,EAAO2D,YAAY/F,MAAO,EAAG4F,GAC1ChK,EAAU+F,GACVhE,MAwBErC,IAAA0C,cAACgI,IAAS,CAACC,YAAY,UACnBC,GACA5K,IAAA0C,cAACoH,GAAMhE,OAAAC,OAAA,GAAK6E,EAASC,eAAc,CAAEC,IAAKF,EAASG,WAChD1K,EAAOiC,IAAI,CAACC,EAAOmC,IAClB1E,IAAA0C,cAACsI,IAAS,CAACrG,IAAG,QAAAsG,OAAU1I,EAAMW,IAAMgI,YAAW,QAAAD,OAAU1I,EAAMW,IAAMwB,MAAOA,GACxEkG,GACA5K,IAAA0C,cAACqH,GAAQjE,OAAAC,OAAA,CAACpB,IAAG,SAAAsG,OAAW1I,EAAMW,KAAU0H,EAASO,gBAAqBP,EAASQ,eAAc,CAAEN,IAAKF,EAASG,WAC3G/K,IAAA0C,cAAC0G,EAAK,CACFlG,GAAIX,EAAMW,GACVjB,KAAMM,EAAMN,KACZ4C,YAAatC,EAAMsC,YACnB1C,OAAQI,EAAMJ,OACdD,QAASK,EAAML,QACfE,QAASG,EAAMH,QACfJ,OAAQO,EAAMP,OACdV,QAASA,EACT6G,KAAM5F,EAAM4F,KACZE,KAAM9F,EAAM8F,OAChBrI,IAAA0C,cAACiD,EAAM,CACHC,KAAM,OACNJ,MAAOhE,GAAaT,EAAY,SAAU,iBAC1CiI,QAASA,IAAM3F,EAAK,CAACH,GAAGX,EAAMW,OAClClD,IAAA0C,cAACiD,EAAM,CACHC,KAAM,SACNJ,MAAOhE,GAAaT,EAAY,SAAS,+BACzCiI,QAASA,IAAMhG,EAAO,CAACE,GAAGX,EAAMW,UAK3C0H,EAAShE,iBCjHtB,MAAMyE,GAAY7H,IAAOC,IAAGC,QAAAC,YAAA,qHAOtBwC,GAAW3C,IAAOC,IAAGI,QAAAF,YAAA,8FAkBZ2H,I,MAAAA,GAXCA,IAGZtL,IAAA0C,cAAC2I,GAAS,KACRrL,IAAA0C,cAACyD,GAAQ,KACTnG,IAAA0C,cAACkF,EAAS,QCrBhB,MAAM2D,GAAW/H,IAAOC,IAAGC,QAAAC,YAAA,gHAOrB6H,GAAUhI,IAAOC,IAAGI,QAAAF,YAAA,6IAqBX8H,I,GAAAA,GAZKA,KAElB,MAAMC,EAAUvK,aAAaC,QAAQ,WAErC,OACEpB,IAAA0C,cAAC6I,GAAQ,KACPvL,IAAA0C,cAAA,UAAI,sBAAuB1C,IAAA0C,cAAA,WAC3B1C,IAAA0C,cAAC8I,GAAO,KAAEE,KChBhB,MAAM9H,GAAYJ,IAAOC,IAAGC,QAAAC,YAAA,uEAMtBgI,GAAMA,IAER3L,IAAA0C,cAAA,WACE1C,IAAA0C,cAAA,UACE1C,IAAA0C,cAAA,UACE1C,IAAA0C,cAACwH,IAAI,CAACC,GAAG,KAAI,WAEfnK,IAAA0C,cAAA,UACE1C,IAAA0C,cAACwH,IAAI,CAACC,GAAG,SAAQ,oBA2BZyB,OApBHA,IAER5L,IAAA0C,cAACmJ,IAAa,CAACC,SAAU9L,IAAA0C,cAAA,WAAK,wEAC5B1C,IAAA0C,cAACxC,EAAa,KACZF,IAAA0C,cAACkB,GAAS,KACR5D,IAAA0C,cAACqJ,IAAM,KACL/L,IAAA0C,cAACiJ,GAAG,MACJ3L,IAAA0C,cAACsJ,IAAM,KACLhM,IAAA0C,cAACuJ,IAAK,CAACC,KAAK,QAAQC,QAASnM,IAAA0C,cAAC0J,EAAiB,QAC/CpM,IAAA0C,cAACuJ,IAAK,CAACC,KAAK,IAAIC,QAASnM,IAAA0C,cAACuH,GAAU,QACpCjK,IAAA0C,cAACuJ,IAAK,CAACC,KAAK,OAAOC,QAASnM,IAAA0C,cAAC4I,GAAO,QACpCtL,IAAA0C,cAACuJ,IAAK,CAACC,KAAK,WAAWC,QAASnM,IAAA0C,cAAC+I,GAAW,aCrC7CY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzM,IAAA0C,cAAC1C,IAAM0M,WAAU,KACf1M,IAAA0C,cAACkJ,GAAG,U","file":"static/js/main.b084acf2.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nexport const TimerContext = React.createContext({});\n\nconst TimerProvider = ({ children }) => {\n    const [timers, setTimers] = useState(window.location.hash ? JSON.parse(decodeURIComponent(window.location.hash).slice(1)):[]);\n    const [isRunning, setIsRunning] = useState(null);\n    const [totalTime, setTotalTime] = useState(localStorage.getItem(\"TotalTime\") ? parseInt(localStorage.getItem(\"TotalTime\")):0);\n    const [isReset, setIsReset] = useState(null);\n    const [isEditing, setIsEditing] = useState(null);\n\n    // Current running timer\n    const [activeTimerIndex, setActiveTimerIndex] = useState(0); \n    \n    const totalTimeCalc = () => {\n        let globalCount = 0\n\n        for (let i = 0; i < timers.length; i++) {\n            if (timers[i].status !== \"complete\"){\n                if (timers[i].type === \"XY\") {\n                    const totalMin = (timers[i].minutes * parseInt(timers[i].rounds))\n                    const totalSec = (timers[i].seconds * parseInt(timers[i].rounds))\n                    globalCount += (totalMin + totalSec)\n                }\n\n                else if (timers[i].type === \"Tabata\") {\n                    globalCount += timers[i].seconds\n                }\n\n                else {\n                    globalCount += (timers[i].minutes + timers[i].seconds)\n                }\n            }\n        }\n        setTotalTime(globalCount)\n    }\n    \n    const nextTimer = () => {\n        if (activeTimerIndex === timers.length-1) {\n            timers[activeTimerIndex].status = \"complete\"\n            setTimers(timers)\n            restart()\n\n            if (localStorage.getItem('history')) {\n                localStorage.setItem('history', localStorage.getItem('history')+JSON.stringify(timers));\n            }\n\n            else {\n                localStorage.setItem('history', JSON.stringify(timers));  \n            }\n        }\n        else {\n            timers[activeTimerIndex].status = \"complete\"\n            timers[activeTimerIndex+1].status = \"running\"\n            setActiveTimerIndex(activeTimerIndex+1)\n            setTimers(timers)\n            totalTimeCalc()\n        }\n\n        // Update URL\n        window.location.hash = encodeURIComponent(JSON.stringify(timers))\n    }\n\n    // Restart timer\n    const restart = () => {\n        setIsReset(true)\n        setIsRunning(null)\n        setActiveTimerIndex(0)\n        timers.map((timer) => timer.status = \"ready\")\n        timers[0].status = \"running\"\n        setTimers(timers)\n        setTotalTime(0)\n\n        // Update URL\n        window.location.hash = encodeURIComponent(JSON.stringify(timers))\n    }\n\n    // Start or stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } \n        else if (totalTime === 0){\n            totalTimeCalc()\n            setIsRunning(true)\n            setIsReset(null)\n        }\n        else {\n            setIsRunning(true)\n            setIsReset(null)\n        }\n\n        // Update URL\n        window.location.hash = encodeURIComponent(JSON.stringify(timers))\n    }\n\n    // Edit timer\n    const edit = ({id}) => {\n        setIsEditing(id)\n    }\n\n    // Delete from queue\n    const remove = ({id}) => {\n\n        if (timers.length === 1) {\n            setTimers([])\n        }\n\n        else {\n            const match = timers.map((timer) => timer.id === id)\n            const i = match.indexOf(true)\n\n            if (i === 0) {\n                // Update timer list\n                const newTimers = timers.slice(1)\n                newTimers[0].status = \"running\"\n                setTimers(newTimers)\n            }\n    \n            else {\n                // Update timer list\n                setTimers([\n                 ...timers.slice(0, i),\n                 ...timers.slice(i + 1),\n               ])\n            }\n        }\n\n        setTotalTime(0)\n        setActiveTimerIndex(0)\n\n        // Update URL\n        window.location.hash = encodeURIComponent(JSON.stringify(timers))\n    }\n\n    return (\n        <TimerContext.Provider\n            value={{\n                timers,\n                setTimers,\n                isRunning,\n                setIsRunning,\n                totalTime,\n                setTotalTime,\n                totalTimeCalc,\n                activeTimerIndex,\n                setActiveTimerIndex,\n                nextTimer,\n                restart,\n                startStop,\n                isReset,\n                setIsReset,\n                remove,\n                edit,\n                isEditing,\n                setIsEditing,\n            }}\n        >{children}</TimerContext.Provider>\n    )\n};\n\nexport default TimerProvider","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({ title, component, propDocs }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Container>\n        <RenderComponent>{component}</RenderComponent>\n        <Documentation>\n          <thead>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = ({ size = \"medium\", color = primaryColor }) => {\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n/**\n * You can document your components by using the DocumentComponent component\n */\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","import React from 'react'\nimport \"./Button.css\";\n\nconst Button = ({ color, text, ...btnProps }) => {\n  return (\n    <button \n      className={color}\n      {...btnProps}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./DisplayTime.css\";\n\nconst Screen = ({ minutes, seconds, displayStyle }) => {\n    return (\n      <div className={displayStyle}>\n        {minutes}m\n        {seconds}s\n      </div>\n    );\n  };\n  \n  export default Screen;\n  ","import React from 'react'\nimport \"./Selector.css\";\n\nconst Selector = ({ label, items, ...selectProps }) => {\n\n  return (\n    <label>\n      <select\n        className=\"default\"\n        name=\"selectedTime\"\n        {...selectProps}>\n        {items}\n      </select>\n      {label}\n    </label>\n  );\n};\n\nexport default Selector;","import React from \"react\";\nimport \"./Input.css\";\n\nconst Input = ({ inputName, inputValue, ...inputProps }) => {\n  return (\n    <input \n      className=\"Default-input\"\n      placeholder=\"Description (optional)\"\n      // name={inputName}\n      // value={inputValue}\n      {...inputProps}\n    />\n  );\n};\n\nexport default Input;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\nimport React from \"react\";\n\nexport const makeId = () => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < 20; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n// Selector numbers (minutes)\nconst minNumbersList = [...Array(60).keys()]\n\nexport const minNumbers = minNumbersList.map(number =>\n    <option value={number} key={number}>{number}</option>)\n\n// Selector numbers (seconds)\nconst secNumbersList = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55]\nexport const secNumbers = secNumbersList.map(number =>\n        <option value={number} key={number}>{number}</option>)\n\n// Tabata rounds selector. Show max 30 rounds\nconst roundNumbersList = [...Array(31).keys()]\nexport const roundNumbers = roundNumbersList.slice(1).map(number =>\n       <option value={number} key={number}>{number}</option>)\n\n// Timer type select\nconst timersTypeList = [\"Stopwatch\", \"Countdown\", \"XY\", \"Tabata\"]\nexport const timersTypes = timersTypeList.map(type =>\n       <option value={type} key={type}>{type}</option>)\n\n\n","import React, { useContext, useState, useEffect } from 'react'\nimport Button from \"../generic/Button/Button\";\nimport Selector from \"../generic/Selector/Selector\";\nimport Input from \"../generic/Input/Input\";\nimport { TimerContext } from '../../TimerProvider';\nimport { makeId, minNumbers, roundNumbers, secNumbers, timersTypes } from '../../utils/helpers';\nimport \"./TimerForm.css\";\n\nconst TimerForm = ({displayStyle}) => { \n\n    const {timers, setTimers, isEditing, setIsEditing, setTotalTime} = useContext(TimerContext)\n    const [minutes, setMinutes] = useState(0)\n    const [seconds, setSeconds] = useState(500)\n    const [clicked, setClicked] = useState(null)\n    const [rounds, setRounds] = useState(1)\n    const [work, setWork] = useState(500)\n    const [rest, setRest] = useState(500)\n    const [type, setType] = useState('Stopwatch')\n    const [description, setDescription] = useState('')\n\n    useEffect(() => {\n        let intervalId;\n        \n        if (clicked) {\n            intervalId = setTimeout(() => {setClicked(null)}, 1000);\n        }\n        return () => clearTimeout(intervalId);\n\n      }, [clicked, setClicked]);\n\n    const handleTimer = () => {\n        if (isEditing !== null) {\n            // Get timer index\n            const match = timers.map((timer) => timer.id === isEditing)\n            const i = match.indexOf(true)\n\n            const timersCopy = Array.from(timers)\n\n            if (type === \"Tabata\") {\n            timersCopy[i] = {\n                id: isEditing,\n                type: type,\n                status: i === 0 ? \"running\" : \"ready\",\n                description: description,\n                seconds: (rest + work)*rounds,\n                rounds: rounds,\n                work: work,\n                rest: rest }\n            }\n\n            else {\n                timersCopy[i] = {\n                    id: isEditing,\n                    type: type,\n                    status: i === 0 ? \"running\" : \"ready\",\n                    description: description,\n                    minutes: minutes,\n                    seconds: seconds,\n                    rounds: rounds,\n                    work: work,\n                    rest: rest }\n\n            }\n            setTimers(timersCopy)\n            setIsEditing(null)\n        }\n\n        else {\n            if (type === \"Tabata\") {\n            setTimers(\n                [...timers, \n                {id: makeId(),\n                type: type,\n                status: timers.length === 0 ? \"running\" : \"ready\",\n                description: description,\n                seconds: (rest + work)*rounds,\n                rounds: rounds,\n                work: work,\n                rest: rest }])\n            }\n\n            else {\n                setTimers(\n                    [...timers, \n                    {id: makeId(),\n                    type: type,\n                    status: timers.length === 0 ? \"running\" : \"ready\",\n                    description: description,\n                    minutes: minutes,\n                    seconds: seconds,\n                    rounds: rounds,\n                    work: work,\n                    rest: rest }])\n            }\n        }\n        setTotalTime(0)\n        setClicked(true)\n    }\n\n    return (\n        <div className={displayStyle}>\n            <Selector\n                onChange={e => setType(e.target.value)}\n                items={timersTypes}/>\n            <div>\n                <Input \n                    onChange={e => setDescription(e.target.value)}/>\n            </div>\n            \n            {type === \"Stopwatch\" || type === \"Countdown\" ? \n                <div><Selector \n                    label=\"min\"\n                    onChange={e => setMinutes(e.target.value*6000)}\n                    items={minNumbers}/>\n                <Selector \n                    label=\"sec\"\n                    onChange={e => setSeconds(e.target.value*100)}\n                    items={secNumbers}/></div> : ''\n            }\n\n            {type === \"XY\" ? \n                <div><Selector \n                    label=\"min\"\n                    onChange={e => setMinutes(e.target.value*6000)}\n                    items={minNumbers}/>\n                <Selector \n                    label=\"sec\"\n                    onChange={e => setSeconds(e.target.value*100)}\n                    items={secNumbers}/>\n                <Selector \n                    label=\"rounds\"\n                    onChange={e => setRounds(e.target.value)}\n                    items={roundNumbers}/></div> : ''\n            }\n\n            {type === \"Tabata\" ? \n                <div><Selector \n                    label=\"sec\"\n                    onChange={e => setWork(e.target.value*100)}\n                    items={secNumbers}/>\n                <Selector \n                    label=\"sec\"\n                    onChange={e => setRest(e.target.value*100)}\n                    items={secNumbers}/>\n                <Selector \n                    label=\"rounds\"\n                    onChange={e => setRounds(e.target.value)}\n                    items={roundNumbers}/></div> : ''\n            }\n            \n            <Button \n                text={clicked ? \"Added ✓\" : (isEditing ? \"Update\" : \"Add\")}\n                color={clicked ? \"Default-button Button-go\" : \"Default-button\"}\n                onClick={handleTimer}/>\n        </div>\n    )\n};\n\nexport default TimerForm;\n","import React from 'react'\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\nimport TimerForm from '../selectors/TimerForm';\n\nconst Timer = ({minutes, seconds, status, rounds, type, description, work, rest, id}) => {\n    const {isRunning, nextTimer, isReset, isEditing, totalTime, setTotalTime} = useContext(TimerContext)\n    const [time, setTime] = useState(localStorage.getItem(\"Time\") ? parseInt(localStorage.getItem(\"Time\")):0);\n    const [roundsCount, setRoundsCount] = useState(localStorage.getItem(\"Rounds\") ? parseInt(localStorage.getItem(\"Rounds\")):1)\n    const [workStatus, setWorkStatus] = useState(localStorage.getItem(\"Work\") ? localStorage.getItem(\"Work\"):true)\n    \n    // Handle timers\n    useEffect(() => {\n        \n        let intervalId\n        \n        // Stopwatch\n        if (type === \"Stopwatch\") {\n            if (isRunning && status === \"running\" && time >= 0) {\n                intervalId = setTimeout(() => {setTime(time + 1);setTotalTime(totalTime-1)}, 8);\n            }\n         \n            if (isRunning && time === (minutes+seconds) && status === \"running\") {\n                nextTimer()\n                setTime(0)\n            }\n    \n            else if (status === \"complete\" || isReset){\n                setTime(0)\n            }\n        }\n\n        // Countdown\n        if (type === \"Countdown\") {\n            if (isRunning && status === \"running\" && time > 0) {\n                intervalId = setTimeout(() => {setTime(time - 1);setTotalTime(totalTime-1)}, 8);\n            }\n         \n            else if (isRunning && time === 0 && status === \"running\") {\n                nextTimer()\n                setTime(minutes+seconds)\n            }\n            else if (status === \"complete\" || isReset){\n                setTime(minutes+seconds)\n            }\n        }\n\n        // XY\n        if (type === \"XY\") {\n            if (isRunning && status === \"running\" && time > 0) {\n                // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n                intervalId = setTimeout(() => {setTime(time - 1);setTotalTime(totalTime-1)}, 8);\n                }\n            else if (isRunning && status === \"running\" && time === 0 && rounds >= 1) {\n                setTime(minutes+seconds)\n                setRoundsCount(roundsCount-1)\n                intervalId = setTimeout(() => {setTime(time - 1);setTotalTime(totalTime-1)}, 8);\n            }\n            if (roundsCount === 0){\n                nextTimer()\n                setTime(minutes+seconds)\n                setRoundsCount(rounds)\n            }\n            else if (status === \"complete\" || isReset){\n                setTime(minutes+seconds)\n                setRoundsCount(rounds)\n            }\n        }\n\n        // Tabata\n        if (type === \"Tabata\") {\n            if (isRunning && status === \"running\" && time !==0 && roundsCount > 0) {\n                // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n                intervalId = setTimeout(() => {setTime(time - 1);setTotalTime(totalTime-1)}, 8);\n                }\n    \n            if (isRunning && status === \"running\" && workStatus && time === 0 && roundsCount > 0) {\n                setTime(rest)\n                setWorkStatus(null)\n                intervalId = setTimeout(() => {setTime(time - 1);setTotalTime(totalTime-1)}, 8);\n            }\n    \n            if (isRunning && status === \"running\" && workStatus === null && time === 0 && roundsCount > 0) {\n                setTime(work)\n                setWorkStatus(true)\n                setRoundsCount(roundsCount-1) \n            }\n            \n            else if(roundsCount === 0){\n                nextTimer()\n                setTime(work)\n                setRoundsCount(rounds)\n                setWorkStatus(true)\n            }\n    \n            else if (status === \"complete\" || isReset){\n                setTime(work)\n                setRoundsCount(rounds)\n                setWorkStatus(true)\n            }\n        }\n\n        return () => clearTimeout(intervalId);\n\n    }, [isRunning,\n        type, \n        nextTimer, \n        status, \n        time, \n        minutes, \n        seconds, \n        rounds, \n        roundsCount, \n        isReset,  \n        rest, \n        work, \n        workStatus,\n        totalTime,\n        setTotalTime])\n\n     // Minutes calculation\n     const minutesCalc = Math.floor((time % 360000) / 6000);\n \n     // Seconds calculation\n     const secondsCalc = Math.floor((time % 6000) / 100);\n\n    useEffect(( ) => {\n        \n        if (isRunning) {\n            localStorage.setItem('Time', time);\n            localStorage.setItem('Rounds', roundsCount);\n            localStorage.setItem('TotalTime', totalTime)\n            if (type === 'Tabata'){\n                localStorage.setItem('Work', workStatus)\n            }\n        }\n\n        \n     }, [isRunning, secondsCalc, roundsCount, time, workStatus, totalTime, type])\n\n\n     return (\n        <div className=\"grid-container\">\n            {/* Form for edit state */}\n            <TimerForm\n            displayStyle={isEditing === id ? \"grid-container\": \"hidden\"}/>\n\n            {/* Description and times */}\n            {description !== '' ? <h3>{description}</h3> : ''}\n            <strong>{type}</strong>: \n\n            {type === \"Tabata\" ? \n                <span>{work/100}s work, {rest/100}s rest</span> : \n                <span>{minutes/6000}m{seconds/100}s</span>}\n\n            {type === \"Tabata\" || type === \"XY\" ? \n                <div><strong>Rounds:</strong> {rounds}</div> : ''}\n\n            {type === \"Tabata\" || type === \"XY\" ? \n                <div><strong>Rounds remaining:</strong> {roundsCount}</div> : ''}\n            \n            {/* Display with time */}\n            {type === \"Tabata\" ? \n                <DisplayTime\n                minutes=\"0\"\n                seconds={secondsCalc}\n                displayStyle={isEditing === id ? \"hidden\" : (status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\"))}/> :\n                \n                <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}\n                displayStyle={isEditing === id ? \"hidden\" : (status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\"))}/>}\n        </div>\n    )\n   \n}\n\nexport default Timer;","import React, { useContext, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport styled from \"styled-components\";\nimport { TimerContext } from \"../TimerProvider\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"../components/generic/Button/Button\";\nimport Timer from \"../components/timers/Timer\";\n\nconst Timers = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: auto;\n  justify-content: center;\n`;\n\nconst TimerDiv = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n`;\n\nconst ControlButtons = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n  align-items: center;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n`;\n\nconst TimersView = () => { \n  const {timers, \n        setTimers,\n        totalTime,\n        isRunning,\n        restart,\n        startStop,\n        nextTimer,\n        isReset, \n        remove, \n        totalTimeCalc, \n        edit,\n        isEditing} = useContext(TimerContext)\n\n  useEffect(() => {\n    if (totalTime === 0 || isReset) {\n      totalTimeCalc()\n    }\n  }, [totalTime, isReset, totalTimeCalc])  \n        \n\n  // Minutes calculation\n  const minutesCalc = Math.floor((totalTime % 360000) / 6000);\n \n  // Seconds calculation\n  const secondsCalc = Math.floor((totalTime % 6000) / 100);\n\n  const handleOnDragEnd = (result) => {\n    const items = timers\n    const [reorderedItem] = items.splice(result.source.index, 1)\n    items.splice(result.destination.index, 0, reorderedItem)\n    setTimers(items)\n    restart()\n  }\n  \n  return (\n    <ControlButtons>\n      <Link to=\"/add\"><Button text=\"+ Add timer\" color={\"Default-button Button-add\"} /></Link><br></br>\n      <Button \n        text={\"Save workout\"}\n        color={\"Default-button Button-add\"}\n        onClick={e => {window.location.hash = encodeURIComponent(JSON.stringify(timers))}} />\n      <Button \n        text={isRunning ? \"Pause workout\" : \"Start workout\"}\n        onClick={timers.length === 0 ? null : startStop}\n        color={isRunning ? \"Default-button Button-danger\":\"Default-button Button-go\"} />\n      <Button \n        text={\"Skip timer >>\"}\n        color={\"Default-button\"}\n        onClick={timers.length === 0 ? null : nextTimer} />\n      <Button \n        text={\"Restart workout\"}\n        color={\"Default-button\"}\n        onClick={timers.length === 0 ? null : restart} />\n    <h2>Total time: {minutesCalc}m{secondsCalc}s</h2>\n    <DragDropContext onDragEnd={handleOnDragEnd}>\n      <Droppable droppableId=\"timers\">\n        {(provided) => (\n          <Timers {...provided.droppableProps} ref={provided.innerRef}>\n            {timers.map((timer, index) => (\n              <Draggable key={`drag-${timer.id}`} draggableId={`drag-${timer.id}`} index={index}>\n                {(provided) => (\n                  <TimerDiv key={`timer-${timer.id}`} {...provided.dragHandleProps} {...provided.draggableProps} ref={provided.innerRef}>\n                    <Timer\n                        id={timer.id}\n                        type={timer.type}\n                        description={timer.description}\n                        rounds={timer.rounds}\n                        minutes={timer.minutes} \n                        seconds={timer.seconds}\n                        status={timer.status} \n                        isReset={isReset}\n                        work={timer.work} \n                        rest={timer.rest}/>\n                    <Button \n                        text={\"Edit\"}\n                        color={isEditing || isRunning ? \"hidden\": \"Default-button\"}\n                        onClick={() => edit({id:timer.id})}/>\n                    <Button \n                        text={\"Remove\"}\n                        color={isEditing || isRunning ? \"hidden\":\"Default-button Button-danger\"}\n                        onClick={() => remove({id:timer.id})}/>\n                  </TimerDiv>\n                 )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </Timers>\n        )}\n      </Droppable>\n    </DragDropContext>\n    </ControlButtons>\n  );\n};\n\nexport default TimersView;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport TimerForm from \"../components/selectors/TimerForm\";\n\nconst Selectors = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: auto auto;\n  justify-content: center;\n`;\n\nconst Selector = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n`;\n\nconst AddView = () => {\n\n  return (\n    <Selectors>\n      <Selector>\n      <TimerForm/>\n      </Selector>\n    </Selectors>\n  );\n};\n\nexport default AddView;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Workouts = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: auto;\n  justify-content: center;\n`;\n\nconst Workout = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n  width: 400px;\n  overflow-wrap: break-word;\n`;\n\nconst HistoryView = () => {\n\n  const history = localStorage.getItem(\"history\")\n\n  return (\n    <Workouts> \n      <h1>Half built history</h1><br></br>\n      <Workout>{history}</Workout>\n    </Workouts>\n  );\n};\n\nexport default HistoryView;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TimerProvider from \"./TimerProvider\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport AddView from \"./views/AddView\";\nimport HistoryView from \"./views/HistoryView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nconst Nav = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Timers</Link>\n        </li>\n        <li>\n          <Link to=\"/docs\">Documentation</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nconst App = () => {\n  return (\n    <ErrorBoundary fallback={<div>Something went wrong. Try reloading the page, or coming back later.</div>}>\n      <TimerProvider>\n        <Container>\n          <Router>\n            <Nav />\n            <Routes>\n              <Route path=\"/docs\" element={<DocumentationView />} />\n              <Route path=\"/\" element={<TimersView />} />\n              <Route path=\"/add\" element={<AddView />} />\n              <Route path=\"/history\" element={<HistoryView />} />\n            </Routes>\n          </Router>\n        </Container>\n      </TimerProvider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}