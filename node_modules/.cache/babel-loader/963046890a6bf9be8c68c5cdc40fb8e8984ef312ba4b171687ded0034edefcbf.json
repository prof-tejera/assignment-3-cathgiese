{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Tabata.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tabata = () => {\n  _s();\n  // Store the time and button\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(1000);\n  const [rounds, setRounds] = useState(2);\n  const [min, setMinutes] = useState(null);\n  const [sec, setSeconds] = useState(null);\n  const intervalOne = 1000;\n  const intervalTwo = 3000;\n  const originalRounds = 2;\n  useEffect(() => {\n    setTime(intervalOne);\n    for (var i = 0; i < rounds; i++) {\n      let intervalId;\n      if (isRunning && time != 0) {\n        // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n        intervalId = setInterval(() => setTime(time - 1), 10);\n        return () => clearInterval(intervalId);\n      }\n      setTime(intervalTwo);\n      // console.log(time, rounds, originalRounds, i)\n    }\n  }, [isRunning, time, rounds]);\n\n  // Minutes calculation\n  const minutes = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // Start and stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n    }\n  };\n  const reset = () => {\n    setIsRunning(null);\n    setTime(intervalOne);\n    setRounds(originalRounds);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DisplayTime, {\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        \"background-color\": \"blue\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: isRunning && time != 0 ? \"Pause\" : \"Start\",\n          onClick: startStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Reset\",\n          onClick: reset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \">>\",\n          onClick: () => setTime(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Tabata, \"y88kML9rdwTWM7J5pgbp9RJJ5RM=\");\n_c = Tabata;\nexport default Tabata;\nvar _c;\n$RefreshReg$(_c, \"Tabata\");","map":{"version":3,"names":["useState","useEffect","Button","DisplayTime","Panel","jsxDEV","_jsxDEV","Tabata","_s","isRunning","setIsRunning","time","setTime","rounds","setRounds","min","setMinutes","sec","setSeconds","intervalOne","intervalTwo","originalRounds","i","intervalId","setInterval","clearInterval","minutes","Math","floor","seconds","startStop","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","onClick","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Tabata.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\n\nconst Tabata = () => {\n    // Store the time and button\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(1000);\n    const [rounds, setRounds] = useState(2);\n    const [min, setMinutes] = useState(null);\n    const [sec, setSeconds] = useState(null);\n\n    const intervalOne = 1000\n    const intervalTwo = 3000\n    const originalRounds = 2\n\n    useEffect(() => {\n        setTime(intervalOne)\n        for (var i = 0; i < rounds; i++ ) {\n            let intervalId;\n            if (isRunning && time != 0) {\n                // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n                intervalId = setInterval(() => setTime(time - 1), 10);\n                return () => clearInterval(intervalId);\n            }\n            setTime(intervalTwo);\n            // console.log(time, rounds, originalRounds, i)\n        }\n\n    }, [isRunning, time, rounds]);\n\n     // Minutes calculation\n     const minutes = Math.floor((time % 360000) / 6000);\n \n     // Seconds calculation\n     const seconds = Math.floor((time % 6000) / 100);\n\n    // Start and stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n        }\n    }\n\n    const reset = () => {\n        setIsRunning(null);\n        setTime(intervalOne);\n        setRounds(originalRounds)\n    }\n\n    return (\n    <div>\n        <DisplayTime\n            minutes={minutes}\n            seconds={seconds}/>\n        <div className=\"grid-container\">\n            <Panel background-color=\"blue\">\n                <Button \n                    text={isRunning && time != 0 ? \"Pause\" : \"Start\"}\n                    onClick={startStop}/>\n                <Button \n                    text=\"Reset\"\n                    onClick={reset}/>\n                <Button \n                    text=\">>\"\n                    onClick={() => setTime(0)}/>\n            </Panel>\n        </div>\n    </div>\n    )\n};\n\nexport default Tabata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}