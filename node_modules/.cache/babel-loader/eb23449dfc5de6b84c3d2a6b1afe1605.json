{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/components/timers/Timer.js\";\nimport React from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\nimport TimerForm from '../selectors/TimerForm';\nconst Timer = ({\n  minutes,\n  seconds,\n  status,\n  rounds,\n  type,\n  description,\n  work,\n  rest,\n  id\n}) => {\n  const {\n    isRunning,\n    nextTimer,\n    isReset,\n    isEditing\n  } = useContext(TimerContext);\n  const [time, setTime] = useState(0);\n  const [roundsCount, setRoundsCount] = useState(rounds);\n  const [workStatus, setWorkStatus] = useState(true);\n  useEffect(() => {\n    let intervalId;\n\n    // Stopwatch\n    if (type === \"Stopwatch\") {\n      if (isRunning && status === \"running\" && time >= 0) {\n        intervalId = setTimeout(() => {\n          setTime(time + 1);\n        }, 8);\n      }\n      if (isRunning && time === minutes + seconds && status === \"running\") {\n        nextTimer();\n        setTime(0);\n      } else if (status === \"complete\" || isReset) {\n        setTime(0);\n      }\n    }\n\n    // Countdown\n    if (type === \"Countdown\") {\n      if (isRunning && status === \"running\" && time > 0) {\n        intervalId = setTimeout(() => {\n          setTime(time - 1);\n        }, 8);\n      } else if (isRunning && time === 0 && status === \"running\") {\n        nextTimer();\n        setTime(minutes + seconds);\n      } else if (status === \"complete\" || isReset) {\n        setTime(minutes + seconds);\n      }\n    }\n\n    // XY\n    if (type === \"XY\") {\n      if (isRunning && status === \"running\" && time > 0) {\n        // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      } else if (isRunning && status === \"running\" && time === 0 && rounds >= 1) {\n        setTime(minutes + seconds + 99);\n        setRoundsCount(roundsCount - 1);\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      }\n      if (roundsCount === 0) {\n        nextTimer();\n        setTime(minutes + seconds);\n        setRoundsCount(rounds);\n      } else if (status === \"complete\" || isReset) {\n        setTime(minutes + seconds);\n        setRoundsCount(rounds);\n      }\n    }\n\n    // Tabata\n    if (type === \"Tabata\") {\n      if (isRunning && status === \"running\" && time !== 0 && roundsCount > 0) {\n        // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      }\n      if (isRunning && status === \"running\" && workStatus && time === 0 && roundsCount > 0) {\n        setTime(rest + 99);\n        setWorkStatus(null);\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      }\n      if (isRunning && status === \"running\" && workStatus === null && time === 0 && roundsCount > 0) {\n        setTime(work + 99);\n        setWorkStatus(true);\n        setRoundsCount(roundsCount - 1);\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      } else if (roundsCount === 0) {\n        nextTimer();\n        setTime(work);\n        setRoundsCount(rounds);\n        setWorkStatus(true);\n      } else if (status === \"complete\" || isReset) {\n        setTime(work);\n        setRoundsCount(rounds);\n        setWorkStatus(true);\n      }\n    }\n    return () => clearTimeout(intervalId);\n  }, [isRunning, type, nextTimer, status, time, minutes, seconds, rounds, roundsCount, isReset, rest, work, workStatus]);\n\n  // Minutes calculation\n  const minutesCalc = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const secondsCalc = Math.floor(time % 6000 / 100);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimerForm, {\n    displayStyle: isEditing === id ? \"grid-container\" : \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), description !== '' ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 35\n    }\n  }, description) : '', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, type), \":\", type === \"Tabata\" ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, work / 100, \"s work, \", rest / 100, \"s rest\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, minutes / 6000, \"m\", seconds / 100, \"s\"), type === \"Tabata\" || type === \"XY\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 22\n    }\n  }, \"Rounds:\"), \" \", rounds) : '', type === \"Tabata\" || type === \"XY\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 22\n    }\n  }, \"Rounds remaining:\"), \" \", roundsCount) : '', type === \"Tabata\" ? /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: \"0\",\n    seconds: secondsCalc,\n    displayStyle: status === \"running\" ? \"Default-display Running\" : status === \"complete\" ? \"Default-display Complete\" : \"Default-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutesCalc,\n    seconds: secondsCalc,\n    displayStyle: status === \"running\" ? \"Default-display Running\" : status === \"complete\" ? \"Default-display Complete\" : \"Default-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }));\n};\nexport default Timer;","map":{"version":3,"names":["React","useState","useEffect","useContext","DisplayTime","TimerContext","TimerForm","Timer","minutes","seconds","status","rounds","type","description","work","rest","id","isRunning","nextTimer","isReset","isEditing","time","setTime","roundsCount","setRoundsCount","workStatus","setWorkStatus","intervalId","setTimeout","clearTimeout","minutesCalc","Math","floor","secondsCalc","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","displayStyle"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/components/timers/Timer.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\nimport TimerForm from '../selectors/TimerForm';\n\nconst Timer = ({minutes, seconds, status, rounds, type, description, work, rest, id}) => {\n    const {isRunning, nextTimer, isReset, isEditing} = useContext(TimerContext)\n    const [time, setTime] = useState(0);\n    const [roundsCount, setRoundsCount] = useState(rounds)\n    const [workStatus, setWorkStatus] = useState(true)\n\n    useEffect(() => {\n        let intervalId\n        \n        // Stopwatch\n        if (type === \"Stopwatch\") {\n            if (isRunning && status === \"running\" && time >= 0) {\n                intervalId = setTimeout(() => {setTime(time + 1)}, 8);\n            }\n         \n            if (isRunning && time === (minutes+seconds) && status === \"running\") {\n                nextTimer()\n                setTime(0)\n            }\n    \n            else if (status === \"complete\" || isReset){\n                setTime(0)\n            }\n        }\n\n        // Countdown\n        if (type === \"Countdown\") {\n            if (isRunning && status === \"running\" && time > 0) {\n                intervalId = setTimeout(() => {setTime(time - 1)}, 8);\n            }\n         \n            else if (isRunning && time === 0 && status === \"running\") {\n                nextTimer()\n                setTime(minutes+seconds)\n            }\n            else if (status === \"complete\" || isReset){\n                setTime(minutes+seconds)\n            }\n        }\n\n        // XY\n        if (type === \"XY\") {\n            if (isRunning && status === \"running\" && time > 0) {\n                // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n                intervalId = setTimeout(() => setTime(time - 1), 8);\n                }\n            else if (isRunning && status === \"running\" && time === 0 && rounds >= 1) {\n                setTime(minutes+seconds+99)\n                setRoundsCount(roundsCount-1)\n                intervalId = setTimeout(() => setTime(time - 1), 8);\n            }\n            if (roundsCount === 0){\n                nextTimer()\n                setTime(minutes+seconds)\n                setRoundsCount(rounds)\n            }\n            else if (status === \"complete\" || isReset){\n                setTime(minutes+seconds)\n                setRoundsCount(rounds)\n            }\n        }\n\n        // Tabata\n        if (type === \"Tabata\") {\n            if (isRunning && status === \"running\" && time !==0 && roundsCount > 0) {\n                // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n                intervalId = setTimeout(() => setTime(time - 1), 8);\n                }\n    \n            if (isRunning && status === \"running\" && workStatus && time === 0 && roundsCount > 0) {\n                setTime(rest+99)\n                setWorkStatus(null)\n                intervalId = setTimeout(() => setTime(time - 1), 8);\n            }\n    \n            if (isRunning && status === \"running\" && workStatus === null && time === 0 && roundsCount > 0) {\n                setTime(work+99)\n                setWorkStatus(true)\n                setRoundsCount(roundsCount-1) \n                intervalId = setTimeout(() => setTime(time - 1), 8);\n            }\n            \n            else if(roundsCount === 0){\n                nextTimer()\n                setTime(work)\n                setRoundsCount(rounds)\n                setWorkStatus(true)\n            }\n    \n            else if (status === \"complete\" || isReset){\n                setTime(work)\n                setRoundsCount(rounds)\n                setWorkStatus(true)\n            }\n        }\n        return () => clearTimeout(intervalId);\n\n    }, [isRunning,\n        type, \n        nextTimer, \n        status, \n        time, \n        minutes, \n        seconds, \n        rounds, \n        roundsCount, \n        isReset,  \n        rest, \n        work, \n        workStatus])\n\n     // Minutes calculation\n     const minutesCalc = Math.floor((time % 360000) / 6000);\n \n     // Seconds calculation\n     const secondsCalc = Math.floor((time % 6000) / 100);\n\n     return (\n        <div className=\"grid-container\">\n            {/* Form for edit state */}\n            <TimerForm\n            displayStyle={isEditing === id ? \"grid-container\": \"hidden\"}/>\n\n            {/* Description and times */}\n            {description !== '' ? <h3>{description}</h3> : ''}\n            <strong>{type}</strong>: \n\n            {type === \"Tabata\" ? \n                <span>{work/100}s work, {rest/100}s rest</span> : \n                <span>{minutes/6000}m{seconds/100}s</span>}\n\n            {type === \"Tabata\" || type === \"XY\" ? \n                <div><strong>Rounds:</strong> {rounds}</div> : ''}\n\n            {type === \"Tabata\" || type === \"XY\" ? \n                <div><strong>Rounds remaining:</strong> {roundsCount}</div> : ''}\n            \n            {/* Display with time */}\n            {type === \"Tabata\" ? \n                <DisplayTime\n                minutes=\"0\"\n                seconds={secondsCalc}\n                displayStyle={status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\")}/> :\n                \n                <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}\n                displayStyle={status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\")}/>}\n        </div>\n    )\n   \n}\n\nexport default Timer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}