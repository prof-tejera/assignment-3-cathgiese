{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"../generic/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stopwatch = () => {\n  _s();\n  // Store the time and button states\n  const [isActive, setIsActive] = useState(false);\n  const [isPaused, setIsPaused] = useState(true);\n  const [time, setTime] = useState(0);\n  const pressStart = () => {\n    setIsActive(true);\n    setIsPaused(false);\n  };\n  const pressPauseResume = () => {\n    setIsPaused(!isPaused);\n  };\n  const pressReset = () => {\n    setIsActive(false);\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Screen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        time: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ControlButtons, {\n        active: isActive,\n        isPaused: isPaused,\n        handleStart: handleStart,\n        handlePauseResume: handlePauseResume,\n        handleReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Stopwatch, \"0M2TD0UNblqc3zrEnI9U27tt3bM=\");\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["useState","Button","Screen","Panel","jsxDEV","_jsxDEV","Stopwatch","_s","isActive","setIsActive","isPaused","setIsPaused","time","setTime","pressStart","pressPauseResume","pressReset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Timer","ControlButtons","active","handleStart","handlePauseResume","handleReset","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js"],"sourcesContent":["import { useState } from \"react\";\nimport Button from \"../generic/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\n\nconst Stopwatch = () => {\n    // Store the time and button states\n    const [isActive, setIsActive] = useState(false);\n    const [isPaused, setIsPaused] = useState(true);\n    const [time, setTime] = useState(0);\n\n    const pressStart = () => {\n        setIsActive(true);\n        setIsPaused(false);\n    };\n \n    const pressPauseResume = () => {\n        setIsPaused(!isPaused);\n    };\n \n    const pressReset = () => {\n        setIsActive(false);\n        setTime(0);\n    };\n    \n    return (\n    <div>\n        <Screen />\n        <div className=\"grid-container\">\n            <Timer time={time} />\n            <ControlButtons\n                active={isActive}\n                isPaused={isPaused}\n                handleStart={handleStart}\n                handlePauseResume={handlePauseResume}\n                handleReset={handleReset}\n            />\n        </div>\n    </div>\n    )\n};\n\nexport default Stopwatch;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACrBL,WAAW,CAAC,IAAI,CAAC;IACjBE,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC3BJ,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACrBP,WAAW,CAAC,KAAK,CAAC;IAClBI,OAAO,CAAC,CAAC,CAAC;EACd,CAAC;EAED,oBACAR,OAAA;IAAAY,QAAA,gBACIZ,OAAA,CAACH,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVhB,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC3BZ,OAAA,CAACkB,KAAK;QAACX,IAAI,EAAEA;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBhB,OAAA,CAACmB,cAAc;QACXC,MAAM,EAAEjB,QAAS;QACjBE,QAAQ,EAAEA,QAAS;QACnBgB,WAAW,EAAEA,WAAY;QACzBC,iBAAiB,EAAEA,iBAAkB;QACrCC,WAAW,EAAEA;MAAY;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACd,EAAA,CAnCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}