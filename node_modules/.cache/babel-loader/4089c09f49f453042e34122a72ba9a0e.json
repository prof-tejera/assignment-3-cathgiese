{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Tabata.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { useState, useEffect, useContext } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport { TimerContext } from '../../TimerProvider';\nconst Delete = styled.div`\n  display: flex;\n  justify-content: right;`;\nconst Tabata = ({\n  work,\n  rest,\n  rounds\n}) => {\n  // Store the time and button\n  const {\n    isRunning,\n    setIsRunning\n  } = useContext(TimerContext);\n  const [time, setTime] = useState(0);\n  const [roundsCount, setRoundsCount] = useState(0);\n  const [workStatus, setWorkStatus] = useState(null);\n  useEffect(() => {\n    let intervalId;\n    if (!isRunning && time === 0) {\n      setTime(work);\n      setRoundsCount(rounds);\n      setWorkStatus(true);\n    }\n    if (isRunning && time !== 0 && roundsCount > 0) {\n      // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    }\n    if (isRunning && workStatus && time === 0 && roundsCount > 0) {\n      setTime(rest + 99);\n      setWorkStatus(null);\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    }\n    if (isRunning && workStatus === null && time === 0 && roundsCount > 0) {\n      setTime(work + 99);\n      setWorkStatus(true);\n      setRoundsCount(roundsCount - 1);\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    }\n    if (roundsCount === 0) {\n      setTime(0);\n      setIsRunning(null);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, workStatus, time, rounds, work, rest, roundsCount]);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // // Start and stop timer\n  // const startStop = () => {\n  //     if (isRunning) {\n  //         setIsRunning(null)\n  //     } else {\n  //         setIsRunning(true)\n  //     }\n  // }\n\n  // // Store rounds\n  // const handleRounds = e => {\n  //     setRoundsCount(e.target.value)\n  //     setRounds(e.target.value)\n  // }\n\n  // Reset timer\n  const reset = () => {\n    setIsRunning(null);\n    setTime(work);\n    setRoundsCount(rounds);\n  };\n\n  // Fast forward (clear) timer\n  const fastForward = () => {\n    setTime(0);\n    setRoundsCount(0);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    \"background-color\": \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Delete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"-\",\n    onClick: fastForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })), \"Tabata: \", work / 100, \"s work, \", rest / 100, \"s rest for \", rounds, \" rounds\", /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: \"0\",\n    seconds: seconds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Reset\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \">>\",\n    onClick: fastForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Tabata;","map":{"version":3,"names":["React","styled","useState","useEffect","useContext","Button","DisplayTime","Panel","TimerContext","Delete","div","Tabata","work","rest","rounds","isRunning","setIsRunning","time","setTime","roundsCount","setRoundsCount","workStatus","setWorkStatus","intervalId","setInterval","clearInterval","seconds","Math","floor","reset","fastForward","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","minutes"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Tabata.js"],"sourcesContent":["import React from 'react'\nimport styled from \"styled-components\";\nimport { useState, useEffect, useContext } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport { TimerContext } from '../../TimerProvider';\n\nconst Delete = styled.div`\n  display: flex;\n  justify-content: right;`;\n\nconst Tabata = ({work, rest, rounds}) => {\n    // Store the time and button\n    const {isRunning, setIsRunning} = useContext(TimerContext)\n    const [time, setTime] = useState(0);\n    const [roundsCount, setRoundsCount] = useState(0)\n    const [workStatus, setWorkStatus] = useState(null)\n\n    useEffect(() => {\n        let intervalId;\n\n        if (!isRunning && time === 0){\n            setTime(work)\n            setRoundsCount(rounds)\n            setWorkStatus(true)\n        }\n\n        if (isRunning && time !==0 && roundsCount > 0) {\n            // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n            intervalId = setInterval(() => setTime(time - 1), 7);\n            }\n\n        if (isRunning && workStatus && time === 0 && roundsCount > 0) {\n            setTime(rest+99)\n            setWorkStatus(null)\n            intervalId = setInterval(() => setTime(time - 1), 7);\n        }\n\n        if (isRunning && workStatus === null && time === 0 && roundsCount > 0) {\n            setTime(work+99 )\n            setWorkStatus(true)\n            setRoundsCount(roundsCount-1) \n            intervalId = setInterval(() => setTime(time - 1), 7);\n        }\n        \n        if(roundsCount === 0){\n            setTime(0)\n            setIsRunning(null)\n        }\n\n        return () => clearInterval(intervalId);\n\n      }, [isRunning, workStatus, time, rounds, work, rest, roundsCount]);\n \n    // Seconds calculation\n    const seconds = Math.floor((time % 6000) / 100);\n\n    // // Start and stop timer\n    // const startStop = () => {\n    //     if (isRunning) {\n    //         setIsRunning(null)\n    //     } else {\n    //         setIsRunning(true)\n    //     }\n    // }\n\n    // // Store rounds\n    // const handleRounds = e => {\n    //     setRoundsCount(e.target.value)\n    //     setRounds(e.target.value)\n    // }\n\n    // Reset timer\n    const reset = () => {\n        setIsRunning(null);\n        setTime(work)\n        setRoundsCount(rounds)\n    }\n\n    // Fast forward (clear) timer\n    const fastForward = () => {\n        setTime(0)\n        setRoundsCount(0)\n    }\n\n    return (\n    <div className=\"grid-container\">\n        <Panel background-color=\"blue\">\n        <Delete>\n            <Button \n                text=\"-\"\n                onClick={fastForward}/>\n        </Delete>\n        Tabata: {work/100}s work, {rest/100}s rest for {rounds} rounds\n        <DisplayTime\n            minutes=\"0\"\n            seconds={seconds}/>\n        {/* <Button \n            text={isRunning && time !== 0 ? \"Pause\" : \"Start\"}\n            onClick={startStop}/> */}\n        <Button \n            text=\"Reset\"\n            onClick={reset}/>\n        <Button \n            text=\">>\"\n            onClick={fastForward}/>\n            </Panel>\n        </div>\n    )\n};\n\nexport default Tabata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}