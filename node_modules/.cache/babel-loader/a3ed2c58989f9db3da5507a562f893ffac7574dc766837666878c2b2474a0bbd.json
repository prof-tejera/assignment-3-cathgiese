{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Tabata.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tabata = () => {\n  _s();\n  // Store the time and button\n  const [isRunning, setIsRunning] = useState(null);\n  const [intervalOne, setIntervalOne] = useState(1000);\n  const [intervalTwo, setIntervalTwo] = useState(3000);\n  const [rounds, setRounds] = useState(2);\n  const originalIntOne = 1000;\n  const originalIntTwo = 30000;\n  const originalRounds = 2;\n  useEffect(() => {\n    for (var i = 0; i < rounds; i++) {\n      let intervalId;\n      if (isRunning && intervalOne != 0) {\n        // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n        intervalId = setInterval(() => setTime(intervalOne - 1), 10);\n        return () => clearInterval(intervalId);\n      }\n      setTime(originalIntTwo);\n      console.log(time, rounds, originalTime, originalRounds, i);\n    }\n  }, [isRunning, time, rounds]);\n\n  // Minutes calculation\n  const minutes = Math.floor(intervalOne % 360000 / 6000);\n\n  // Seconds calculation\n  const seconds = Math.floor(intervalOne % 6000 / 100);\n\n  // Start and stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n    }\n  };\n  const reset = () => {\n    setIsRunning(null);\n    setTime(originalIntOne);\n    setRounds(originalRounds);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DisplayTime, {\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        \"background-color\": \"blue\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: isRunning && intervalOne != 0 ? \"Pause\" : \"Start\",\n          onClick: startStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Reset\",\n          onClick: reset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \">>\",\n          onClick: () => setTime(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Tabata, \"ku1+uQzcjPiQ4Xf1oqehcdZPjjE=\");\n_c = Tabata;\nexport default Tabata;\nvar _c;\n$RefreshReg$(_c, \"Tabata\");","map":{"version":3,"names":["useState","useEffect","Button","DisplayTime","Panel","jsxDEV","_jsxDEV","Tabata","_s","isRunning","setIsRunning","intervalOne","setIntervalOne","intervalTwo","setIntervalTwo","rounds","setRounds","originalIntOne","originalIntTwo","originalRounds","i","intervalId","setInterval","setTime","clearInterval","console","log","time","originalTime","minutes","Math","floor","seconds","startStop","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","onClick","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Tabata.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\n\nconst Tabata = () => {\n    // Store the time and button\n    const [isRunning, setIsRunning] = useState(null);\n    const [intervalOne, setIntervalOne] = useState(1000);\n    const [intervalTwo, setIntervalTwo] = useState(3000);\n    const [rounds, setRounds] = useState(2);\n\n    const originalIntOne = 1000\n    const originalIntTwo = 30000\n    const originalRounds = 2\n\n    useEffect(() => {\n        for (var i = 0; i < rounds; i++ ) {\n            let intervalId;\n            if (isRunning && intervalOne != 0) {\n                // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n                intervalId = setInterval(() => setTime(intervalOne - 1), 10);\n                return () => clearInterval(intervalId);\n            }\n            setTime(originalIntTwo);\n            console.log(time, rounds, originalTime, originalRounds, i)\n        }\n\n    }, [isRunning, time, rounds]);\n\n     // Minutes calculation\n     const minutes = Math.floor((intervalOne % 360000) / 6000);\n \n     // Seconds calculation\n     const seconds = Math.floor((intervalOne % 6000) / 100);\n\n    // Start and stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n        }\n    }\n\n    const reset = () => {\n        setIsRunning(null);\n        setTime(originalIntOne);\n        setRounds(originalRounds)\n    }\n\n    return (\n    <div>\n        <DisplayTime\n            minutes={minutes}\n            seconds={seconds}/>\n        <div className=\"grid-container\">\n            <Panel background-color=\"blue\">\n                <Button \n                    text={isRunning && intervalOne != 0 ? \"Pause\" : \"Start\"}\n                    onClick={startStop}/>\n                <Button \n                    text=\"Reset\"\n                    onClick={reset}/>\n                <Button \n                    text=\">>\"\n                    onClick={() => setTime(0)}/>\n            </Panel>\n        </div>\n    </div>\n    )\n};\n\nexport default Tabata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}