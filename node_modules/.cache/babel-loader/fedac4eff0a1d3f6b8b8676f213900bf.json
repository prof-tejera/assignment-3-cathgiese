{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/XY.js\";\nimport React from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\nconst XY = ({\n  minutes,\n  seconds,\n  rounds,\n  id,\n  status\n}) => {\n  // Store the time and button\n  const {\n    isRunning,\n    nextTimer,\n    isReset\n  } = useContext(TimerContext);\n  const [time, setTime] = useState(minutes + seconds);\n  const [roundsCount, setRoundsCount] = useState(rounds);\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && status === \"running\" && time > 0) {\n      // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    } else if (isRunning && status === \"running\" && time === 0 && rounds >= 1) {\n      setTime(minutes + seconds + 99);\n      setRoundsCount(roundsCount - 1);\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    }\n    console.log(rounds);\n    if (roundsCount === 0) {\n      nextTimer();\n      setTime(minutes + seconds);\n      setRoundsCount(rounds);\n    } else if (status === \"complete\" || isReset) {\n      setTime(minutes + seconds);\n      setRoundsCount(rounds);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time, roundsCount, minutes, seconds, rounds, isReset, nextTimer, status]);\n\n  // Minutes calculation\n  const minutesCalc = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const secondsCalc = Math.floor(time % 6000 / 100);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"XY: \", minutes / 6000, \"m\", seconds / 100, \"s for \", rounds, \" rounds\", /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutesCalc,\n    seconds: secondsCalc,\n    displayStyle: status === \"running\" ? \"Default-display Running\" : status === \"complete\" ? \"Default-display Complete\" : \"Default-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n};\nexport default XY;","map":{"version":3,"names":["React","useState","useEffect","useContext","DisplayTime","TimerContext","XY","minutes","seconds","rounds","id","status","isRunning","nextTimer","isReset","time","setTime","roundsCount","setRoundsCount","intervalId","setInterval","console","log","clearInterval","minutesCalc","Math","floor","secondsCalc","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","displayStyle"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/XY.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\n\nconst XY = ({minutes, seconds, rounds, id, status}) => {\n    // Store the time and button\n    const {isRunning, nextTimer, isReset} = useContext(TimerContext)\n    const [time, setTime] = useState(minutes+seconds);\n    const [roundsCount, setRoundsCount] = useState(rounds)\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isRunning && status === \"running\" && time > 0) {\n            // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n            intervalId = setInterval(() => setTime(time - 1), 7);\n            }\n        else if (isRunning && status === \"running\" && time === 0 && rounds >= 1) {\n            setTime(minutes+seconds+99)\n            setRoundsCount(roundsCount-1)\n            intervalId = setInterval(() => setTime(time - 1), 7);\n        }\n        console.log(rounds)\n        if (roundsCount === 0){\n            nextTimer()\n            setTime(minutes+seconds)\n            setRoundsCount(rounds)\n        }\n        else if (status === \"complete\" || isReset){\n            setTime(minutes+seconds)\n            setRoundsCount(rounds)\n        }\n        return () => clearInterval(intervalId);\n\n      }, [isRunning, time, roundsCount, minutes, seconds, rounds, isReset, nextTimer, status]);\n\n    // Minutes calculation\n    const minutesCalc = Math.floor((time % 360000) / 6000);\n \n    // Seconds calculation\n    const secondsCalc = Math.floor((time % 6000) / 100);\n\n    return (\n        <div className=\"grid-container\">\n            XY: {minutes/6000}m{seconds/100}s for {rounds} rounds\n            <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}\n                displayStyle={status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\")}/>\n        </div>\n    )\n};\n\nexport default XY;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}