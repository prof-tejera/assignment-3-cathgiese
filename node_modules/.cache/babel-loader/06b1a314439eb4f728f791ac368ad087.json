{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/TimerProvider.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nexport const TimerContext = React.createContext({});\nconst TimerProvider = ({\n  children\n}) => {\n  const [timers, setTimers] = useState([]);\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(0);\n  const [min, setMinutes] = useState(null);\n  const [sec, setSeconds] = useState(null);\n  const [workCount, setWorkCount] = useState(0);\n  const [restCount, setRestCount] = useState(0);\n  const [rounds, setRounds] = useState(0);\n  const [roundsCount, setRoundsCount] = useState(0);\n  const [workStatus, setWorkStatus] = useState(null);\n  return /*#__PURE__*/React.createElement(TimerContext.Provider, {\n    value: {\n      // functions go here\n      timers,\n      minutes: () => Math.floor(time % 360000 / 6000),\n      seconds: () => Math.floor(time % 360000 / 6000),\n      startStop: () => {\n        if (isRunning) {\n          setIsRunning(null);\n        } else {\n          setIsRunning(true);\n        }\n      },\n      handleRounds: e => {\n        setRoundsCount(e.target.value);\n        setRounds(e.target.value);\n      },\n      reset: () => {\n        setIsRunning(null);\n        setTime(workCount);\n        setRounds(roundsCount);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default TimerProvider;","map":{"version":3,"names":["React","useState","TimerContext","createContext","TimerProvider","children","timers","setTimers","isRunning","setIsRunning","time","setTime","min","setMinutes","sec","setSeconds","workCount","setWorkCount","restCount","setRestCount","rounds","setRounds","roundsCount","setRoundsCount","workStatus","setWorkStatus","createElement","Provider","value","minutes","Math","floor","seconds","startStop","handleRounds","e","target","reset","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/TimerProvider.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nexport const TimerContext = React.createContext({});\n\nconst TimerProvider = ({ children }) => {\n    const [timers, setTimers] = useState([])\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(0);\n    const [min, setMinutes] = useState(null);\n    const [sec, setSeconds] = useState(null);\n    const [workCount, setWorkCount] = useState(0);\n    const [restCount, setRestCount] = useState(0);\n    const [rounds, setRounds] = useState(0);\n    const [roundsCount, setRoundsCount] = useState(0)\n    const [workStatus, setWorkStatus] = useState(null)\n    \n    return (\n        <TimerContext.Provider\n            value={{\n                // functions go here\n                timers,\n                minutes: () => Math.floor((time % 360000) / 6000),\n                seconds: () => Math.floor((time % 360000) / 6000),\n                startStop: () => {\n                    if (isRunning) {\n                        setIsRunning(null)\n                    } else {\n                        setIsRunning(true)\n                    }\n                },\n                handleRounds: e => {\n                    setRoundsCount(e.target.value)\n                    setRounds(e.target.value)\n                },\n                reset: () => {\n                    setIsRunning(null);\n                    setTime(workCount)\n                    setRounds(roundsCount)\n                }\n\n            }}\n        >{children}</TimerContext.Provider>\n    )\n};\n\nexport default TimerProvider"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,YAAY,GAAGF,KAAK,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,GAAG,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,GAAG,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAElD,oBACID,KAAA,CAAA0B,aAAA,CAACxB,YAAY,CAACyB,QAAQ;IAClBC,KAAK,EAAE;MACH;MACAtB,MAAM;MACNuB,OAAO,EAAEA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAAErB,IAAI,GAAG,MAAM,GAAI,IAAI,CAAC;MACjDsB,OAAO,EAAEA,CAAA,KAAMF,IAAI,CAACC,KAAK,CAAErB,IAAI,GAAG,MAAM,GAAI,IAAI,CAAC;MACjDuB,SAAS,EAAEA,CAAA,KAAM;QACb,IAAIzB,SAAS,EAAE;UACXC,YAAY,CAAC,IAAI,CAAC;QACtB,CAAC,MAAM;UACHA,YAAY,CAAC,IAAI,CAAC;QACtB;MACJ,CAAC;MACDyB,YAAY,EAAEC,CAAC,IAAI;QACfZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;QAC9BP,SAAS,CAACc,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;MAC7B,CAAC;MACDS,KAAK,EAAEA,CAAA,KAAM;QACT5B,YAAY,CAAC,IAAI,CAAC;QAClBE,OAAO,CAACK,SAAS,CAAC;QAClBK,SAAS,CAACC,WAAW,CAAC;MAC1B;IAEJ,CAAE;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACJtC,QAAgC,CAAC;AAE3C,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}