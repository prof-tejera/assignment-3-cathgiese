{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/TimerProvider.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nexport const TimerContext = React.createContext({});\nconst TimerProvider = ({\n  children\n}) => {\n  const [timers, setTimers] = useState([]);\n  const [isRunning, setIsRunning] = useState(null);\n  const [totalTime, setTotalTime] = useState(0);\n  const [isReset, setIsReset] = useState(null);\n\n  // Current running timer\n  const [activeTimerIndex, setActiveTimerIndex] = useState(0);\n  const totalTimeCalc = () => {\n    const totalMin = timers.map(timer => timer.rounds > 1 ? timer.minutes * timer.rounds : timer.minutes);\n    totalMin.forEach(val => setTotalTime(totalTime + val));\n    const totalSec = timers.map(timer => timer.rounds > 1 ? timer.seconds * timer.rounds : timer.seconds);\n    totalSec.forEach(val => setTotalTime(totalTime + val));\n    console.log(totalMin, totalSec);\n  };\n  const nextTimer = () => {\n    if (activeTimerIndex === timers.length - 1) {\n      timers[activeTimerIndex].status = \"complete\";\n      setTimers(timers);\n      restart();\n    } else {\n      timers[activeTimerIndex].status = \"complete\";\n      timers[activeTimerIndex + 1].status = \"running\";\n      setActiveTimerIndex(activeTimerIndex + 1);\n      setTimers(timers);\n    }\n  };\n\n  // Restart timer\n  const restart = () => {\n    setIsReset(true);\n    setIsRunning(null);\n    setActiveTimerIndex(0);\n    timers.map(timer => timer.status = \"ready\");\n    timers[0].status = \"running\";\n    setTimers(timers);\n    totalTimeCalc();\n  };\n\n  // Start or stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n      setIsReset(null);\n    }\n  };\n\n  // Delete from queue\n  const remove = ({\n    id\n  }) => {\n    if (timers.length === 1) {\n      setTimers([]);\n    } else {\n      const match = timers.map(timer => timer.id === id);\n      const i = match.indexOf(true);\n      if (i === 0) {\n        // Update timer list\n        const newTimers = timers.slice(1);\n        newTimers[0].status = \"running\";\n        setTimers(newTimers);\n\n        // recalculate total time\n        const minusMin = timers.map(timer => timer.minutes);\n        minusMin.forEach(val => setTotalTime(totalTime - val));\n        const minusSec = timers.map(timer => timer.seconds);\n        minusSec.forEach(val => setTotalTime(totalTime - val));\n      } else {\n        // Update timer list\n        setTimers([...timers.slice(0, i), ...timers.slice(i + 1)]);\n\n        // recalculate total time\n        const minusMin = timers.map(timer => timer.minutes);\n        minusMin.forEach(val => setTotalTime(totalTime - val));\n        const minusSec = timers.map(timer => timer.seconds);\n        minusSec.forEach(val => setTotalTime(totalTime - val));\n      }\n    }\n    setActiveTimerIndex(0);\n  };\n  return /*#__PURE__*/React.createElement(TimerContext.Provider, {\n    value: {\n      timers,\n      setTimers,\n      isRunning,\n      setIsRunning,\n      totalTime,\n      setTotalTime,\n      totalTimeCalc,\n      activeTimerIndex,\n      setActiveTimerIndex,\n      nextTimer,\n      restart,\n      startStop,\n      isReset,\n      setIsReset,\n      remove\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default TimerProvider;","map":{"version":3,"names":["React","useState","TimerContext","createContext","TimerProvider","children","timers","setTimers","isRunning","setIsRunning","totalTime","setTotalTime","isReset","setIsReset","activeTimerIndex","setActiveTimerIndex","totalTimeCalc","totalMin","map","timer","rounds","minutes","forEach","val","totalSec","seconds","console","log","nextTimer","length","status","restart","startStop","remove","id","match","i","indexOf","newTimers","slice","minusMin","minusSec","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/TimerProvider.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nexport const TimerContext = React.createContext({});\n\nconst TimerProvider = ({ children }) => {\n    const [timers, setTimers] = useState([]);\n    const [isRunning, setIsRunning] = useState(null);\n    const [totalTime, setTotalTime] = useState(0);\n    const [isReset, setIsReset] = useState(null);\n\n    // Current running timer\n    const [activeTimerIndex, setActiveTimerIndex] = useState(0); \n    \n    const totalTimeCalc = () => {\n        const totalMin = timers.map((timer) => (\n            timer.rounds > 1 ? (timer.minutes*timer.rounds) : (timer.minutes) ))\n        totalMin.forEach((val) => setTotalTime(totalTime+val))\n\n        const totalSec = timers.map((timer) => (\n            timer.rounds > 1 ? (timer.seconds*timer.rounds) : (timer.seconds) ))\n        totalSec.forEach((val) => setTotalTime(totalTime+val))\n\n        console.log(totalMin, totalSec)\n    }\n    \n    const nextTimer = () => {\n        if (activeTimerIndex === timers.length-1) {\n            timers[activeTimerIndex].status = \"complete\"\n            setTimers(timers)\n            restart()\n        }\n        else {\n            timers[activeTimerIndex].status = \"complete\"\n            timers[activeTimerIndex+1].status = \"running\"\n            setActiveTimerIndex(activeTimerIndex+1)\n            setTimers(timers)\n        }\n    }\n\n    // Restart timer\n    const restart = () => {\n        setIsReset(true)\n        setIsRunning(null)\n        setActiveTimerIndex(0)\n        timers.map((timer) => timer.status = \"ready\")\n        timers[0].status = \"running\"\n        setTimers(timers)\n        totalTimeCalc()\n    }\n\n    // Start or stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n            setIsReset(null)\n        }\n    }\n\n    // Delete from queue\n    const remove = ({id}) => {\n\n        if (timers.length === 1) {\n            setTimers([])\n        }\n\n        else {\n            const match = timers.map((timer) => timer.id === id)\n            const i = match.indexOf(true)\n\n            if (i === 0) {\n                // Update timer list\n                const newTimers = timers.slice(1)\n                newTimers[0].status = \"running\"\n                setTimers(newTimers)\n\n                // recalculate total time\n                const minusMin = timers.map((timer) => timer.minutes)\n                minusMin.forEach((val) => setTotalTime(totalTime-val))\n\n                const minusSec = timers.map((timer) => timer.seconds)\n                minusSec.forEach((val) => setTotalTime(totalTime-val))\n            }\n    \n            else {\n                // Update timer list\n                setTimers([\n                 ...timers.slice(0, i),\n                 ...timers.slice(i + 1),\n               ])\n\n               // recalculate total time\n               const minusMin = timers.map((timer) => timer.minutes)\n               minusMin.forEach((val) => setTotalTime(totalTime-val))\n\n               const minusSec = timers.map((timer) => timer.seconds)\n               minusSec.forEach((val) => setTotalTime(totalTime-val))\n            }\n        }\n\n        setActiveTimerIndex(0)\n    }\n\n    return (\n        <TimerContext.Provider\n            value={{\n                timers,\n                setTimers,\n                isRunning,\n                setIsRunning,\n                totalTime,\n                setTotalTime,\n                totalTimeCalc,\n                activeTimerIndex,\n                setActiveTimerIndex,\n                nextTimer,\n                restart,\n                startStop,\n                isReset,\n                setIsReset,\n                remove,\n            }}\n        >{children}</TimerContext.Provider>\n    )\n};\n\nexport default TimerProvider"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,YAAY,GAAGF,KAAK,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE3D,MAAMe,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGX,MAAM,CAACY,GAAG,CAAEC,KAAK,IAC9BA,KAAK,CAACC,MAAM,GAAG,CAAC,GAAID,KAAK,CAACE,OAAO,GAACF,KAAK,CAACC,MAAM,GAAKD,KAAK,CAACE,OAAU,CAAC;IACxEJ,QAAQ,CAACK,OAAO,CAAEC,GAAG,IAAKZ,YAAY,CAACD,SAAS,GAACa,GAAG,CAAC,CAAC;IAEtD,MAAMC,QAAQ,GAAGlB,MAAM,CAACY,GAAG,CAAEC,KAAK,IAC9BA,KAAK,CAACC,MAAM,GAAG,CAAC,GAAID,KAAK,CAACM,OAAO,GAACN,KAAK,CAACC,MAAM,GAAKD,KAAK,CAACM,OAAU,CAAC;IACxED,QAAQ,CAACF,OAAO,CAAEC,GAAG,IAAKZ,YAAY,CAACD,SAAS,GAACa,GAAG,CAAC,CAAC;IAEtDG,OAAO,CAACC,GAAG,CAACV,QAAQ,EAAEO,QAAQ,CAAC;EACnC,CAAC;EAED,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAId,gBAAgB,KAAKR,MAAM,CAACuB,MAAM,GAAC,CAAC,EAAE;MACtCvB,MAAM,CAACQ,gBAAgB,CAAC,CAACgB,MAAM,GAAG,UAAU;MAC5CvB,SAAS,CAACD,MAAM,CAAC;MACjByB,OAAO,CAAC,CAAC;IACb,CAAC,MACI;MACDzB,MAAM,CAACQ,gBAAgB,CAAC,CAACgB,MAAM,GAAG,UAAU;MAC5CxB,MAAM,CAACQ,gBAAgB,GAAC,CAAC,CAAC,CAACgB,MAAM,GAAG,SAAS;MAC7Cf,mBAAmB,CAACD,gBAAgB,GAAC,CAAC,CAAC;MACvCP,SAAS,CAACD,MAAM,CAAC;IACrB;EACJ,CAAC;;EAED;EACA,MAAMyB,OAAO,GAAGA,CAAA,KAAM;IAClBlB,UAAU,CAAC,IAAI,CAAC;IAChBJ,YAAY,CAAC,IAAI,CAAC;IAClBM,mBAAmB,CAAC,CAAC,CAAC;IACtBT,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACW,MAAM,GAAG,OAAO,CAAC;IAC7CxB,MAAM,CAAC,CAAC,CAAC,CAACwB,MAAM,GAAG,SAAS;IAC5BvB,SAAS,CAACD,MAAM,CAAC;IACjBU,aAAa,CAAC,CAAC;EACnB,CAAC;;EAED;EACA,MAAMgB,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIxB,SAAS,EAAE;MACXC,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACHA,YAAY,CAAC,IAAI,CAAC;MAClBI,UAAU,CAAC,IAAI,CAAC;IACpB;EACJ,CAAC;;EAED;EACA,MAAMoB,MAAM,GAAGA,CAAC;IAACC;EAAE,CAAC,KAAK;IAErB,IAAI5B,MAAM,CAACuB,MAAM,KAAK,CAAC,EAAE;MACrBtB,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,MAEI;MACD,MAAM4B,KAAK,GAAG7B,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACe,EAAE,KAAKA,EAAE,CAAC;MACpD,MAAME,CAAC,GAAGD,KAAK,CAACE,OAAO,CAAC,IAAI,CAAC;MAE7B,IAAID,CAAC,KAAK,CAAC,EAAE;QACT;QACA,MAAME,SAAS,GAAGhC,MAAM,CAACiC,KAAK,CAAC,CAAC,CAAC;QACjCD,SAAS,CAAC,CAAC,CAAC,CAACR,MAAM,GAAG,SAAS;QAC/BvB,SAAS,CAAC+B,SAAS,CAAC;;QAEpB;QACA,MAAME,QAAQ,GAAGlC,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACE,OAAO,CAAC;QACrDmB,QAAQ,CAAClB,OAAO,CAAEC,GAAG,IAAKZ,YAAY,CAACD,SAAS,GAACa,GAAG,CAAC,CAAC;QAEtD,MAAMkB,QAAQ,GAAGnC,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACM,OAAO,CAAC;QACrDgB,QAAQ,CAACnB,OAAO,CAAEC,GAAG,IAAKZ,YAAY,CAACD,SAAS,GAACa,GAAG,CAAC,CAAC;MAC1D,CAAC,MAEI;QACD;QACAhB,SAAS,CAAC,CACT,GAAGD,MAAM,CAACiC,KAAK,CAAC,CAAC,EAAEH,CAAC,CAAC,EACrB,GAAG9B,MAAM,CAACiC,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC,CACvB,CAAC;;QAEF;QACA,MAAMI,QAAQ,GAAGlC,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACE,OAAO,CAAC;QACrDmB,QAAQ,CAAClB,OAAO,CAAEC,GAAG,IAAKZ,YAAY,CAACD,SAAS,GAACa,GAAG,CAAC,CAAC;QAEtD,MAAMkB,QAAQ,GAAGnC,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACM,OAAO,CAAC;QACrDgB,QAAQ,CAACnB,OAAO,CAAEC,GAAG,IAAKZ,YAAY,CAACD,SAAS,GAACa,GAAG,CAAC,CAAC;MACzD;IACJ;IAEAR,mBAAmB,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACIf,KAAA,CAAA0C,aAAA,CAACxC,YAAY,CAACyC,QAAQ;IAClBC,KAAK,EAAE;MACHtC,MAAM;MACNC,SAAS;MACTC,SAAS;MACTC,YAAY;MACZC,SAAS;MACTC,YAAY;MACZK,aAAa;MACbF,gBAAgB;MAChBC,mBAAmB;MACnBa,SAAS;MACTG,OAAO;MACPC,SAAS;MACTpB,OAAO;MACPC,UAAU;MACVoB;IACJ,CAAE;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACJ7C,QAAgC,CAAC;AAE3C,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}