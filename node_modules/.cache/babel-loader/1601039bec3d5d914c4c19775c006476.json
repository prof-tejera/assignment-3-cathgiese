{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Countdown.js\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\n// import Selector from \"../generic/Selector/Selector\";\n// import Helpers from '../../utils/helpers';\n\nconst Countdown = ({\n  minutes,\n  seconds\n}) => {\n  // Store the time and button\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(0);\n  // const [min, setMinutes] = useState(null);\n  // const [sec, setSeconds] = useState(null);\n\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && time <= minutes + seconds) {\n      // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n      intervalId = setInterval(() => {\n        setTime(time - 1);\n      }, 7);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time, minutes, seconds]);\n\n  // Minutes calculation\n  const minutesCalc = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const secondsCalc = Math.floor(time % 6000 / 100);\n\n  // Start and stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n      setTime(min + sec + 99);\n    }\n  };\n\n  // Reset timer\n  const reset = () => {\n    setIsRunning(null);\n    setTime(min + sec);\n  };\n\n  // Fast forward (clear) timer\n  const fastForward = () => {\n    setTime(0);\n  };\n  console.log(time);\n\n  // Show 59 numbers for minutes and seconds\n  // const timeNumbersList = [...Array(60).keys()]\n  // const timeNumbers = timeNumbersList.map(number =>\n  //     <option value={number} key={number}>{number}</option>)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    \"background-color\": \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Countdown: \", minutes / 6000, \"m\", seconds / 100, \"s\", /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutesCalc,\n    seconds: secondsCalc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: isRunning && time !== 0 ? \"Pause\" : \"Start\",\n    onClick: startStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Reset\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \">>\",\n    onClick: fastForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })));\n};\nexport default Countdown;","map":{"version":3,"names":["React","useState","useEffect","Button","DisplayTime","Panel","Countdown","minutes","seconds","isRunning","setIsRunning","time","setTime","intervalId","setInterval","clearInterval","minutesCalc","Math","floor","secondsCalc","startStop","min","sec","reset","fastForward","console","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Countdown.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\n// import Selector from \"../generic/Selector/Selector\";\n// import Helpers from '../../utils/helpers';\n\nconst Countdown = ({minutes, seconds}) => {\n    // Store the time and button\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(0);\n    // const [min, setMinutes] = useState(null);\n    // const [sec, setSeconds] = useState(null);\n\n    useEffect(() => {\n        let intervalId;\n        if (isRunning && time <= (minutes + seconds)) {\n            // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n            intervalId = setInterval(() => {setTime(time - 1)}, 7);\n            }\n        return () => clearInterval(intervalId);\n\n      }, [isRunning, time, minutes, seconds]);\n\n    // Minutes calculation\n    const minutesCalc = Math.floor((time % 360000) / 6000);\n \n    // Seconds calculation\n    const secondsCalc = Math.floor((time % 6000) / 100);\n\n    // Start and stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n            setTime(min + sec + 99)\n        }\n    }\n\n    // Reset timer\n    const reset = () => {\n        setIsRunning(null);\n        setTime(min + sec);\n    }\n\n    // Fast forward (clear) timer\n    const fastForward = () => {\n        setTime(0)\n    }\n\n    console.log(time)\n\n    // Show 59 numbers for minutes and seconds\n    // const timeNumbersList = [...Array(60).keys()]\n    // const timeNumbers = timeNumbersList.map(number =>\n    //     <option value={number} key={number}>{number}</option>)\n\n    return (\n        <div className=\"grid-container\">\n        <Panel background-color=\"blue\">\n            {/* <Selector \n                label=\"min\"\n                onChange={e => setMinutes(e.target.value*6000)}\n                numbers={timeNumbers}/>\n            <Selector \n                label=\"sec\"\n                onChange={e => setSeconds(e.target.value*100)}\n                numbers={timeNumbers}/> */}\n            Countdown: {minutes/6000}m{seconds/100}s\n            <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}/>\n        \n            <Button \n                text={isRunning && time !== 0 ? \"Pause\" : \"Start\"}\n                onClick={startStop}/>\n            <Button \n                text=\"Reset\"\n                onClick={reset}/>\n            <Button \n                text=\">>\"\n                onClick={fastForward}/>\n            </Panel>\n        </div>\n    )\n};\n\nexport default Countdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}