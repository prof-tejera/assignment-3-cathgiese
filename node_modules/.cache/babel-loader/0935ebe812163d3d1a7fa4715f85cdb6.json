{"ast":null,"code":"import _slicedToArray from\"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useState,useEffect,useContext}from\"react\";import DisplayTime from\"../generic/DisplayTime/DisplayTime\";import{TimerContext}from'../../TimerProvider';var Tabata=function Tabata(_ref){var work=_ref.work,rest=_ref.rest,rounds=_ref.rounds,id=_ref.id,status=_ref.status;// Store the time and button\nvar _useContext=useContext(TimerContext),isRunning=_useContext.isRunning,nextTimer=_useContext.nextTimer,isReset=_useContext.isReset;var _useState=useState(work),_useState2=_slicedToArray(_useState,2),time=_useState2[0],setTime=_useState2[1];var _useState3=useState(rounds),_useState4=_slicedToArray(_useState3,2),roundsCount=_useState4[0],setRoundsCount=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),workStatus=_useState6[0],setWorkStatus=_useState6[1];useEffect(function(){var intervalId;if(isRunning&&status===\"running\"&&time!==0&&roundsCount>0){// setting time from 0 to 1 every 10 millisecond using javascript setInterval method\nintervalId=setInterval(function(){return setTime(time-1);},7);}if(isRunning&&status===\"running\"&&workStatus&&time===0&&roundsCount>0){setTime(rest+99);setWorkStatus(null);intervalId=setInterval(function(){return setTime(time-1);},7);}if(isRunning&&status===\"running\"&&workStatus===null&&time===0&&roundsCount>0){setTime(work+99);setWorkStatus(true);setRoundsCount(roundsCount-1);intervalId=setInterval(function(){return setTime(time-1);},7);}else if(roundsCount===0){nextTimer();setTime(work);setRoundsCount(rounds);setWorkStatus(true);}else if(status===\"complete\"||isReset){setTime(work);setRoundsCount(rounds);setWorkStatus(true);}return function(){return clearInterval(intervalId);};},[isReset,isRunning,nextTimer,rest,rounds,roundsCount,status,time,work,workStatus]);// Seconds calculation\nvar seconds=Math.floor(time%6000/100);return/*#__PURE__*/React.createElement(\"div\",{className:\"grid-container\"},\"Tabata: \",work/100,\"s work, \",rest/100,\"s rest for \",rounds,\" rounds\",/*#__PURE__*/React.createElement(DisplayTime,{minutes:\"0\",seconds:seconds,displayStyle:status===\"running\"?\"Default-display Running\":status===\"complete\"?\"Default-display Complete\":\"Default-display\"}));};export default Tabata;","map":{"version":3,"names":["React","useState","useEffect","useContext","DisplayTime","TimerContext","Tabata","_ref","work","rest","rounds","id","status","_useContext","isRunning","nextTimer","isReset","_useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","roundsCount","setRoundsCount","_useState5","_useState6","workStatus","setWorkStatus","intervalId","setInterval","clearInterval","seconds","Math","floor","createElement","className","minutes","displayStyle"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Tabata.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\n\nconst Tabata = ({work, rest, rounds, id, status}) => {\n    // Store the time and button\n    const {isRunning, nextTimer, isReset} = useContext(TimerContext)\n    const [time, setTime] = useState(work);\n    const [roundsCount, setRoundsCount] = useState(rounds)\n    const [workStatus, setWorkStatus] = useState(true)\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isRunning && status === \"running\" && time !==0 && roundsCount > 0) {\n            // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n            intervalId = setInterval(() => setTime(time - 1), 7);\n            }\n\n        if (isRunning && status === \"running\" && workStatus && time === 0 && roundsCount > 0) {\n            setTime(rest+99)\n            setWorkStatus(null)\n            intervalId = setInterval(() => setTime(time - 1), 7);\n        }\n\n        if (isRunning && status === \"running\" && workStatus === null && time === 0 && roundsCount > 0) {\n            setTime(work+99 )\n            setWorkStatus(true)\n            setRoundsCount(roundsCount-1) \n            intervalId = setInterval(() => setTime(time - 1), 7);\n        }\n        \n        else if(roundsCount === 0){\n            nextTimer()\n            setTime(work)\n            setRoundsCount(rounds)\n            setWorkStatus(true)\n        }\n\n        else if (status === \"complete\" || isReset){\n            setTime(work)\n            setRoundsCount(rounds)\n            setWorkStatus(true)\n        }\n\n        return () => clearInterval(intervalId);\n\n      }, [isReset, isRunning, nextTimer, rest, rounds, roundsCount, status, time, work, workStatus]);\n \n    // Seconds calculation\n    const seconds = Math.floor((time % 6000) / 100);\n\n    return (\n    <div className=\"grid-container\">\n        Tabata: {work/100}s work, {rest/100}s rest for {rounds} rounds\n        <DisplayTime\n            minutes=\"0\"\n            seconds={seconds}\n            displayStyle={status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\")}/>\n        </div>\n    )\n};\n\nexport default Tabata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}