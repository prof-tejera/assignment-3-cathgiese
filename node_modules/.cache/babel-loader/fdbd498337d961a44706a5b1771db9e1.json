{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Stopwatch.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { useState, useEffect, useContext } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\nconst Delete = styled.div`\n  display: flex;\n  justify-content: right;\n`;\nconst Stopwatch = ({\n  minutes,\n  seconds,\n  id,\n  status\n}) => {\n  // Store the time and button\n  const {\n    timers,\n    setTimers,\n    isRunning,\n    nextTimer,\n    isReset\n  } = useContext(TimerContext);\n  const [time, setTime] = useState(0);\n\n  // Credit for setInterval & math.floor:\n  // https://medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && status === \"running\" && time >= 0) {\n      intervalId = setInterval(() => {\n        setTime(time + 1);\n      }, 7);\n    }\n    if (isRunning && time === minutes + seconds && status === \"running\") {\n      nextTimer();\n      setTime(0);\n    } else if (status === \"complete\" || isReset) {\n      setTime(0);\n    }\n    return () => clearInterval(intervalId);\n  }, [isReset, isRunning, minutes, nextTimer, seconds, status, time]);\n\n  // // Minutes calculation\n  const minutesCalc = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const secondsCalc = Math.floor(time % 6000 / 100);\n  const remove = () => {\n    const newTimersList = timers.filter(timer => timer.id !== id);\n    setTimers(newTimersList);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Delete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"-\",\n    color: isRunning ? \"hidden\" : \"Default-button Button-danger\",\n    onClick: remove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), \"Stopwatch: \", minutes / 6000, \"m\", seconds / 100, \"s\", /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutesCalc,\n    seconds: secondsCalc,\n    displayStyle: status === \"running\" ? \"Default-display Running\" : \"Default-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n};\nexport default Stopwatch;","map":{"version":3,"names":["React","styled","useState","useEffect","useContext","Button","DisplayTime","TimerContext","Delete","div","Stopwatch","minutes","seconds","id","status","timers","setTimers","isRunning","nextTimer","isReset","time","setTime","intervalId","setInterval","clearInterval","minutesCalc","Math","floor","secondsCalc","remove","newTimersList","filter","timer","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","color","onClick","displayStyle"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Stopwatch.js"],"sourcesContent":["import React from 'react'\nimport styled from \"styled-components\";\nimport { useState, useEffect, useContext } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\n\nconst Delete = styled.div`\n  display: flex;\n  justify-content: right;\n`;\n\nconst Stopwatch = ({minutes, seconds, id, status}) => {\n    // Store the time and button\n    const {timers, setTimers, isRunning, nextTimer, isReset} = useContext(TimerContext)\n    const [time, setTime] = useState(0);\n\n    // Credit for setInterval & math.floor:\n    // https://medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n\n     useEffect(() => {\n        let intervalId;\n\n        if (isRunning && status === \"running\" && time >= 0) {\n            intervalId = setInterval(() => {setTime(time + 1)}, 7);\n        }\n     \n        if (isRunning && time === (minutes+seconds) && status === \"running\") {\n            nextTimer()\n            setTime(0)\n        }\n\n        else if (status === \"complete\" || isReset){\n            setTime(0)\n        }\n\n        return () => clearInterval(intervalId);\n        \n      }, [isReset, isRunning, minutes, nextTimer, seconds, status, time]);\n\n    \n    // // Minutes calculation\n    const minutesCalc = Math.floor((time % 360000) / 6000);\n\n    // Seconds calculation\n    const secondsCalc = Math.floor((time % 6000) / 100);\n\n    const remove = () => {\n        const newTimersList = timers.filter(timer => timer.id !== id)\n        setTimers(newTimersList)\n    }\n\n    return (\n        <div className=\"grid-container\">\n            <Delete>\n                <Button \n                    text=\"-\"\n                    color={isRunning ? \"hidden\":\"Default-button Button-danger\"}\n                    onClick={remove}/>\n            </Delete>\n            Stopwatch: {minutes/6000}m{seconds/100}s\n            <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}\n                displayStyle={status === \"running\" ? \"Default-display Running\" : \"Default-display\"}/>\n        </div>\n    )\n};\n\nexport default Stopwatch;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,WAAW,MAAM,oCAAoC;AAC5D,SAASC,YAAY,QAAQ,qBAAqB;AAElD,MAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAI;AAC1B;AACA;AACA,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAC;EAACC,OAAO;EAAEC,OAAO;EAAEC,EAAE;EAAEC;AAAM,CAAC,KAAK;EAClD;EACA,MAAM;IAACC,MAAM;IAAEC,SAAS;IAAEC,SAAS;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGf,UAAU,CAACG,YAAY,CAAC;EACnF,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;;EAEnC;EACA;;EAECC,SAAS,CAAC,MAAM;IACb,IAAImB,UAAU;IAEd,IAAIL,SAAS,IAAIH,MAAM,KAAK,SAAS,IAAIM,IAAI,IAAI,CAAC,EAAE;MAChDE,UAAU,GAAGC,WAAW,CAAC,MAAM;QAACF,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MAAA,CAAC,EAAE,CAAC,CAAC;IAC1D;IAEA,IAAIH,SAAS,IAAIG,IAAI,KAAMT,OAAO,GAACC,OAAQ,IAAIE,MAAM,KAAK,SAAS,EAAE;MACjEI,SAAS,CAAC,CAAC;MACXG,OAAO,CAAC,CAAC,CAAC;IACd,CAAC,MAEI,IAAIP,MAAM,KAAK,UAAU,IAAIK,OAAO,EAAC;MACtCE,OAAO,CAAC,CAAC,CAAC;IACd;IAEA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EAExC,CAAC,EAAE,CAACH,OAAO,EAAEF,SAAS,EAAEN,OAAO,EAAEO,SAAS,EAAEN,OAAO,EAAEE,MAAM,EAAEM,IAAI,CAAC,CAAC;;EAGrE;EACA,MAAMK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAEP,IAAI,GAAG,MAAM,GAAI,IAAI,CAAC;;EAEtD;EACA,MAAMQ,WAAW,GAAGF,IAAI,CAACC,KAAK,CAAEP,IAAI,GAAG,IAAI,GAAI,GAAG,CAAC;EAEnD,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACjB,MAAMC,aAAa,GAAGf,MAAM,CAACgB,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACnB,EAAE,KAAKA,EAAE,CAAC;IAC7DG,SAAS,CAACc,aAAa,CAAC;EAC5B,CAAC;EAED,oBACI9B,KAAA,CAAAiC,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BxC,KAAA,CAAAiC,aAAA,CAACzB,MAAM;IAAA2B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACHxC,KAAA,CAAAiC,aAAA,CAAC5B,MAAM;IACHoC,IAAI,EAAC,GAAG;IACRC,KAAK,EAAEzB,SAAS,GAAG,QAAQ,GAAC,8BAA+B;IAC3D0B,OAAO,EAAEd,MAAO;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACjB,CAAC,eACE,EAAC7B,OAAO,GAAC,IAAI,EAAC,GAAC,EAACC,OAAO,GAAC,GAAG,EAAC,GACvC,eAAAZ,KAAA,CAAAiC,aAAA,CAAC3B,WAAW;IACRK,OAAO,EAAEc,WAAY;IACrBb,OAAO,EAAEgB,WAAY;IACrBgB,YAAY,EAAE9B,MAAM,KAAK,SAAS,GAAG,yBAAyB,GAAG,iBAAkB;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACvF,CAAC;AAEd,CAAC;AAED,eAAe9B,SAAS"},"metadata":{},"sourceType":"module"}