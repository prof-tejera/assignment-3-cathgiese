{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stopwatch = () => {\n  _s();\n  // Store the time and button\n  const [activeType, setActiveType] = useState(null);\n  const [time, setTime] = useState(0);\n  const handleClick = type => {\n    if (type === activeType) {\n      setActiveType(null);\n      setTime(0);\n    } else {\n      setActiveType(type);\n      const intervalId = setInterval(() => setTime(time + 1), 10);\n      console.log(intervalId);\n      setTime(intervalId);\n    }\n  };\n\n  // Hours calculation\n  const hours = Math.floor(time / 360000);\n\n  // Minutes calculation\n  const minutes = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // Milliseconds calculation\n  const milliseconds = time % 100;\n\n  // Method to reset timer back to 0\n  const reset = () => {\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Screen, {\n      hours: hours,\n      minutes: minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        \"background-color\": \"blue\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: \"Start\",\n          active: activeType === \"Start\",\n          onClick: () => handleClick(\"Start\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Stop\",\n          active: activeType === \"Stop\",\n          onClick: () => handleClick(\"Stop\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Reset\",\n          active: activeType === \"Reset\",\n          onClick: () => handleClick(\"Reset\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Stopwatch, \"brqQSzjD14ZbtrbzSmerf7K17nI=\");\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["useState","Button","Screen","Panel","jsxDEV","_jsxDEV","Stopwatch","_s","activeType","setActiveType","time","setTime","handleClick","type","intervalId","setInterval","console","log","hours","Math","floor","minutes","seconds","milliseconds","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","active","onClick","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js"],"sourcesContent":["import { useState } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\n\nconst Stopwatch = () => {\n    // Store the time and button\n    const [activeType, setActiveType] = useState(null);\n    const [time, setTime] = useState(0);\n\n    const handleClick = (type) => {\n        if (type === activeType) {\n          setActiveType(null);\n          setTime(0)\n        } else {\n          setActiveType(type);\n          const intervalId = setInterval(() => setTime(time + 1), 10);\n          console.log(intervalId)\n          setTime(intervalId)\n        }\n    }\n\n     // Hours calculation\n    const hours = Math.floor(time / 360000);\n\n    // Minutes calculation\n    const minutes = Math.floor((time % 360000) / 6000);\n\n    // Seconds calculation\n    const seconds = Math.floor((time % 6000) / 100);\n\n    // Milliseconds calculation\n    const milliseconds = time % 100;\n\n    // Method to reset timer back to 0\n    const reset = () => {\n        setTime(0);\n    };\n    \n    return (\n    <div>\n        <Screen \n            hours={hours}\n            minutes={minutes}/>\n        <div className=\"grid-container\">\n            <Panel background-color=\"blue\">\n                <Button \n                    text=\"Start\"\n                    active={activeType === \"Start\"}\n                    onClick={() => handleClick(\"Start\")}/>\n                <Button \n                    text=\"Stop\"\n                    active={activeType === \"Stop\"}\n                    onClick={() => handleClick(\"Stop\")}/>\n                <Button \n                    text=\"Reset\"\n                    active={activeType === \"Reset\"}\n                    onClick={() => handleClick(\"Reset\")}/>\n            </Panel>\n        </div>\n    </div>\n    )\n};\n\nexport default Stopwatch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}