{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Stopwatch.js\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport { useContext } from 'react';\nimport { TimerContext } from '../../TimerProvider';\nconst Stopwatch = () => {\n  const {\n    time,\n    minutes,\n    seconds,\n    startStop,\n    reset,\n    isRunning,\n    fastForward\n  } = useContext(TimerContext);\n  // Store the time and button\n  // const [isRunning, setIsRunning] = useState(null);\n  // const [time, setTime] = useState(0);\n  // const [min, setMinutes] = useState(null);\n  // const [sec, setSeconds] = useState(null);\n\n  // Credit for setInterval & math.floor:\n  // https://medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && time !== minutes + seconds) {\n      // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time + 1), 7);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time, minutes, seconds]);\n\n  // // Minutes calculation\n  // const minutes = Math.floor((time % 360000) / 6000);\n\n  // // Seconds calculation\n  // const seconds = Math.floor((time % 6000) / 100);\n\n  // // Start and stop timer\n  // const startStop = () => {\n  //     if (isRunning) {\n  //         setIsRunning(null)\n  //     } else {\n  //         setIsRunning(true)\n  //     }\n  // }\n\n  // const reset = () => {\n  //     setIsRunning(null);\n  //     setTime(0)\n  // }\n\n  // // Fast forward (clear) timer\n  // const fastForward = () => {\n  //     setTime(0)\n  // }\n\n  // Show 59 numbers for minutes and seconds\n  const numbersList = [...Array(60).keys()];\n  const numbers = numbersList.map(number => /*#__PURE__*/React.createElement(\"option\", {\n    value: number,\n    key: number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, number));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    \"background-color\": \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutes,\n    seconds: seconds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: isRunning ? \"Pause\" : \"Start\",\n    onClick: startStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Reset\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \">>\",\n    onClick: fastForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })));\n};\nexport default Stopwatch;","map":{"version":3,"names":["React","useState","useEffect","Button","DisplayTime","Panel","useContext","TimerContext","Stopwatch","time","minutes","seconds","startStop","reset","isRunning","fastForward","intervalId","setInterval","setTime","clearInterval","numbersList","Array","keys","numbers","map","number","createElement","value","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","text","onClick"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Stopwatch.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport { useContext } from 'react';\nimport { TimerContext } from '../../TimerProvider';\n\nconst Stopwatch = () => {\n    const {time, minutes, seconds, startStop, reset, isRunning, fastForward} = useContext(TimerContext)\n    // Store the time and button\n    // const [isRunning, setIsRunning] = useState(null);\n    // const [time, setTime] = useState(0);\n    // const [min, setMinutes] = useState(null);\n    // const [sec, setSeconds] = useState(null);\n\n    // Credit for setInterval & math.floor:\n    // https://medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n    useEffect(() => {\n        let intervalId;\n        if (isRunning && time !== minutes + seconds) {\n          // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n          intervalId = setInterval(() => setTime(time + 1), 7);\n        }\n        return () => clearInterval(intervalId);\n        \n      }, [isRunning, time, minutes, seconds]);\n\n    // // Minutes calculation\n    // const minutes = Math.floor((time % 360000) / 6000);\n\n    // // Seconds calculation\n    // const seconds = Math.floor((time % 6000) / 100);\n\n    // // Start and stop timer\n    // const startStop = () => {\n    //     if (isRunning) {\n    //         setIsRunning(null)\n    //     } else {\n    //         setIsRunning(true)\n    //     }\n    // }\n\n    // const reset = () => {\n    //     setIsRunning(null);\n    //     setTime(0)\n    // }\n\n    // // Fast forward (clear) timer\n    // const fastForward = () => {\n    //     setTime(0)\n    // }\n\n    // Show 59 numbers for minutes and seconds\n    const numbersList = [...Array(60).keys()]\n    const numbers = numbersList.map(number =>\n        <option value={number} key={number}>{number}</option>)\n    \n    return (\n        <div className=\"grid-container\">\n        <Panel background-color=\"blue\">\n            {/* <Selector \n                label=\"min\"\n                onChange={e => setMinutes(e.target.value*6000)}\n                numbers={numbers}/>\n            <Selector \n                label=\"sec\"\n                onChange={e => setSeconds(e.target.value*100)}\n                numbers={numbers}/> */}\n            <DisplayTime\n                minutes={minutes}\n                seconds={seconds}/>\n        \n            <Button \n                text={isRunning ? \"Pause\" : \"Start\"}\n                onClick={startStop}/>\n            <Button \n                text=\"Reset\"\n                onClick={reset}/>\n            <Button \n                text=\">>\"\n                onClick={fastForward}/>\n        </Panel>\n        </div>\n    )\n};\n\nexport default Stopwatch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}