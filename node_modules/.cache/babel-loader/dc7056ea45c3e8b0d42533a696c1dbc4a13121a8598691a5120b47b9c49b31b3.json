{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Countdown.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = () => {\n  _s();\n  // Store the time and button\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(10000);\n  const [minInput, setMinInput] = useState(0);\n  const [secInput, setSecInput] = useState(0);\n  const countdownTime = () => {\n    let startTime = time;\n  };\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && time != 0) {\n      // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time - 1), 10);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time]);\n\n  // Minutes calculation\n  const minutes = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // Milliseconds calculation\n  const milliseconds = time % 100;\n\n  // Start and stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n    }\n  };\n\n  // Reset timer\n  const reset = () => {\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Screen, {\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Your age:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"x\",\n      name: \"age\",\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        \"background-color\": \"blue\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: isRunning && time != 0 ? \"Pause\" : \"Start\",\n          onClick: startStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Reset\",\n          onClick: reset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"8yjPfJHVa/p6R2RHKZow2nj7wxk=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useState","useEffect","Button","Screen","Panel","jsxDEV","_jsxDEV","Countdown","_s","isRunning","setIsRunning","time","setTime","minInput","setMinInput","secInput","setSecInput","countdownTime","startTime","intervalId","setInterval","clearInterval","minutes","Math","floor","seconds","milliseconds","startStop","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","id","name","type","className","text","onClick","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Countdown.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\n\nconst Countdown = () => {\n    // Store the time and button\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(10000);\n    const [minInput, setMinInput] = useState(0);\n    const [secInput, setSecInput] = useState(0);\n\n    const countdownTime = () => {\n        let startTime = time\n    }\n\n    useEffect(() => {\n        let intervalId;\n        if (isRunning && time != 0) {\n          // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n          intervalId = setInterval(() => setTime(time - 1), 10);\n        }\n        return () => clearInterval(intervalId);\n      }, [isRunning, time]);\n\n     // Minutes calculation\n     const minutes = Math.floor((time % 360000) / 6000);\n \n     // Seconds calculation\n     const seconds = Math.floor((time % 6000) / 100);\n \n     // Milliseconds calculation\n     const milliseconds = time % 100;\n \n\n    // Start and stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n        }\n    }\n    \n    // Reset timer\n    const reset = () => {\n        setTime(0);\n    };\n    \n    return (\n    <div>\n        <Screen    \n            minutes={minutes}\n            seconds={seconds}/>\n        <label>Your age:</label>\n        <input id=\"x\" name=\"age\" type=\"number\" />\n        <div className=\"grid-container\">\n            <Panel background-color=\"blue\">\n                <Button \n                    text={isRunning && time != 0 ? \"Pause\" : \"Start\"}\n                    onClick={startStop}/>\n                <Button \n                    text=\"Reset\"\n                    onClick={reset}/>\n            </Panel>\n        </div>\n    </div>\n    )\n};\n\nexport default Countdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}