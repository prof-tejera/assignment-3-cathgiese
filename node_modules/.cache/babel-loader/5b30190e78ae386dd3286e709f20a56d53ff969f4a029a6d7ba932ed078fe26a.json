{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stopwatch = () => {\n  _s();\n  // Store the time and button\n  const [isActive, setIsActive] = useState(false);\n  const [isPaused, setIsPaused] = useState(true);\n  const [activeType, setActiveType] = useState(null);\n  const [time, setTime] = useState(0);\n\n  // If the button is not pressed, display \"Start\"\n\n  const handleClick = type => {\n    if (type === activeType) {\n      setActiveType(null);\n    } else {\n      setActiveType(type);\n    }\n  };\n  // If the button is pressed, display \"Stop\" and start counting\n  // If the button is pressed again, display \"Start\" and stop counting\n  // If the reset button is pressed, clear the timer\n\n  // Get the time to be displayed on the screen\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Screen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        \"background-color\": \"blue\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: \"Start\",\n          active: activeType === \"Start\",\n          onClick: () => handleClick(\"Start\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Stop\",\n          active: activeType === \"Stop\",\n          onClick: () => handleClick(\"Stop\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Reset\",\n          active: activeType === \"Reset\",\n          onClick: () => handleClick(\"Reset\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Stopwatch, \"CgD+RbsysOoVeeE6PzoiJ+f17Bk=\");\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["useState","Button","Screen","Panel","jsxDEV","_jsxDEV","Stopwatch","_s","isActive","setIsActive","isPaused","setIsPaused","activeType","setActiveType","time","setTime","handleClick","type","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","active","onClick","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js"],"sourcesContent":["import { useState } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\n\nconst Stopwatch = () => {\n    // Store the time and button\n    const [isActive, setIsActive] = useState(false);\n    const [isPaused, setIsPaused] = useState(true);\n    const [activeType, setActiveType] = useState(null);\n    const [time, setTime] = useState(0);\n\n    // If the button is not pressed, display \"Start\"\n    \n\n    const handleClick = (type) => {\n        if (type === activeType) {\n          setActiveType(null);\n        } else {\n          setActiveType(type);\n        }\n    }\n    // If the button is pressed, display \"Stop\" and start counting\n    // If the button is pressed again, display \"Start\" and stop counting\n    // If the reset button is pressed, clear the timer\n    \n    // Get the time to be displayed on the screen\n    \n    return (\n    <div>\n        <Screen />\n        <div className=\"grid-container\">\n            <Panel background-color=\"blue\">\n                <Button \n                    text=\"Start\"\n                    active={activeType === \"Start\"}\n                    onClick={() => handleClick(\"Start\")}/>\n                <Button \n                    text=\"Stop\"\n                    active={activeType === \"Stop\"}\n                    onClick={() => handleClick(\"Stop\")}/>\n                <Button \n                    text=\"Reset\"\n                    active={activeType === \"Reset\"}\n                    onClick={() => handleClick(\"Reset\")}/>\n            </Panel>\n        </div>\n    </div>\n    )\n};\n\nexport default Stopwatch;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;;EAEnC;;EAGA,MAAMgB,WAAW,GAAIC,IAAI,IAAK;IAC1B,IAAIA,IAAI,KAAKL,UAAU,EAAE;MACvBC,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLA,aAAa,CAACI,IAAI,CAAC;IACrB;EACJ,CAAC;EACD;EACA;EACA;;EAEA;;EAEA,oBACAZ,OAAA;IAAAa,QAAA,gBACIb,OAAA,CAACH,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC3Bb,OAAA,CAACF,KAAK;QAAC,oBAAiB,MAAM;QAAAe,QAAA,gBAC1Bb,OAAA,CAACJ,MAAM;UACHuB,IAAI,EAAC,OAAO;UACZC,MAAM,EAAEb,UAAU,KAAK,OAAQ;UAC/Bc,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,OAAO;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC1CjB,OAAA,CAACJ,MAAM;UACHuB,IAAI,EAAC,MAAM;UACXC,MAAM,EAAEb,UAAU,KAAK,MAAO;UAC9Bc,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,MAAM;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACzCjB,OAAA,CAACJ,MAAM;UACHuB,IAAI,EAAC,OAAO;UACZC,MAAM,EAAEb,UAAU,KAAK,OAAQ;UAC/Bc,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,OAAO;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACf,EAAA,CA5CID,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}