{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/TimerProvider.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nexport const TimerContext = React.createContext({});\nconst TimerProvider = ({\n  children\n}) => {\n  const [timers, setTimers] = useState(window.location.hash ? JSON.parse(decodeURIComponent(window.location.hash).slice(1)) : []);\n  const [isRunning, setIsRunning] = useState(null);\n  const [totalTime, setTotalTime] = useState(localStorage.getItem(\"TotalTime\") ? parseInt(localStorage.getItem(\"TotalTime\")) : 0);\n  const [isReset, setIsReset] = useState(null);\n  const [isEditing, setIsEditing] = useState(null);\n\n  // Current running timer\n  const [activeTimerIndex, setActiveTimerIndex] = useState(0);\n  const totalTimeCalc = () => {\n    let globalCount = 0;\n    for (let i = 0; i < timers.length; i++) {\n      if (timers[i].status !== \"complete\") {\n        if (timers[i].type === \"XY\") {\n          const totalMin = timers[i].minutes * parseInt(timers[i].rounds);\n          const totalSec = timers[i].seconds * parseInt(timers[i].rounds);\n          globalCount += totalMin + totalSec;\n        } else if (timers[i].type === \"Tabata\") {\n          globalCount += timers[i].seconds;\n        } else {\n          globalCount += timers[i].minutes + timers[i].seconds;\n        }\n      }\n    }\n    setTotalTime(globalCount);\n  };\n  const nextTimer = () => {\n    if (activeTimerIndex === timers.length - 1) {\n      timers[activeTimerIndex].status = \"complete\";\n      setTimers(timers);\n      restart();\n    } else {\n      timers[activeTimerIndex].status = \"complete\";\n      timers[activeTimerIndex + 1].status = \"running\";\n      setActiveTimerIndex(activeTimerIndex + 1);\n      setTimers(timers);\n      totalTimeCalc();\n    }\n\n    // Update URL\n    window.location.hash = encodeURIComponent(JSON.stringify(timers));\n  };\n\n  // Restart timer\n  const restart = () => {\n    setIsReset(true);\n    setIsRunning(null);\n    setActiveTimerIndex(0);\n    timers.map(timer => timer.status = \"ready\");\n    timers[0].status = \"running\";\n    setTimers(timers);\n    setTotalTime(0);\n\n    // Update URL\n    window.location.hash = encodeURIComponent(JSON.stringify(timers));\n  };\n\n  // Start or stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else if (totalTime === 0) {\n      totalTimeCalc();\n      setIsRunning(true);\n      setIsReset(null);\n    } else {\n      setIsRunning(true);\n      setIsReset(null);\n    }\n\n    // Update URL\n    window.location.hash = encodeURIComponent(JSON.stringify(timers));\n  };\n\n  // Edit timer\n  const edit = ({\n    id\n  }) => {\n    setIsEditing(id);\n  };\n\n  // Delete from queue\n  const remove = ({\n    id\n  }) => {\n    if (timers.length === 1) {\n      setTimers([]);\n    } else {\n      const match = timers.map(timer => timer.id === id);\n      const i = match.indexOf(true);\n      if (i === 0) {\n        // Update timer list\n        const newTimers = timers.slice(1);\n        newTimers[0].status = \"running\";\n        setTimers(newTimers);\n      } else {\n        // Update timer list\n        setTimers([...timers.slice(0, i), ...timers.slice(i + 1)]);\n      }\n    }\n    setTotalTime(0);\n    setActiveTimerIndex(0);\n\n    // Update URL\n    window.location.hash = encodeURIComponent(JSON.stringify(timers));\n  };\n  return /*#__PURE__*/React.createElement(TimerContext.Provider, {\n    value: {\n      timers,\n      setTimers,\n      isRunning,\n      setIsRunning,\n      totalTime,\n      setTotalTime,\n      totalTimeCalc,\n      activeTimerIndex,\n      setActiveTimerIndex,\n      nextTimer,\n      restart,\n      startStop,\n      isReset,\n      setIsReset,\n      remove,\n      edit,\n      isEditing,\n      setIsEditing\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default TimerProvider;","map":{"version":3,"names":["React","useState","TimerContext","createContext","TimerProvider","children","timers","setTimers","window","location","hash","JSON","parse","decodeURIComponent","slice","isRunning","setIsRunning","totalTime","setTotalTime","localStorage","getItem","parseInt","isReset","setIsReset","isEditing","setIsEditing","activeTimerIndex","setActiveTimerIndex","totalTimeCalc","globalCount","i","length","status","type","totalMin","minutes","rounds","totalSec","seconds","nextTimer","restart","encodeURIComponent","stringify","map","timer","startStop","edit","id","remove","match","indexOf","newTimers","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/TimerProvider.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nexport const TimerContext = React.createContext({});\n\nconst TimerProvider = ({ children }) => {\n    const [timers, setTimers] = useState(window.location.hash ? JSON.parse(decodeURIComponent(window.location.hash).slice(1)):[]);\n    const [isRunning, setIsRunning] = useState(null);\n    const [totalTime, setTotalTime] = useState(localStorage.getItem(\"TotalTime\") ? parseInt(localStorage.getItem(\"TotalTime\")):0);\n    const [isReset, setIsReset] = useState(null);\n    const [isEditing, setIsEditing] = useState(null);\n\n    // Current running timer\n    const [activeTimerIndex, setActiveTimerIndex] = useState(0); \n    \n    const totalTimeCalc = () => {\n        let globalCount = 0\n\n        for (let i = 0; i < timers.length; i++) {\n            if (timers[i].status !== \"complete\"){\n                if (timers[i].type === \"XY\") {\n                    const totalMin = (timers[i].minutes * parseInt(timers[i].rounds))\n                    const totalSec = (timers[i].seconds * parseInt(timers[i].rounds))\n                    globalCount += (totalMin + totalSec)\n                }\n\n                else if (timers[i].type === \"Tabata\") {\n                    globalCount += timers[i].seconds\n                }\n\n                else {\n                    globalCount += (timers[i].minutes + timers[i].seconds)\n                }\n            }\n        }\n        setTotalTime(globalCount)\n    }\n    \n    const nextTimer = () => {\n        if (activeTimerIndex === timers.length-1) {\n            timers[activeTimerIndex].status = \"complete\"\n            setTimers(timers)\n            restart()\n        }\n        else {\n            timers[activeTimerIndex].status = \"complete\"\n            timers[activeTimerIndex+1].status = \"running\"\n            setActiveTimerIndex(activeTimerIndex+1)\n            setTimers(timers)\n            totalTimeCalc()\n        }\n\n        // Update URL\n        window.location.hash = encodeURIComponent(JSON.stringify(timers))\n    }\n\n    // Restart timer\n    const restart = () => {\n        setIsReset(true)\n        setIsRunning(null)\n        setActiveTimerIndex(0)\n        timers.map((timer) => timer.status = \"ready\")\n        timers[0].status = \"running\"\n        setTimers(timers)\n        setTotalTime(0)\n\n        // Update URL\n        window.location.hash = encodeURIComponent(JSON.stringify(timers))\n    }\n\n    // Start or stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } \n        else if (totalTime === 0){\n            totalTimeCalc()\n            setIsRunning(true)\n            setIsReset(null)\n        }\n        else {\n            setIsRunning(true)\n            setIsReset(null)\n        }\n\n        // Update URL\n        window.location.hash = encodeURIComponent(JSON.stringify(timers))\n    }\n\n    // Edit timer\n    const edit = ({id}) => {\n        setIsEditing(id)\n    }\n\n    // Delete from queue\n    const remove = ({id}) => {\n\n        if (timers.length === 1) {\n            setTimers([])\n        }\n\n        else {\n            const match = timers.map((timer) => timer.id === id)\n            const i = match.indexOf(true)\n\n            if (i === 0) {\n                // Update timer list\n                const newTimers = timers.slice(1)\n                newTimers[0].status = \"running\"\n                setTimers(newTimers)\n            }\n    \n            else {\n                // Update timer list\n                setTimers([\n                 ...timers.slice(0, i),\n                 ...timers.slice(i + 1),\n               ])\n            }\n        }\n\n        setTotalTime(0)\n        setActiveTimerIndex(0)\n\n        // Update URL\n        window.location.hash = encodeURIComponent(JSON.stringify(timers))\n    }\n\n    return (\n        <TimerContext.Provider\n            value={{\n                timers,\n                setTimers,\n                isRunning,\n                setIsRunning,\n                totalTime,\n                setTotalTime,\n                totalTimeCalc,\n                activeTimerIndex,\n                setActiveTimerIndex,\n                nextTimer,\n                restart,\n                startStop,\n                isReset,\n                setIsReset,\n                remove,\n                edit,\n                isEditing,\n                setIsEditing,\n            }}\n        >{children}</TimerContext.Provider>\n    )\n};\n\nexport default TimerProvider"],"mappings":"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"},"metadata":{},"sourceType":"module"}