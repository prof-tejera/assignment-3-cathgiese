{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/components/timers/Stopwatch.js\";\nimport React from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\nconst Stopwatch = ({\n  minutes,\n  seconds,\n  id,\n  status\n}) => {\n  // Store the time and button\n  const {\n    isRunning,\n    nextTimer,\n    isReset\n  } = useContext(TimerContext);\n  const [time, setTime] = useState(0);\n\n  // Credit for setInterval & math.floor:\n  // https://medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n\n  useEffect(() => {\n    let intervalId;\n    let totalTimeInterval;\n    if (isRunning && status === \"running\" && time >= 0) {\n      intervalId = setTimeout(() => {\n        setTime(time + 1);\n      }, 8);\n      totalTimeInterval = setTimeout(() => {\n        setTotalTime(totalTime - 1);\n      }, 8);\n    }\n    if (isRunning && time === minutes + seconds && status === \"running\") {\n      nextTimer();\n      setTime(0);\n    } else if (status === \"complete\" || isReset) {\n      setTime(0);\n    }\n    return () => clearTimeout(intervalId);\n  }, [isReset, isRunning, minutes, nextTimer, seconds, status, time]);\n\n  // // Minutes calculation\n  const minutesCalc = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const secondsCalc = Math.floor(time % 6000 / 100);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Stopwatch: \", minutes / 6000, \"m\", seconds / 100, \"s\", /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutesCalc,\n    seconds: secondsCalc,\n    displayStyle: status === \"running\" ? \"Default-display Running\" : status === \"complete\" ? \"Default-display Complete\" : \"Default-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n};\nexport default Stopwatch;","map":{"version":3,"names":["React","useState","useEffect","useContext","DisplayTime","TimerContext","Stopwatch","minutes","seconds","id","status","isRunning","nextTimer","isReset","time","setTime","intervalId","totalTimeInterval","setTimeout","setTotalTime","totalTime","clearTimeout","minutesCalc","Math","floor","secondsCalc","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","displayStyle"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/components/timers/Stopwatch.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\n\nconst Stopwatch = ({minutes, seconds, id, status}) => {\n    // Store the time and button\n    const {isRunning, nextTimer, isReset} = useContext(TimerContext)\n    const [time, setTime] = useState(0);\n\n    // Credit for setInterval & math.floor:\n    // https://medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n\n     useEffect(() => {\n        let intervalId;\n        let totalTimeInterval;\n\n        if (isRunning && status === \"running\" && time >= 0) {\n            intervalId = setTimeout(() => {setTime(time + 1)}, 8);\n            totalTimeInterval = setTimeout(() => {setTotalTime(totalTime - 1)}, 8);\n        }\n     \n        if (isRunning && time === (minutes+seconds) && status === \"running\") {\n            nextTimer()\n            setTime(0)\n        }\n\n        else if (status === \"complete\" || isReset){\n            setTime(0)\n        }\n\n        return () => clearTimeout(intervalId);\n        \n      }, [isReset, isRunning, minutes, nextTimer, seconds, status, time]);\n\n    \n    // // Minutes calculation\n    const minutesCalc = Math.floor((time % 360000) / 6000);\n\n    // Seconds calculation\n    const secondsCalc = Math.floor((time % 6000) / 100);\n\n    return (\n        <div className=\"grid-container\">\n            Stopwatch: {minutes/6000}m{seconds/100}s\n            <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}\n                displayStyle={status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\")}/>\n        </div>\n    )\n};\n\nexport default Stopwatch;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,WAAW,MAAM,oCAAoC;AAC5D,SAASC,YAAY,QAAQ,qBAAqB;AAElD,MAAMC,SAAS,GAAGA,CAAC;EAACC,OAAO;EAAEC,OAAO;EAAEC,EAAE;EAAEC;AAAM,CAAC,KAAK;EAClD;EACA,MAAM;IAACC,SAAS;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGV,UAAU,CAACE,YAAY,CAAC;EAChE,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAEnC;EACA;;EAECC,SAAS,CAAC,MAAM;IACb,IAAIc,UAAU;IACd,IAAIC,iBAAiB;IAErB,IAAIN,SAAS,IAAID,MAAM,KAAK,SAAS,IAAII,IAAI,IAAI,CAAC,EAAE;MAChDE,UAAU,GAAGE,UAAU,CAAC,MAAM;QAACH,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MAAA,CAAC,EAAE,CAAC,CAAC;MACrDG,iBAAiB,GAAGC,UAAU,CAAC,MAAM;QAACC,YAAY,CAACC,SAAS,GAAG,CAAC,CAAC;MAAA,CAAC,EAAE,CAAC,CAAC;IAC1E;IAEA,IAAIT,SAAS,IAAIG,IAAI,KAAMP,OAAO,GAACC,OAAQ,IAAIE,MAAM,KAAK,SAAS,EAAE;MACjEE,SAAS,CAAC,CAAC;MACXG,OAAO,CAAC,CAAC,CAAC;IACd,CAAC,MAEI,IAAIL,MAAM,KAAK,UAAU,IAAIG,OAAO,EAAC;MACtCE,OAAO,CAAC,CAAC,CAAC;IACd;IAEA,OAAO,MAAMM,YAAY,CAACL,UAAU,CAAC;EAEvC,CAAC,EAAE,CAACH,OAAO,EAAEF,SAAS,EAAEJ,OAAO,EAAEK,SAAS,EAAEJ,OAAO,EAAEE,MAAM,EAAEI,IAAI,CAAC,CAAC;;EAGrE;EACA,MAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAEV,IAAI,GAAG,MAAM,GAAI,IAAI,CAAC;;EAEtD;EACA,MAAMW,WAAW,GAAGF,IAAI,CAACC,KAAK,CAAEV,IAAI,GAAG,IAAI,GAAI,GAAG,CAAC;EAEnD,oBACId,KAAA,CAAA0B,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aACjB,EAAC1B,OAAO,GAAC,IAAI,EAAC,GAAC,EAACC,OAAO,GAAC,GAAG,EAAC,GACvC,eAAAR,KAAA,CAAA0B,aAAA,CAACtB,WAAW;IACRG,OAAO,EAAEe,WAAY;IACrBd,OAAO,EAAEiB,WAAY;IACrBS,YAAY,EAAExB,MAAM,KAAK,SAAS,GAAG,yBAAyB,GAAIA,MAAM,KAAK,UAAU,GAAG,0BAA0B,GAAG,iBAAmB;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAC9I,CAAC;AAEd,CAAC;AAED,eAAe3B,SAAS"},"metadata":{},"sourceType":"module"}