{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Tabata.js\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nconst Tabata = ({\n  work,\n  rest,\n  rounds\n}) => {\n  // Store the time and button\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(0);\n  const [workCount, setWorkCount] = useState(0);\n  const [restCount, setRestCount] = useState(0);\n  // const [rounds, setRounds] = useState(0);\n  const [roundsCount, setRoundsCount] = useState(0);\n  const [workStatus, setWorkStatus] = useState(null);\n  useEffect(() => {\n    let intervalId;\n    if (!isRunning && time === 0) {\n      setTime(seconds1 + seconds2);\n      setRoundsCount(rounds);\n    }\n    if (isRunning && time !== 0 && rounds > 0) {\n      // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    }\n    if (isRunning && workStatus && time === 0 && rounds > 0) {\n      setTime(restCount + 99);\n      setWorkStatus(null);\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    } else if (isRunning && workStatus === null && time === 0 && rounds > 0) {\n      setTime(workCount + 99);\n      setWorkStatus(true);\n      setRoundsCount(rounds - 1);\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, workStatus, time, rounds, restCount, workCount]);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // Start and stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n    }\n  };\n\n  // // Store rounds\n  // const handleRounds = e => {\n  //     setRoundsCount(e.target.value)\n  //     setRounds(e.target.value)\n  // }\n\n  // Reset timer\n  const reset = () => {\n    setIsRunning(null);\n    setTime(workCount);\n    setRoundsCount(rounds);\n  };\n\n  // Fast forward (clear) timer\n  const fastForward = () => {\n    setTime(0);\n    setRoundsCount(0);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    \"background-color\": \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Tabata\", /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: \"0\",\n    seconds: seconds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: isRunning && time !== 0 ? \"Pause\" : \"Start\",\n    onClick: startStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Reset\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \">>\",\n    onClick: fastForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Tabata;","map":{"version":3,"names":["React","useState","useEffect","Button","DisplayTime","Panel","Tabata","work","rest","rounds","isRunning","setIsRunning","time","setTime","workCount","setWorkCount","restCount","setRestCount","roundsCount","setRoundsCount","workStatus","setWorkStatus","intervalId","seconds1","seconds2","setInterval","clearInterval","seconds","Math","floor","startStop","reset","fastForward","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","minutes","text","onClick"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Tabata.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\n\nconst Tabata = ({work, rest, rounds}) => {\n    // Store the time and button\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(0);\n    const [workCount, setWorkCount] = useState(0);\n    const [restCount, setRestCount] = useState(0);\n    // const [rounds, setRounds] = useState(0);\n    const [roundsCount, setRoundsCount] = useState(0)\n    const [workStatus, setWorkStatus] = useState(null)\n\n    useEffect(() => {\n        let intervalId;\n\n        if (!isRunning && time === 0){\n            setTime(seconds1+seconds2)\n            setRoundsCount(rounds)\n        }\n\n        if (isRunning && time !==0 && rounds > 0) {\n            // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n            intervalId = setInterval(() => setTime(time - 1), 7);\n            }\n        if (isRunning && workStatus && time === 0 && rounds > 0) {\n            setTime(restCount+99)\n            setWorkStatus(null)\n            intervalId = setInterval(() => setTime(time - 1), 7);\n        }\n        else if (isRunning && workStatus === null && time === 0 && rounds > 0) {\n            setTime(workCount+99 )\n            setWorkStatus(true)\n            setRoundsCount(rounds-1) \n            intervalId = setInterval(() => setTime(time - 1), 7);\n        }\n\n        return () => clearInterval(intervalId);\n\n      }, [isRunning, workStatus, time, rounds, restCount, workCount]);\n \n    // Seconds calculation\n    const seconds = Math.floor((time % 6000) / 100);\n\n    // Start and stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n        }\n    }\n\n    // // Store rounds\n    // const handleRounds = e => {\n    //     setRoundsCount(e.target.value)\n    //     setRounds(e.target.value)\n    // }\n\n    // Reset timer\n    const reset = () => {\n        setIsRunning(null);\n        setTime(workCount)\n        setRoundsCount(rounds)\n    }\n\n    // Fast forward (clear) timer\n    const fastForward = () => {\n        setTime(0)\n        setRoundsCount(0)\n    }\n\n    return (\n    <div className=\"grid-container\">\n        <Panel background-color=\"blue\">\n        Tabata\n        <DisplayTime\n            minutes=\"0\"\n            seconds={seconds}/>\n        <Button \n            text={isRunning && time !== 0 ? \"Pause\" : \"Start\"}\n            onClick={startStop}/>\n        <Button \n            text=\"Reset\"\n            onClick={reset}/>\n        <Button \n            text=\">>\"\n            onClick={fastForward}/>\n            </Panel>\n        </div>\n    )\n};\n\nexport default Tabata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}