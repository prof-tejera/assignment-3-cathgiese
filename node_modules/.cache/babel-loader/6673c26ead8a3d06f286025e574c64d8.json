{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/XY.js\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\n// import Selector from \"../generic/Selector/Selector\";\n\nconst XY = ({\n  minutes,\n  seconds,\n  rounds\n}) => {\n  // Store the time and button\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(0);\n  // const [min, setMinutes] = useState(null);\n  // const [sec, setSeconds] = useState(null);\n  // const [rounds, setRounds] = useState(0);\n  const [roundsCount, setRoundsCount] = useState(0);\n  useEffect(() => {\n    let intervalId;\n    if (!isRunning && time === 0) {\n      setTime(minutes + seconds);\n      setRounds(rounds);\n    }\n    if (isRunning && time > 0) {\n      // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    } else if (isRunning && time === 0 && rounds > 1) {\n      setTime(minutes + seconds + 99);\n      setRounds(rounds - 1);\n      intervalId = setInterval(() => setTime(time - 1), 7);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time, minutes, seconds, rounds]);\n\n  // Minutes calculation\n  const minutesCalc = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const secondsCalc = Math.floor(time % 6000 / 100);\n\n  // Start and stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n    }\n  };\n\n  // // Store rounds\n  // const handleRounds = e => {\n  //     setRoundsCount(e.target.value)\n  //     setRounds(e.target.value)\n  // }\n\n  // Reset timer\n  const reset = () => {\n    setIsRunning(null);\n    setTime(minutes + seconds);\n    setRounds(roundsCount);\n  };\n\n  // Fast forward (clear) timer\n  const fastForward = () => {\n    setTime(0);\n    setRounds(0);\n  };\n\n  // // Show 59 numbers for minutes and seconds\n  // const timeNumbersList = [...Array(60).keys()]\n  // const timeNumbers = timeNumbersList.map(number =>\n  //     <option value={number} key={number}>{number}</option>)\n\n  // // Show max 30 rounds\n  // const roundNumbersList = [...Array(31).keys()]\n  // const roundNumbers = roundNumbersList.map(number =>\n  //     <option value={number} key={number}>{number}</option>)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    \"background-color\": \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutesCalc,\n    seconds: secondsCalc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: isRunning && time !== 0 ? \"Pause\" : \"Start\",\n    onClick: startStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Reset\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \">>\",\n    onClick: fastForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })));\n};\nexport default XY;","map":{"version":3,"names":["React","useState","useEffect","Button","DisplayTime","Panel","XY","minutes","seconds","rounds","isRunning","setIsRunning","time","setTime","roundsCount","setRoundsCount","intervalId","setRounds","setInterval","clearInterval","minutesCalc","Math","floor","secondsCalc","startStop","reset","fastForward","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/XY.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\n// import Selector from \"../generic/Selector/Selector\";\n\nconst XY = ({minutes, seconds, rounds}) => {\n    // Store the time and button\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(0);\n    // const [min, setMinutes] = useState(null);\n    // const [sec, setSeconds] = useState(null);\n    // const [rounds, setRounds] = useState(0);\n    const [roundsCount, setRoundsCount] = useState(0)\n\n    useEffect(() => {\n        let intervalId;\n\n        if (!isRunning && time === 0){\n            setTime(minutes+seconds)\n            setRounds(rounds)\n        }\n\n        if (isRunning && time > 0) {\n            // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n            intervalId = setInterval(() => setTime(time - 1), 7);\n            }\n        else if (isRunning && time === 0 && rounds > 1) {\n            setTime(minutes+seconds+99)\n            setRounds(rounds-1)\n            intervalId = setInterval(() => setTime(time - 1), 7);\n        }\n        return () => clearInterval(intervalId);\n\n      }, [isRunning, time, minutes, seconds, rounds]);\n\n    // Minutes calculation\n    const minutesCalc = Math.floor((time % 360000) / 6000);\n \n    // Seconds calculation\n    const secondsCalc = Math.floor((time % 6000) / 100);\n\n    // Start and stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n        }\n    }\n\n    // // Store rounds\n    // const handleRounds = e => {\n    //     setRoundsCount(e.target.value)\n    //     setRounds(e.target.value)\n    // }\n\n    // Reset timer\n    const reset = () => {\n        setIsRunning(null);\n        setTime(minutes + seconds);\n        setRounds(roundsCount)\n    }\n\n    // Fast forward (clear) timer\n    const fastForward = () => {\n        setTime(0)\n        setRounds(0)\n    }\n\n    // // Show 59 numbers for minutes and seconds\n    // const timeNumbersList = [...Array(60).keys()]\n    // const timeNumbers = timeNumbersList.map(number =>\n    //     <option value={number} key={number}>{number}</option>)\n\n    // // Show max 30 rounds\n    // const roundNumbersList = [...Array(31).keys()]\n    // const roundNumbers = roundNumbersList.map(number =>\n    //     <option value={number} key={number}>{number}</option>)\n\n    return (\n        <div className=\"grid-container\">\n        <Panel background-color=\"blue\">\n            {/* <Selector \n                label=\"min\"\n                onChange={e => setMinutes(e.target.value*6000)}\n                numbers={timeNumbers}/>\n            <Selector \n                label=\"sec\"\n                onChange={e => setSeconds(e.target.value*100)}\n                numbers={timeNumbers}/>\n            <Selector \n                label=\"rounds\"\n                onChange={handleRounds}\n                numbers={roundNumbers}/> */}\n            <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}/>\n            <Button \n                text={isRunning && time !== 0 ? \"Pause\" : \"Start\"}\n                onClick={startStop}/>\n            <Button \n                text=\"Reset\"\n                onClick={reset}/>\n            <Button \n                text=\">>\"\n                onClick={fastForward}/>\n            </Panel>\n        </div>\n    )\n};\n\nexport default XY;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}