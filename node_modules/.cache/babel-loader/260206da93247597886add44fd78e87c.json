{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/components/timers/Timer.js\";\nimport React from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\nconst Timer = ({\n  minutes,\n  seconds,\n  id,\n  status,\n  rounds,\n  type,\n  description,\n  work,\n  rest\n}) => {\n  const {\n    isRunning,\n    nextTimer,\n    isReset\n  } = useContext(TimerContext);\n  const [time, setTime] = useState(minutes + seconds);\n  const [roundsCount, setRoundsCount] = useState(rounds);\n  const [workStatus, setWorkStatus] = useState(true);\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && status === \"running\" && time >= 0) {\n      // Stopwatch\n      if (type === \"Stopwatch\") {\n        intervalId = setTimeout(() => {\n          setTime(time + 1);\n        }, 8);\n        if (isRunning && time === minutes + seconds && status === \"running\") {\n          nextTimer();\n          setTime(0);\n        } else if (status === \"complete\" || isReset) {\n          setTime(0);\n        }\n      }\n\n      // Countdown\n      if (type === \"Countdown\") {\n        if (isRunning && status === \"running\" && time > 0) {\n          intervalId = setTimeout(() => {\n            setTime(time - 1);\n          }, 8);\n        } else if (isRunning && time === 0 && status === \"running\") {\n          nextTimer();\n          setTime(minutes + seconds);\n        } else if (status === \"complete\" || isReset) {\n          setTime(minutes + seconds);\n        }\n      }\n\n      // XY\n      if (type === \"XY\") {\n        if (isRunning && status === \"running\" && time > 0) {\n          // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n          intervalId = setTimeout(() => setTime(time - 1), 8);\n        } else if (isRunning && status === \"running\" && time === 0 && rounds >= 1) {\n          setTime(minutes + seconds + 99);\n          setRoundsCount(roundsCount - 1);\n          intervalId = setTimeout(() => setTime(time - 1), 8);\n        }\n        if (roundsCount === 0) {\n          nextTimer();\n          setTime(minutes + seconds);\n          setRoundsCount(rounds);\n        } else if (status === \"complete\" || isReset) {\n          setTime(minutes + seconds);\n          setRoundsCount(rounds);\n        }\n      }\n\n      // Tabata\n      if (type === \"Tabata\") {\n        if (isRunning && status === \"running\" && time !== 0 && roundsCount > 0) {\n          // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n          intervalId = setTimeout(() => setTime(time - 1), 8);\n        }\n        if (isRunning && status === \"running\" && workStatus && time === 0 && roundsCount > 0) {\n          setTime(rest + 99);\n          setWorkStatus(null);\n          intervalId = setTimeout(() => setTime(time - 1), 8);\n        }\n        if (isRunning && status === \"running\" && workStatus === null && time === 0 && roundsCount > 0) {\n          setTime(work + 99);\n          setWorkStatus(true);\n          setRoundsCount(roundsCount - 1);\n          intervalId = setTimeout(() => setTime(time - 1), 8);\n        } else if (roundsCount === 0) {\n          nextTimer();\n          setTime(work);\n          setRoundsCount(rounds);\n          setWorkStatus(true);\n        } else if (status === \"complete\" || isReset) {\n          setTime(work);\n          setRoundsCount(rounds);\n          setWorkStatus(true);\n        }\n      }\n    }\n    return () => clearTimeout(intervalId);\n  }, [isRunning, type, nextTimer, status, time, minutes, seconds, rounds, roundsCount, isReset, rest, work, workStatus]);\n\n  // Minutes calculation\n  const minutesCalc = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const secondsCalc = Math.floor(time % 6000 / 100);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, description !== '' ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 35\n    }\n  }, description) : '', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, type), \":\", type === \"Tabata\" ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 34\n    }\n  }, work / 100, \"s work, \", rest / 100, \"s\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 79\n    }\n  }, minutes / 6000, \"m\", seconds / 100, \"s\"), type === \"Tabata\" || type === \"XY\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 56\n    }\n  }, \"Rounds:\"), \" \", rounds) : '', type === \"Tabata\" || type === \"XY\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 56\n    }\n  }, \"Rounds remaining:\"), \" \", roundsCount) : '', type === \"Tabata\" ? /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: \"0\",\n    seconds: seconds,\n    displayStyle: status === \"running\" ? \"Default-display Running\" : status === \"complete\" ? \"Default-display Complete\" : \"Default-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutesCalc,\n    seconds: secondsCalc,\n    displayStyle: status === \"running\" ? \"Default-display Running\" : status === \"complete\" ? \"Default-display Complete\" : \"Default-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }));\n};\nexport default Timer;","map":{"version":3,"names":["React","useState","useEffect","useContext","DisplayTime","TimerContext","Timer","minutes","seconds","id","status","rounds","type","description","work","rest","isRunning","nextTimer","isReset","time","setTime","roundsCount","setRoundsCount","workStatus","setWorkStatus","intervalId","setTimeout","clearTimeout","minutesCalc","Math","floor","secondsCalc","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","displayStyle"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/components/timers/Timer.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\n\nconst Timer = ({minutes, seconds, id, status, rounds, type, description, work, rest}) => {\n    const {isRunning, nextTimer, isReset} = useContext(TimerContext)\n    const [time, setTime] = useState(minutes+seconds);\n    const [roundsCount, setRoundsCount] = useState(rounds)\n    const [workStatus, setWorkStatus] = useState(true)\n\n    useEffect(() => {\n        let intervalId\n\n        if (isRunning && status === \"running\" && time >= 0) {\n        \n            // Stopwatch\n            if (type === \"Stopwatch\") {\n                intervalId = setTimeout(() => {setTime(time + 1)}, 8);\n            \n                if (isRunning && time === (minutes+seconds) && status === \"running\") {\n                    nextTimer()\n                    setTime(0)\n                }\n        \n                else if (status === \"complete\" || isReset){\n                    setTime(0)\n                }\n            }\n\n            // Countdown\n            if (type === \"Countdown\") {\n                if (isRunning && status === \"running\" && time > 0) {\n                    intervalId = setTimeout(() => {setTime(time - 1)}, 8);\n                }\n            \n                else if (isRunning && time === 0 && status === \"running\") {\n                    nextTimer()\n                    setTime(minutes+seconds)\n                }\n                else if (status === \"complete\" || isReset){\n                    setTime(minutes+seconds)\n                }\n            }\n\n            // XY\n            if (type === \"XY\") {\n                if (isRunning && status === \"running\" && time > 0) {\n                    // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n                    intervalId = setTimeout(() => setTime(time - 1), 8);\n                    }\n                else if (isRunning && status === \"running\" && time === 0 && rounds >= 1) {\n                    setTime(minutes+seconds+99)\n                    setRoundsCount(roundsCount-1)\n                    intervalId = setTimeout(() => setTime(time - 1), 8);\n                }\n                if (roundsCount === 0){\n                    nextTimer()\n                    setTime(minutes+seconds)\n                    setRoundsCount(rounds)\n                }\n                else if (status === \"complete\" || isReset){\n                    setTime(minutes+seconds)\n                    setRoundsCount(rounds)\n                }\n            }\n\n            // Tabata\n            if (type === \"Tabata\") {\n                if (isRunning && status === \"running\" && time !==0 && roundsCount > 0) {\n                    // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n                    intervalId = setTimeout(() => setTime(time - 1), 8);\n                    }\n        \n                if (isRunning && status === \"running\" && workStatus && time === 0 && roundsCount > 0) {\n                    setTime(rest+99)\n                    setWorkStatus(null)\n                    intervalId = setTimeout(() => setTime(time - 1), 8);\n                }\n        \n                if (isRunning && status === \"running\" && workStatus === null && time === 0 && roundsCount > 0) {\n                    setTime(work+99 )\n                    setWorkStatus(true)\n                    setRoundsCount(roundsCount-1) \n                    intervalId = setTimeout(() => setTime(time - 1), 8);\n                }\n                \n                else if(roundsCount === 0){\n                    nextTimer()\n                    setTime(work)\n                    setRoundsCount(rounds)\n                    setWorkStatus(true)\n                }\n        \n                else if (status === \"complete\" || isReset){\n                    setTime(work)\n                    setRoundsCount(rounds)\n                    setWorkStatus(true)\n                }\n            }\n        }\n        return () => clearTimeout(intervalId);\n\n    }, [isRunning,\n        type, \n        nextTimer, \n        status, \n        time, \n        minutes, \n        seconds, \n        rounds, \n        roundsCount, \n        isReset,  \n        rest, \n        work, \n        workStatus])\n\n     // Minutes calculation\n     const minutesCalc = Math.floor((time % 360000) / 6000);\n \n     // Seconds calculation\n     const secondsCalc = Math.floor((time % 6000) / 100);\n\n     return (\n        <div className=\"grid-container\">\n            {/* Description and times */}\n            {description !== '' ? <h3>{description}</h3> : ''}\n            <strong>{type}</strong>: \n            {type === \"Tabata\" ? <span>{work/100}s work, {rest/100}s</span> : <span>{minutes/6000}m{seconds/100}s</span>}\n            {type === \"Tabata\" || type === \"XY\" ? <div><strong>Rounds:</strong> {rounds}</div>: ''}\n            {type === \"Tabata\" || type === \"XY\" ? <div><strong>Rounds remaining:</strong> {roundsCount}</div>: ''}\n            \n            {/* Display with time */}\n            {type === \"Tabata\" ? \n                <DisplayTime\n                minutes=\"0\"\n                seconds={seconds}\n                displayStyle={status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\")}/> :\n                \n                <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}\n                displayStyle={status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\")}/>}\n            \n        </div>\n    )\n   \n}\n\nexport default Timer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}