{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Countdown.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport TimeSelector from \"../generic/TimeSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = () => {\n  _s();\n  // Store the time and button\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(null);\n  const [min, setMinutes] = useState(null);\n  const [sec, setSeconds] = useState(null);\n  useEffect(() => {\n    // const changeMinutes = e => {\n    //     console.log(e.target.value)\n    //     const minInput = (e.target.value) * 6000\n    //     console.log(minInput)\n    //     setMinutes(minInput)\n    //     console.log(min)\n    // }\n\n    // const changeSeconds = e => {\n    //     console.log(e.target.value)\n    //     const secInput = (e.target.value) * 100\n    //     console.log(secInput)\n    //     setSeconds(secInput)\n    //     console.log(sec)\n    // }\n\n    // const originalTime = () => {\n    //     const totalTime = (min + sec)\n    //     setTime(totalTime)\n    // }\n\n    let intervalId;\n    if (isRunning && time != null) {\n      const totalTime = min + sec;\n      setTime(totalTime);\n      console.log(time);\n      // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time - 1), 10);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time, min, sec]);\n\n  // Minutes calculation\n  const minutes = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // Start and stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n    }\n  };\n  const reset = () => {\n    setIsRunning(null);\n    setTime(min + sec);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TimeSelector, {\n      label: \"min\",\n      onChange: e => setMinutes(e.target.value * 6000)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TimeSelector, {\n      label: \"sec\",\n      onChange: e => setSeconds(e.target.value * 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DisplayTime, {\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        \"background-color\": \"blue\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: isRunning && time != 0 ? \"Pause\" : \"Start\",\n          onClick: startStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Reset\",\n          onClick: reset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \">>\",\n          onClick: () => setTime(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"Is3H33ItYPiAf+t2Ygj02QRCR14=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useState","useEffect","Button","DisplayTime","Panel","TimeSelector","jsxDEV","_jsxDEV","Countdown","_s","isRunning","setIsRunning","time","setTime","min","setMinutes","sec","setSeconds","intervalId","totalTime","console","log","setInterval","clearInterval","minutes","Math","floor","seconds","startStop","reset","children","label","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","className","text","onClick","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Countdown.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport TimeSelector from \"../generic/TimeSelect\";\n\nconst Countdown = () => {\n    // Store the time and button\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(null);\n    const [min, setMinutes] = useState(null);\n    const [sec, setSeconds] = useState(null);\n\n\n    useEffect(() => {\n        // const changeMinutes = e => {\n        //     console.log(e.target.value)\n        //     const minInput = (e.target.value) * 6000\n        //     console.log(minInput)\n        //     setMinutes(minInput)\n        //     console.log(min)\n        // }\n    \n        // const changeSeconds = e => {\n        //     console.log(e.target.value)\n        //     const secInput = (e.target.value) * 100\n        //     console.log(secInput)\n        //     setSeconds(secInput)\n        //     console.log(sec)\n        // }\n\n        \n    \n        // const originalTime = () => {\n        //     const totalTime = (min + sec)\n        //     setTime(totalTime)\n        // }\n\n        let intervalId;\n        if (isRunning && time != null) {\n            const totalTime = (min + sec)\n        setTime(totalTime)\n        console.log(time)\n          // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n          intervalId = setInterval(() => setTime(time - 1), 10);\n        }\n        return () => clearInterval(intervalId);\n      }, [isRunning, time, min, sec]);\n\n     // Minutes calculation\n     const minutes = Math.floor((time % 360000) / 6000);\n \n     // Seconds calculation\n     const seconds = Math.floor((time % 6000) / 100);\n\n    // Start and stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n        }\n    }\n\n    const reset = () => {\n        setIsRunning(null);\n        setTime(min + sec)\n    }\n\n    return (\n    <div>\n        <TimeSelector \n            label=\"min\"\n            onChange={e => setMinutes(e.target.value*6000)}/>\n        <TimeSelector \n            label=\"sec\"\n            onChange={e => setSeconds(e.target.value*100)}/>\n        <DisplayTime\n            minutes={minutes}\n            seconds={seconds}/>\n        <div className=\"grid-container\">\n            <Panel background-color=\"blue\">\n                <Button \n                    text={isRunning && time != 0 ? \"Pause\" : \"Start\"}\n                    onClick={startStop}/>\n                <Button \n                    text=\"Reset\"\n                    onClick={reset}/>\n                <Button \n                    text=\">>\"\n                    onClick={() => setTime(0)}/>\n            </Panel>\n        </div>\n    </div>\n    )\n};\n\nexport default Countdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}