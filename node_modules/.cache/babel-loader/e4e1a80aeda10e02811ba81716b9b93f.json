{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/components/timers/Timer.js\";\nimport React from 'react';\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\nconst Timer = ({\n  minutes,\n  seconds,\n  id,\n  status,\n  rounds,\n  type,\n  description\n}) => {\n  const {\n    isRunning,\n    nextTimer,\n    isReset\n  } = useContext(TimerContext);\n  const [time, setTime] = useState(minutes + seconds);\n  const [roundsCount, setRoundsCount] = useState(rounds);\n  useEffect(() => {\n    let intervalId;\n\n    // Stopwatch\n    if (type === \"stopwatch\") {\n      if (isRunning && status === \"running\" && time >= 0) {\n        intervalId = setTimeout(() => {\n          setTime(time + 1);\n        }, 8);\n      }\n      if (isRunning && time === minutes + seconds && status === \"running\") {\n        nextTimer();\n        setTime(0);\n      } else if (status === \"complete\" || isReset) {\n        setTime(0);\n      }\n    }\n\n    // Countdown\n    if (type === \"countdown\") {\n      if (isRunning && status === \"running\" && time > 0) {\n        intervalId = setTimeout(() => {\n          setTime(time - 1);\n        }, 8);\n      } else if (isRunning && time === 0 && status === \"running\") {\n        nextTimer();\n        setTime(minutes + seconds);\n      } else if (status === \"complete\" || isReset) {\n        setTime(minutes + seconds);\n      }\n    }\n\n    // XY\n    if (type === \"countdown\") {\n      if (isRunning && status === \"running\" && time > 0) {\n        // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      } else if (isRunning && status === \"running\" && time === 0 && rounds >= 1) {\n        setTime(minutes + seconds + 99);\n        setRoundsCount(roundsCount - 1);\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      }\n      if (roundsCount === 0) {\n        nextTimer();\n        setTime(minutes + seconds);\n        setRoundsCount(rounds);\n      } else if (status === \"complete\" || isReset) {\n        setTime(minutes + seconds);\n        setRoundsCount(rounds);\n      }\n    }\n\n    // Tabata\n    if (type === \"tabata\") {\n      if (isRunning && status === \"running\" && time !== 0 && roundsCount > 0) {\n        // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      }\n      if (isRunning && status === \"running\" && workStatus && time === 0 && roundsCount > 0) {\n        setTime(rest + 99);\n        setWorkStatus(null);\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      }\n      if (isRunning && status === \"running\" && workStatus === null && time === 0 && roundsCount > 0) {\n        setTime(work + 99);\n        setWorkStatus(true);\n        setRoundsCount(roundsCount - 1);\n        intervalId = setTimeout(() => setTime(time - 1), 8);\n      } else if (roundsCount === 0) {\n        nextTimer();\n        setTime(work);\n        setRoundsCount(rounds);\n        setWorkStatus(true);\n      } else if (status === \"complete\" || isReset) {\n        setTime(work);\n        setRoundsCount(rounds);\n        setWorkStatus(true);\n      }\n    }\n    return () => clearTimeout(intervalId);\n  }, [isRunning, nextTimer, status, time, minutes, seconds, isReset, rounds, roundsCount, isReset, isRunning, nextTimer, rest, rounds, roundsCount, work, workStatus]);\n\n  // Minutes calculation\n  const minutesCalc = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const secondsCalc = Math.floor(time % 6000 / 100);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, description !== '' ? {\n    description\n  } : '', type, \": \", minutes / 6000, \"m\", seconds / 100, \"s\", type === \"tabata\" || type === \"xy\" ? \"Rounds: \" + {\n    rounds\n  } : '', type === \"tabata\" || type === \"xy\" ? \"Rounds remaining: \" + {\n    roundsCount\n  } : '', /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutesCalc,\n    seconds: secondsCalc,\n    displayStyle: status === \"running\" ? \"Default-display Running\" : status === \"complete\" ? \"Default-display Complete\" : \"Default-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }));\n};\nexport default Timer;","map":{"version":3,"names":["React","useState","useEffect","useContext","DisplayTime","TimerContext","Timer","minutes","seconds","id","status","rounds","type","description","isRunning","nextTimer","isReset","time","setTime","roundsCount","setRoundsCount","intervalId","setTimeout","workStatus","rest","setWorkStatus","work","clearTimeout","minutesCalc","Math","floor","secondsCalc","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","displayStyle"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/components/timers/Timer.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect, useContext } from \"react\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport { TimerContext } from '../../TimerProvider';\n\nconst Timer = ({minutes, seconds, id, status, rounds, type, description}) => {\n    const {isRunning, nextTimer, isReset} = useContext(TimerContext)\n    const [time, setTime] = useState(minutes+seconds);\n    const [roundsCount, setRoundsCount] = useState(rounds)\n\n    useEffect(() => {\n        let intervalId\n        \n        // Stopwatch\n        if (type === \"stopwatch\") {\n            if (isRunning && status === \"running\" && time >= 0) {\n                intervalId = setTimeout(() => {setTime(time + 1)}, 8);\n            }\n         \n            if (isRunning && time === (minutes+seconds) && status === \"running\") {\n                nextTimer()\n                setTime(0)\n            }\n    \n            else if (status === \"complete\" || isReset){\n                setTime(0)\n            }\n        }\n\n        // Countdown\n        if (type === \"countdown\") {\n            if (isRunning && status === \"running\" && time > 0) {\n                intervalId = setTimeout(() => {setTime(time - 1)}, 8);\n            }\n         \n            else if (isRunning && time === 0 && status === \"running\") {\n                nextTimer()\n                setTime(minutes+seconds)\n            }\n            else if (status === \"complete\" || isReset){\n                setTime(minutes+seconds)\n            }\n        }\n\n        // XY\n        if (type === \"countdown\") {\n            if (isRunning && status === \"running\" && time > 0) {\n                // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n                intervalId = setTimeout(() => setTime(time - 1), 8);\n                }\n            else if (isRunning && status === \"running\" && time === 0 && rounds >= 1) {\n                setTime(minutes+seconds+99)\n                setRoundsCount(roundsCount-1)\n                intervalId = setTimeout(() => setTime(time - 1), 8);\n            }\n            if (roundsCount === 0){\n                nextTimer()\n                setTime(minutes+seconds)\n                setRoundsCount(rounds)\n            }\n            else if (status === \"complete\" || isReset){\n                setTime(minutes+seconds)\n                setRoundsCount(rounds)\n            }\n        }\n\n        // Tabata\n        if (type === \"tabata\") {\n            if (isRunning && status === \"running\" && time !==0 && roundsCount > 0) {\n                // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n                intervalId = setTimeout(() => setTime(time - 1), 8);\n                }\n    \n            if (isRunning && status === \"running\" && workStatus && time === 0 && roundsCount > 0) {\n                setTime(rest+99)\n                setWorkStatus(null)\n                intervalId = setTimeout(() => setTime(time - 1), 8);\n            }\n    \n            if (isRunning && status === \"running\" && workStatus === null && time === 0 && roundsCount > 0) {\n                setTime(work+99 )\n                setWorkStatus(true)\n                setRoundsCount(roundsCount-1) \n                intervalId = setTimeout(() => setTime(time - 1), 8);\n            }\n            \n            else if(roundsCount === 0){\n                nextTimer()\n                setTime(work)\n                setRoundsCount(rounds)\n                setWorkStatus(true)\n            }\n    \n            else if (status === \"complete\" || isReset){\n                setTime(work)\n                setRoundsCount(rounds)\n                setWorkStatus(true)\n            }\n        }\n        return () => clearTimeout(intervalId);\n\n    }, [isRunning, \n        nextTimer, \n        status, \n        time, \n        minutes, \n        seconds, \n        isReset, \n        rounds, \n        roundsCount, \n        isReset, \n        isRunning, \n        nextTimer, \n        rest, \n        rounds, \n        roundsCount, \n        work, \n        workStatus])\n\n     // Minutes calculation\n     const minutesCalc = Math.floor((time % 360000) / 6000);\n \n     // Seconds calculation\n     const secondsCalc = Math.floor((time % 6000) / 100);\n\n     return (\n        <div className=\"grid-container\">\n            {description !== '' ? {description} : ''}\n            {type}: {minutes/6000}m{seconds/100}s\n            {type === \"tabata\" || type === \"xy\" ? \"Rounds: \" + {rounds} : ''}\n            {type === \"tabata\" || type === \"xy\" ? \"Rounds remaining: \" + {roundsCount} : ''}\n            {/* <CountdownSelect /> */}\n            <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}\n                displayStyle={status === \"running\" ? \"Default-display Running\" : (status === \"complete\" ? \"Default-display Complete\" : \"Default-display\")}/>\n        </div>\n    )\n   \n}\n\nexport default Timer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}