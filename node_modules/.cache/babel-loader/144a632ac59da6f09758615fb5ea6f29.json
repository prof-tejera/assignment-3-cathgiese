{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Stopwatch.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { useState, useEffect, useContext } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport { TimerContext } from '../../TimerProvider';\nconst Delete = styled.div`\n  display: flex;\n  justify-content: right;\n`;\nconst Stopwatch = ({\n  minutes,\n  seconds\n}) => {\n  // Store the time and button\n  // const [isRunning, setIsRunning] = useState(null);\n  const {\n    isRunning,\n    setIsRunning\n  } = useContext(TimerContext);\n  const [time, setTime] = useState(0);\n\n  // Credit for setInterval & math.floor:\n  // https://medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && time <= minutes + seconds) {\n      // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time + 1), 7);\n    }\n    if (time >= minutes + seconds) {\n      setIsRunning(null);\n      clearInterval(intervalId);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, setIsRunning, time, minutes, seconds]);\n\n  // // Minutes calculation\n  const minutesCalc = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const secondsCalc = Math.floor(time % 6000 / 100);\n\n  // // Start and stop timer\n  // const startStop = () => {\n  //     if (isRunning) {\n  //         setIsRunning(null)\n  //     } else {\n  //         setIsRunning(true)\n  //     }\n  // }\n\n  // const reset = () => {\n  //     setIsRunning(null);\n  //     setTime(0);\n  // }\n\n  // // Fast forward (clear) timer\n  // const fastForward = () => {\n  //     setTime(0)\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    \"background-color\": \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Delete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), \"Stopwatch: \", minutes / 6000, \"m\", seconds / 100, \"s\", /*#__PURE__*/React.createElement(DisplayTime, {\n    minutes: minutesCalc,\n    seconds: secondsCalc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })));\n};\nexport default Stopwatch;","map":{"version":3,"names":["React","styled","useState","useEffect","useContext","Button","DisplayTime","Panel","TimerContext","Delete","div","Stopwatch","minutes","seconds","isRunning","setIsRunning","time","setTime","intervalId","setInterval","clearInterval","minutesCalc","Math","floor","secondsCalc","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/components/timers/Stopwatch.js"],"sourcesContent":["import React from 'react'\nimport styled from \"styled-components\";\nimport { useState, useEffect, useContext } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport { TimerContext } from '../../TimerProvider';\n\nconst Delete = styled.div`\n  display: flex;\n  justify-content: right;\n`;\n\nconst Stopwatch = ({minutes, seconds}) => {\n    // Store the time and button\n    // const [isRunning, setIsRunning] = useState(null);\n    const {isRunning, setIsRunning} = useContext(TimerContext)\n    const [time, setTime] = useState(0);\n\n    // Credit for setInterval & math.floor:\n    // https://medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n\n     useEffect(() => {\n        let intervalId;\n        if (isRunning && time <= (minutes + seconds)) {\n          // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n          intervalId = setInterval(() => setTime(time + 1), 7);\n         }\n         \n         if (time >= (minutes + seconds)) {\n            setIsRunning(null);\n            clearInterval(intervalId);\n        }\n        return () => clearInterval(intervalId);\n        \n      }, [isRunning, setIsRunning, time, minutes, seconds]);\n\n    \n    // // Minutes calculation\n    const minutesCalc = Math.floor((time % 360000) / 6000);\n\n    // Seconds calculation\n    const secondsCalc = Math.floor((time % 6000) / 100);\n\n    // // Start and stop timer\n    // const startStop = () => {\n    //     if (isRunning) {\n    //         setIsRunning(null)\n    //     } else {\n    //         setIsRunning(true)\n    //     }\n    // }\n\n    // const reset = () => {\n    //     setIsRunning(null);\n    //     setTime(0);\n    // }\n\n    // // Fast forward (clear) timer\n    // const fastForward = () => {\n    //     setTime(0)\n    // }\n    \n    return (\n        <div className=\"grid-container\">\n        <Panel background-color=\"blue\">\n            <Delete>\n                <Button \n                    text=\"-\"/>\n            </Delete>\n            Stopwatch: {minutes/6000}m{seconds/100}s\n            <DisplayTime\n                minutes={minutesCalc}\n                seconds={secondsCalc}/>\n        \n            {/* <Button \n                text={isRunning ? \"Pause\" : \"Start\"}\n                onClick={startStop}/> */}\n            {/* <Button \n                text=\"Reset\"\n                onClick={reset}/> */}\n            {/* <Button \n                text=\">>\"\n                onClick={fastForward}/> */}\n        </Panel>\n        </div>\n    )\n};\n\nexport default Stopwatch;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,WAAW,MAAM,oCAAoC;AAC5D,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SAASC,YAAY,QAAQ,qBAAqB;AAElD,MAAMC,MAAM,GAAGR,MAAM,CAACS,GAAI;AAC1B;AACA;AACA,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAC;EAACC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACtC;EACA;EACA,MAAM;IAACC,SAAS;IAAEC;EAAY,CAAC,GAAGX,UAAU,CAACI,YAAY,CAAC;EAC1D,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;;EAEnC;EACA;;EAECC,SAAS,CAAC,MAAM;IACb,IAAIe,UAAU;IACd,IAAIJ,SAAS,IAAIE,IAAI,IAAKJ,OAAO,GAAGC,OAAQ,EAAE;MAC5C;MACAK,UAAU,GAAGC,WAAW,CAAC,MAAMF,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD;IAEA,IAAIA,IAAI,IAAKJ,OAAO,GAAGC,OAAQ,EAAE;MAC9BE,YAAY,CAAC,IAAI,CAAC;MAClBK,aAAa,CAACF,UAAU,CAAC;IAC7B;IACA,OAAO,MAAME,aAAa,CAACF,UAAU,CAAC;EAExC,CAAC,EAAE,CAACJ,SAAS,EAAEC,YAAY,EAAEC,IAAI,EAAEJ,OAAO,EAAEC,OAAO,CAAC,CAAC;;EAGvD;EACA,MAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAEP,IAAI,GAAG,MAAM,GAAI,IAAI,CAAC;;EAEtD;EACA,MAAMQ,WAAW,GAAGF,IAAI,CAACC,KAAK,CAAEP,IAAI,GAAG,IAAI,GAAI,GAAG,CAAC;;EAEnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACIhB,KAAA,CAAAyB,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BhC,KAAA,CAAAyB,aAAA,CAAClB,KAAK;IAAC,oBAAiB,MAAM;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BhC,KAAA,CAAAyB,aAAA,CAAChB,MAAM;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACHhC,KAAA,CAAAyB,aAAA,CAACpB,MAAM;IACH4B,IAAI,EAAC,GAAG;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACT,CAAC,eACE,EAACpB,OAAO,GAAC,IAAI,EAAC,GAAC,EAACC,OAAO,GAAC,GAAG,EAAC,GACvC,eAAAb,KAAA,CAAAyB,aAAA,CAACnB,WAAW;IACRM,OAAO,EAAES,WAAY;IACrBR,OAAO,EAAEW,WAAY;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAWvB,CACF,CAAC;AAEd,CAAC;AAED,eAAerB,SAAS"},"metadata":{},"sourceType":"module"}