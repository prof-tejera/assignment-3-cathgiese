{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Tabata.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport Selector from \"../generic/Selector/Selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tabata = () => {\n  _s();\n  // Store the time and button\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(0);\n  const [workCount, setWorkCount] = useState(0);\n  const [restCount, setRestCount] = useState(0);\n  const [rounds, setRounds] = useState(0);\n  const [roundsCount, setRoundsCount] = useState(0);\n  const [workStatus, setWorkStatus] = useState(null);\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && time != 0 && rounds > 0) {\n      // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time - 1), 10);\n    }\n    if (isRunning && workStatus && time === 0 && rounds > 0) {\n      setTime(restCount + 99);\n      setWorkStatus(null);\n      intervalId = setInterval(() => setTime(time - 1), 10);\n    } else if (isRunning && workStatus === null && time === 0 && rounds > 0) {\n      setTime(workCount + 99);\n      setWorkStatus(true);\n      setRounds(rounds - 1);\n      intervalId = setInterval(() => setTime(time - 1), 10);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, workStatus, time, rounds]);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // Start and stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n    }\n  };\n\n  // Store rounds\n  const handleRounds = e => {\n    setRoundsCount(e.target.value);\n    setRounds(e.target.value);\n  };\n\n  // Reset timer\n  const reset = () => {\n    setIsRunning(null);\n    setTime(workCount);\n    setRounds(roundsCount);\n  };\n\n  // Fast forward (clear) timer\n  const fastForward = () => {\n    setTime(0);\n    setRounds(0);\n  };\n\n  // Show 59 numbers for minutes and seconds\n  const timeNumbersList = [...Array(60).keys()];\n  const timeNumbers = timeNumbersList.map(number => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: number,\n    children: number\n  }, number, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this));\n\n  // Show max 30 rounds\n  const roundNumbersList = [...Array(31).keys()];\n  const roundNumbers = roundNumbersList.map(number => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: number,\n    children: number\n  }, number, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      \"background-color\": \"blue\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        label: \"sec\",\n        onChange: e => setWorkCount(e.target.value * 100),\n        numbers: timeNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Selector, {\n        label: \"sec\",\n        onChange: e => setRestCount(e.target.value * 100),\n        numbers: timeNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Selector, {\n        label: \"rounds\",\n        onChange: handleRounds,\n        numbers: roundNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayTime, {\n        minutes: \"00\",\n        seconds: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: isRunning && time != 0 ? \"Pause\" : \"Start\",\n        onClick: startStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Reset\",\n        onClick: reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \">>\",\n        onClick: fastForward\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Tabata, \"gRsnrMTAI59SJcPeJXQDT/5b2Mk=\");\n_c = Tabata;\nexport default Tabata;\nvar _c;\n$RefreshReg$(_c, \"Tabata\");","map":{"version":3,"names":["useState","useEffect","Button","DisplayTime","Panel","Selector","jsxDEV","_jsxDEV","Tabata","_s","isRunning","setIsRunning","time","setTime","workCount","setWorkCount","restCount","setRestCount","rounds","setRounds","roundsCount","setRoundsCount","workStatus","setWorkStatus","intervalId","setInterval","clearInterval","seconds","Math","floor","startStop","handleRounds","e","target","value","reset","fastForward","timeNumbersList","Array","keys","timeNumbers","map","number","children","fileName","_jsxFileName","lineNumber","columnNumber","roundNumbersList","roundNumbers","className","label","onChange","numbers","minutes","text","onClick","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Tabata.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport Selector from \"../generic/Selector/Selector\";\n\nconst Tabata = () => {\n    // Store the time and button\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(0);\n    const [workCount, setWorkCount] = useState(0);\n    const [restCount, setRestCount] = useState(0);\n    const [rounds, setRounds] = useState(0);\n    const [roundsCount, setRoundsCount] = useState(0)\n    const [workStatus, setWorkStatus] = useState(null)\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isRunning && time !=0 && rounds > 0) {\n            // setting time from 0 to 1 every 10 millisecond using javascript setInterval method\n            intervalId = setInterval(() => setTime(time - 1), 10);\n            }\n        if (isRunning && workStatus && time === 0 && rounds > 0) {\n            setTime(restCount+99)\n            setWorkStatus(null)\n            intervalId = setInterval(() => setTime(time - 1), 10);\n        }\n        else if (isRunning && workStatus === null && time === 0 && rounds > 0) {\n            setTime(workCount+99 )\n            setWorkStatus(true)\n            setRounds(rounds-1)\n            intervalId = setInterval(() => setTime(time - 1), 10);\n        }\n\n        return () => clearInterval(intervalId);\n\n      }, [isRunning, workStatus, time, rounds]);\n \n    // Seconds calculation\n    const seconds = Math.floor((time % 6000) / 100);\n\n    // Start and stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n        }\n    }\n\n    // Store rounds\n    const handleRounds = e => {\n        setRoundsCount(e.target.value)\n        setRounds(e.target.value)\n    }\n\n    // Reset timer\n    const reset = () => {\n        setIsRunning(null);\n        setTime(workCount)\n        setRounds(roundsCount)\n    }\n\n    // Fast forward (clear) timer\n    const fastForward = () => {\n        setTime(0)\n        setRounds(0)\n    }\n\n    // Show 59 numbers for minutes and seconds\n    const timeNumbersList = [...Array(60).keys()]\n    const timeNumbers = timeNumbersList.map(number =>\n        <option value={number} key={number}>{number}</option>)\n\n    // Show max 30 rounds\n    const roundNumbersList = [...Array(31).keys()]\n    const roundNumbers = roundNumbersList.map(number =>\n        <option value={number} key={number}>{number}</option>)\n\n    return (\n    <div className=\"grid-container\">\n        <Panel background-color=\"blue\">\n        <Selector \n            label=\"sec\"\n            onChange={e => setWorkCount(e.target.value*100)}\n            numbers={timeNumbers}/>\n        <Selector \n            label=\"sec\"\n            onChange={e => setRestCount(e.target.value*100)}\n            numbers={timeNumbers}/>\n        <Selector \n            label=\"rounds\"\n            onChange={handleRounds}\n            numbers={roundNumbers}/>\n        <DisplayTime\n            minutes=\"00\"\n            seconds={seconds}/>\n        <Button \n            text={isRunning && time != 0 ? \"Pause\" : \"Start\"}\n            onClick={startStop}/>\n        <Button \n            text=\"Reset\"\n            onClick={reset}/>\n        <Button \n            text=\">>\"\n            onClick={fastForward}/>\n            </Panel>\n        </div>\n    )\n};\n\nexport default Tabata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}