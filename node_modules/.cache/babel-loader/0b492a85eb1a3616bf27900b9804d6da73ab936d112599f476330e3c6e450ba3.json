{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"../generic/Button\";\nimport Screen from \"../generic/Screen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stopwatch = () => {\n  _s();\n  // Store the time\n  const [time, setTime] = useState();\n\n  // If the button is not pressed, display \"Start\"\n  const [activeType, setActiveType] = useState(null);\n  const handleClick = type => {\n    if (type === activeType) {\n      setActiveType(null);\n    } else {\n      setActiveType(type);\n    }\n  };\n  // If the button is pressed, display \"Stop\" and start counting\n  // If the button is pressed again, display \"Start\" and stop counting\n  // If the reset button is pressed, clear the timer\n\n  // Get the time to be displayed on the screen\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Screen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        text: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Stopwatch, \"CaDJCRw3kMXSyz3ebDbtY7zhBOU=\");\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["useState","Button","Screen","jsxDEV","_jsxDEV","Stopwatch","_s","time","setTime","activeType","setActiveType","handleClick","type","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js"],"sourcesContent":["import { useState } from \"react\";\nimport Button from \"../generic/Button\";\nimport Screen from \"../generic/Screen\";\n\nconst Stopwatch = () => {\n    // Store the time\n    const [time, setTime] = useState()\n    \n    // If the button is not pressed, display \"Start\"\n    const [activeType, setActiveType] = useState(null);\n\n    const handleClick = (type) => {\n        if (type === activeType) {\n        setActiveType(null);\n        } else {\n        setActiveType(type);\n        }\n    };\n    // If the button is pressed, display \"Stop\" and start counting\n    // If the button is pressed again, display \"Start\" and stop counting\n    // If the reset button is pressed, clear the timer\n    \n    // Get the time to be displayed on the screen\n    \n    return (\n    <div>\n        <Screen />\n        <div className=\"grid-container\">\n            <Button text=\"Start\"/>\n            <Button text=\"Stop\" />\n        </div>\n    </div>\n    )\n};\n\nexport default Stopwatch;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;;EAElC;EACA,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMW,WAAW,GAAIC,IAAI,IAAK;IAC1B,IAAIA,IAAI,KAAKH,UAAU,EAAE;MACzBC,aAAa,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACPA,aAAa,CAACE,IAAI,CAAC;IACnB;EACJ,CAAC;EACD;EACA;EACA;;EAEA;;EAEA,oBACAR,OAAA;IAAAS,QAAA,gBACIT,OAAA,CAACF,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVb,OAAA;MAAKc,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC3BT,OAAA,CAACH,MAAM;QAACkB,IAAI,EAAC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtBb,OAAA,CAACH,MAAM;QAACkB,IAAI,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACX,EAAA,CA7BID,SAAS;AAAAe,EAAA,GAATf,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}