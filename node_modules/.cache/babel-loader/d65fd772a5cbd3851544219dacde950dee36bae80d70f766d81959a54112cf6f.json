{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stopwatch = () => {\n  _s();\n  // Store the time and button\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(0);\n\n  // Credit for useEffect & math.floor:\n  https:\n  //medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n  useEffect(() => {\n    let intervalId;\n    if (isRunning) {\n      // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n      intervalId = setInterval(() => setTime(time + 1), 10);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, time]);\n\n  // Minutes calculation\n  const minutes = Math.floor(time % 360000 / 6000);\n\n  // Seconds calculation\n  const seconds = Math.floor(time % 6000 / 100);\n\n  // Milliseconds calculation\n  const milliseconds = time % 100;\n\n  // Start and stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n    }\n  };\n\n  // Reset timer\n  const reset = () => {\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Screen, {\n      minutes: minutes,\n      seconds: seconds,\n      milliseconds: milliseconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        \"background-color\": \"blue\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: isRunning ? \"Stop\" : \"Start\",\n          onClick: startStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Reset\",\n          onClick: reset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Stopwatch, \"NKYsiCiyxH6WbX9NM06sIPnAS8E=\");\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["useState","useEffect","Button","Screen","Panel","jsxDEV","_jsxDEV","Stopwatch","_s","isRunning","setIsRunning","time","setTime","https","intervalId","setInterval","clearInterval","minutes","Math","floor","seconds","milliseconds","startStop","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","onClick","_c","$RefreshReg$"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-1-cathgiese/src/components/timers/Stopwatch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Button from \"../generic/Button/Button\";\nimport Screen from \"../generic/Screen\";\nimport Panel from \"../generic/Panel\";\n\nconst Stopwatch = () => {\n    // Store the time and button\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(0);\n\n    // Credit for useEffect & math.floor:\n    https://medium.com/how-to-react/simple-way-to-create-a-stopwatch-in-react-js-bcc0e08e041e\n    useEffect(() => {\n        let intervalId;\n        if (isRunning) {\n          // setting time from 0 to 1 every 10 milisecond using javascript setInterval method\n          intervalId = setInterval(() => setTime(time + 1), 10);\n        }\n        return () => clearInterval(intervalId);\n      }, [isRunning, time]);\n\n    // Minutes calculation\n    const minutes = Math.floor((time % 360000) / 6000);\n\n    // Seconds calculation\n    const seconds = Math.floor((time % 6000) / 100);\n\n    // Milliseconds calculation\n    const milliseconds = time % 100;\n\n    // Start and stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n        }\n    }\n    \n    // Reset timer\n    const reset = () => {\n        setTime(0);\n    };\n    \n    return (\n    <div>\n        <Screen \n            minutes={minutes}\n            seconds={seconds}\n            milliseconds={milliseconds}/>\n        <div className=\"grid-container\">\n            <Panel background-color=\"blue\">\n                <Button \n                    text={isRunning ? \"Stop\" : \"Start\"}\n                    onClick={startStop}/>\n                <Button \n                    text=\"Reset\"\n                    onClick={reset}/>\n            </Panel>\n        </div>\n    </div>\n    )\n};\n\nexport default Stopwatch;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;;EAEnC;EACAa,KAAK;EAAC;EACNZ,SAAS,CAAC,MAAM;IACZ,IAAIa,UAAU;IACd,IAAIL,SAAS,EAAE;MACb;MACAK,UAAU,GAAGC,WAAW,CAAC,MAAMH,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IACvD;IACA,OAAO,MAAMK,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACL,SAAS,EAAEE,IAAI,CAAC,CAAC;;EAEvB;EACA,MAAMM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAER,IAAI,GAAG,MAAM,GAAI,IAAI,CAAC;;EAElD;EACA,MAAMS,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAER,IAAI,GAAG,IAAI,GAAI,GAAG,CAAC;;EAE/C;EACA,MAAMU,YAAY,GAAGV,IAAI,GAAG,GAAG;;EAE/B;EACA,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIb,SAAS,EAAE;MACXC,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACHA,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAMa,KAAK,GAAGA,CAAA,KAAM;IAChBX,OAAO,CAAC,CAAC,CAAC;EACd,CAAC;EAED,oBACAN,OAAA;IAAAkB,QAAA,gBACIlB,OAAA,CAACH,MAAM;MACHc,OAAO,EAAEA,OAAQ;MACjBG,OAAO,EAAEA,OAAQ;MACjBC,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjCtB,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC3BlB,OAAA,CAACF,KAAK;QAAC,oBAAiB,MAAM;QAAAoB,QAAA,gBAC1BlB,OAAA,CAACJ,MAAM;UACH4B,IAAI,EAAErB,SAAS,GAAG,MAAM,GAAG,OAAQ;UACnCsB,OAAO,EAAET;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACzBtB,OAAA,CAACJ,MAAM;UACH4B,IAAI,EAAC,OAAO;UACZC,OAAO,EAAER;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzDID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA2Df,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}