{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/TimerProvider.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nexport const TimerContext = React.createContext({});\nconst TimerProvider = ({\n  children\n}) => {\n  const [timers, setTimers] = useState([]);\n  const [isRunning, setIsRunning] = useState(null);\n  const [time, setTime] = useState(0);\n\n  // Current running timer\n  const [activeTimerIndex, setActiveTimerIndex] = useState(0);\n  const nextTimer = () => {\n    if (activeTimerIndex === timers.length - 1) {\n      timers[activeTimerIndex].status = \"complete\";\n      setTimers(timers);\n      restart();\n    } else {\n      timers[activeTimerIndex].status = \"complete\";\n      timers[activeTimerIndex + 1].status = \"running\";\n      setActiveTimerIndex(activeTimerIndex + 1);\n      setTimers(timers);\n    }\n  };\n\n  // Restart timer\n  const restart = () => {\n    nextTimer();\n    setIsRunning(null);\n    setActiveTimerIndex(0);\n    const timersCopy = timers;\n    timersCopy.map(timer => timer.status = \"ready\");\n    timersCopy[0].status = \"running\";\n    console.log(timers);\n    setTimers(timersCopy);\n  };\n\n  // Start or stop timer\n  const startStop = () => {\n    if (isRunning) {\n      setIsRunning(null);\n    } else {\n      setIsRunning(true);\n    }\n  };\n  return /*#__PURE__*/React.createElement(TimerContext.Provider, {\n    value: {\n      // functions go here\n      timers,\n      setTimers,\n      isRunning,\n      setIsRunning,\n      time,\n      setTime,\n      activeTimerIndex,\n      setActiveTimerIndex,\n      nextTimer,\n      restart,\n      startStop\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default TimerProvider;","map":{"version":3,"names":["React","useState","TimerContext","createContext","TimerProvider","children","timers","setTimers","isRunning","setIsRunning","time","setTime","activeTimerIndex","setActiveTimerIndex","nextTimer","length","status","restart","timersCopy","map","timer","console","log","startStop","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-2-cathgiese/src/TimerProvider.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nexport const TimerContext = React.createContext({});\n\nconst TimerProvider = ({ children }) => {\n    const [timers, setTimers] = useState([]);\n    const [isRunning, setIsRunning] = useState(null);\n    const [time, setTime] = useState(0);\n\n    // Current running timer\n    const [activeTimerIndex, setActiveTimerIndex] = useState(0); \n    \n    const nextTimer = () => {\n        if (activeTimerIndex === timers.length-1) {\n            timers[activeTimerIndex].status = \"complete\"\n            setTimers(timers)\n            restart()\n        }\n        else {\n            timers[activeTimerIndex].status = \"complete\"\n            timers[activeTimerIndex+1].status = \"running\"\n            setActiveTimerIndex(activeTimerIndex+1)\n            setTimers(timers)\n        }\n    }\n\n    // Restart timer\n    const restart = () => {\n        nextTimer()\n        setIsRunning(null)\n        setActiveTimerIndex(0)\n        const timersCopy = timers\n        timersCopy.map((timer) => timer.status = \"ready\")\n        timersCopy[0].status = \"running\"\n        console.log(timers)\n        setTimers(timersCopy)\n    }\n\n    // Start or stop timer\n    const startStop = () => {\n        if (isRunning) {\n            setIsRunning(null)\n        } else {\n            setIsRunning(true)\n        }\n    }\n\n    return (\n        <TimerContext.Provider\n            value={{\n                // functions go here\n                timers,\n                setTimers,\n                isRunning,\n                setIsRunning,\n                time,\n                setTime,\n                activeTimerIndex,\n                setActiveTimerIndex,\n                nextTimer,\n                restart,\n                startStop,\n            }}\n        >{children}</TimerContext.Provider>\n    )\n};\n\nexport default TimerProvider"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,YAAY,GAAGF,KAAK,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;;EAEnC;EACA,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAE3D,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIF,gBAAgB,KAAKN,MAAM,CAACS,MAAM,GAAC,CAAC,EAAE;MACtCT,MAAM,CAACM,gBAAgB,CAAC,CAACI,MAAM,GAAG,UAAU;MAC5CT,SAAS,CAACD,MAAM,CAAC;MACjBW,OAAO,CAAC,CAAC;IACb,CAAC,MACI;MACDX,MAAM,CAACM,gBAAgB,CAAC,CAACI,MAAM,GAAG,UAAU;MAC5CV,MAAM,CAACM,gBAAgB,GAAC,CAAC,CAAC,CAACI,MAAM,GAAG,SAAS;MAC7CH,mBAAmB,CAACD,gBAAgB,GAAC,CAAC,CAAC;MACvCL,SAAS,CAACD,MAAM,CAAC;IACrB;EACJ,CAAC;;EAED;EACA,MAAMW,OAAO,GAAGA,CAAA,KAAM;IAClBH,SAAS,CAAC,CAAC;IACXL,YAAY,CAAC,IAAI,CAAC;IAClBI,mBAAmB,CAAC,CAAC,CAAC;IACtB,MAAMK,UAAU,GAAGZ,MAAM;IACzBY,UAAU,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACJ,MAAM,GAAG,OAAO,CAAC;IACjDE,UAAU,CAAC,CAAC,CAAC,CAACF,MAAM,GAAG,SAAS;IAChCK,OAAO,CAACC,GAAG,CAAChB,MAAM,CAAC;IACnBC,SAAS,CAACW,UAAU,CAAC;EACzB,CAAC;;EAED;EACA,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIf,SAAS,EAAE;MACXC,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACHA,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,oBACIT,KAAA,CAAAwB,aAAA,CAACtB,YAAY,CAACuB,QAAQ;IAClBC,KAAK,EAAE;MACH;MACApB,MAAM;MACNC,SAAS;MACTC,SAAS;MACTC,YAAY;MACZC,IAAI;MACJC,OAAO;MACPC,gBAAgB;MAChBC,mBAAmB;MACnBC,SAAS;MACTG,OAAO;MACPM;IACJ,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACJ3B,QAAgC,CAAC;AAE3C,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}