{"ast":null,"code":"var _jsxFileName = \"/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/utils/helpers.js\";\n// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\nimport React from \"react\";\nexport const makeId = () => {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < 20; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\n// Selector numbers (minutes)\nconst minNumbersList = [...Array(60).keys()];\nexport const minNumbers = minNumbersList.map(number => /*#__PURE__*/React.createElement(\"option\", {\n  value: number,\n  key: number,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, number));\n\n// Selector numbers (seconds)\nconst secNumbersList = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55];\nexport const secNumbers = secNumbersList.map(number => /*#__PURE__*/React.createElement(\"option\", {\n  value: number,\n  key: number,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n}, number));\n\n// Tabata rounds selector. Show max 30 rounds\nconst roundNumbersList = [...Array(31).keys()];\nexport const roundNumbers = roundNumbersList.slice(1).map(number => /*#__PURE__*/React.createElement(\"option\", {\n  value: number,\n  key: number,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 8\n  }\n}, number));\n\n// Timer type select\nconst timersTypeList = [\"Stopwatch\", \"Countdown\", \"XY\", \"Tabata\"];\nexport const timersTypes = timersTypeList.map(type => /*#__PURE__*/React.createElement(\"option\", {\n  value: type,\n  key: type,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 8\n  }\n}, type));","map":{"version":3,"names":["React","makeId","result","characters","charactersLength","length","i","charAt","Math","floor","random","minNumbersList","Array","keys","minNumbers","map","number","createElement","value","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","secNumbersList","secNumbers","roundNumbersList","roundNumbers","slice","timersTypeList","timersTypes","type"],"sources":["/Users/catherinegiese/Documents/GitHub/assignment-3-cathgiese/src/utils/helpers.js"],"sourcesContent":["// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\nimport React from \"react\";\n\nexport const makeId = () => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < 20; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n// Selector numbers (minutes)\nconst minNumbersList = [...Array(60).keys()]\n\nexport const minNumbers = minNumbersList.map(number =>\n    <option value={number} key={number}>{number}</option>)\n\n// Selector numbers (seconds)\nconst secNumbersList = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55]\nexport const secNumbers = secNumbersList.map(number =>\n        <option value={number} key={number}>{number}</option>)\n\n// Tabata rounds selector. Show max 30 rounds\nconst roundNumbersList = [...Array(31).keys()]\nexport const roundNumbers = roundNumbersList.slice(1).map(number =>\n       <option value={number} key={number}>{number}</option>)\n\n// Timer type select\nconst timersTypeList = [\"Stopwatch\", \"Countdown\", \"XY\", \"Tabata\"]\nexport const timersTypes = timersTypeList.map(type =>\n       <option value={type} key={type}>{type}</option>)\n\n\n"],"mappings":";AAAA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACxB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,UAAU,GAAG,gEAAgE;EACjF,IAAIC,gBAAgB,GAAGD,UAAU,CAACE,MAAM;EACxC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3BJ,MAAM,IAAIC,UAAU,CAACI,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EAC3E;EACA,OAAOF,MAAM;AACf,CAAC;;AAEH;AACA,MAAMS,cAAc,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;AAE5C,OAAO,MAAMC,UAAU,GAAGH,cAAc,CAACI,GAAG,CAACC,MAAM,iBAC/ChB,KAAA,CAAAiB,aAAA;EAAQC,KAAK,EAAEF,MAAO;EAACG,GAAG,EAAEH,MAAO;EAAAI,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAET,MAAe,CAAC,CAAC;;AAE1D;AACA,MAAMU,cAAc,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAClE,OAAO,MAAMC,UAAU,GAAGD,cAAc,CAACX,GAAG,CAACC,MAAM,iBAC3ChB,KAAA,CAAAiB,aAAA;EAAQC,KAAK,EAAEF,MAAO;EAACG,GAAG,EAAEH,MAAO;EAAAI,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAET,MAAe,CAAC,CAAC;;AAE9D;AACA,MAAMY,gBAAgB,GAAG,CAAC,GAAGhB,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;AAC9C,OAAO,MAAMgB,YAAY,GAAGD,gBAAgB,CAACE,KAAK,CAAC,CAAC,CAAC,CAACf,GAAG,CAACC,MAAM,iBACzDhB,KAAA,CAAAiB,aAAA;EAAQC,KAAK,EAAEF,MAAO;EAACG,GAAG,EAAEH,MAAO;EAAAI,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAET,MAAe,CAAC,CAAC;;AAE7D;AACA,MAAMe,cAAc,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC;AACjE,OAAO,MAAMC,WAAW,GAAGD,cAAc,CAAChB,GAAG,CAACkB,IAAI,iBAC3CjC,KAAA,CAAAiB,aAAA;EAAQC,KAAK,EAAEe,IAAK;EAACd,GAAG,EAAEc,IAAK;EAAAb,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,GAAEQ,IAAa,CAAC,CAAC"},"metadata":{},"sourceType":"module"}